<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2016-04-30 09:35"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Diken Dine. Kendine. Kendi Kendine.</title>
<link>https://dikendine.wordpress.com</link>
<description>"If you can't explain it simply, you don't understand it well enough." -Someone</description>
<pubDate>Sat, 30 Apr 2016 09:35:29 +0000</pubDate>
<language>tr</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://dikendine.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>raicem</wp:author_login>
  <wp:author_email>unalancem@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[raicem]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>315933224</wp:term_id>
  <wp:category_nicename>arduino-bisiklet-isigi</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Arduino Bisiklet Işığı]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>6511</wp:term_id>
  <wp:category_nicename>diger</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Diğer]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>248864</wp:term_id>
  <wp:category_nicename>ssd</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[SSD]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>7439</wp:term_id>
  <wp:category_nicename>teknoloji</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Teknoloji]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>134289</wp:term_id>
  <wp:tag_slug>arduino</wp:tag_slug>
  <wp:tag_name><![CDATA[arduino]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>272153865</wp:term_id>
  <wp:tag_slug>arduino-interrupt</wp:tag_slug>
  <wp:tag_name><![CDATA[arduino interrupt]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5027159</wp:term_id>
  <wp:tag_slug>aritma</wp:tag_slug>
  <wp:tag_name><![CDATA[arıtma]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6135204</wp:term_id>
  <wp:tag_slug>atik-su</wp:tag_slug>
  <wp:tag_name><![CDATA[Atık su]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3228311</wp:term_id>
  <wp:tag_slug>cevre-muhendisligi</wp:tag_slug>
  <wp:tag_name><![CDATA[Çevre mühendisliği]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>49701364</wp:term_id>
  <wp:tag_slug>baris-bicakci</wp:tag_slug>
  <wp:tag_name><![CDATA[barış bıçakçı]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10786144</wp:term_id>
  <wp:tag_slug>bike-light</wp:tag_slug>
  <wp:tag_name><![CDATA[bike light]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>70770351</wp:term_id>
  <wp:tag_slug>bir-sure-yere-paralel-gittikten-sonra</wp:tag_slug>
  <wp:tag_name><![CDATA[bir süre yere paralel gittikten sonra]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>302197833</wp:term_id>
  <wp:tag_slug>bisiklet-isigi</wp:tag_slug>
  <wp:tag_name><![CDATA[bisiklet ışığı]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>74180602</wp:term_id>
  <wp:tag_slug>bit-shifting</wp:tag_slug>
  <wp:tag_name><![CDATA[bit shifting]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>84051075</wp:term_id>
  <wp:tag_slug>debouncing</wp:tag_slug>
  <wp:tag_name><![CDATA[debouncing]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9650</wp:term_id>
  <wp:tag_slug>delay</wp:tag_slug>
  <wp:tag_name><![CDATA[delay]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>34848102</wp:term_id>
  <wp:tag_slug>direncler</wp:tag_slug>
  <wp:tag_name><![CDATA[dirençler]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>335052</wp:term_id>
  <wp:tag_slug>elliott-smith</wp:tag_slug>
  <wp:tag_name><![CDATA[elliott smith]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>33657867</wp:term_id>
  <wp:tag_slug>hareketli-ortalama</wp:tag_slug>
  <wp:tag_name><![CDATA[hareketli ortalama]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1390014</wp:term_id>
  <wp:tag_slug>interrupts</wp:tag_slug>
  <wp:tag_name><![CDATA[interrupts]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>315933332</wp:term_id>
  <wp:tag_slug>laptop-sogutucular</wp:tag_slug>
  <wp:tag_name><![CDATA[laptop soğutucular]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1242230</wp:term_id>
  <wp:tag_slug>millis</wp:tag_slug>
  <wp:tag_name><![CDATA[millis]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>797502</wp:term_id>
  <wp:tag_slug>moving-average</wp:tag_slug>
  <wp:tag_name><![CDATA[moving average]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8578106</wp:term_id>
  <wp:tag_slug>pull-down</wp:tag_slug>
  <wp:tag_name><![CDATA[pull-down]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1004384</wp:term_id>
  <wp:tag_slug>pull-up</wp:tag_slug>
  <wp:tag_name><![CDATA[pull-up]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>281005</wp:term_id>
  <wp:tag_slug>resistors</wp:tag_slug>
  <wp:tag_name><![CDATA[resistors]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>82731403</wp:term_id>
  <wp:tag_slug>rolling-average</wp:tag_slug>
  <wp:tag_name><![CDATA[rolling average]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9660</wp:term_id>
  <wp:tag_slug>toefl</wp:tag_slug>
  <wp:tag_name><![CDATA[Toefl]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>22006</wp:term_id>
  <wp:tag_slug>ingilizce</wp:tag_slug>
  <wp:tag_name><![CDATA[İngilizce]]></wp:tag_name>
</wp:tag>
<wp:term>
  <wp:term_id>302201339</wp:term_id>
  <wp:term_taxonomy>nav_menu</wp:term_taxonomy>
  <wp:term_slug>hakkinda</wp:term_slug>
  <wp:term_name><![CDATA[Hakkında]]></wp:term_name>
</wp:term>
<wp:term>
  <wp:term_id>315934267</wp:term_id>
  <wp:term_taxonomy>nav_menu</wp:term_taxonomy>
  <wp:term_slug>menu-1</wp:term_slug>
  <wp:term_name><![CDATA[Menü 1]]></wp:term_name>
</wp:term>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://s2.wp.com/i/buttonw-com.png</url>
		<title>Diken Dine. Kendine. Kendi Kendine.</title>
		<link>https://dikendine.wordpress.com</link>
	</image>
	<item>
  <title>Sensörlü Bisiklet Işığı Yaparak Arduino'ya Giriş -1</title>
  <link>https://dikendine.wordpress.com/2014/10/17/sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-1/</link>
  <pubDate>Fri, 17 Oct 2014 22:30:33 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.wordpress.com/?p=3</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Uzun zamandır bisiklete biniyorum ve bu sürede tercihim hep tek veya çift led'li basit çakar ışıklar oldu. Çünkü önünüzü aydınlatacak bir ışık hem büyük, hem ağır hem de bence pek mantıklı değil. Ya da en azından şarj etmek için harcanan enerjiyi hak etmiyor. Onların yerine başkaları tarafından rahatça görülebilmemi sağlayacak ufak çakar ışıkları tercih ettim. Bu ufak olanlar da her zaman işinizi görmüyor elbette. Daha doğrusu daha enteresanlaştırılabileceğini (Türkçe'nin Almanca'dan farkı?) düşünüyorum. İşte bu düşüncelerin Arduino ile birleşmesiyle işe yarayabilitesi olan ama büyük ihtimalle yaramayacak bir şey yapmaya karar verdim kısıtlı Ardunio ve elektronik bilgimle. Olay da bu değil mi zaten? Yap ve bir kenara at. Elinden 100 tane ürün çıkarsa belki 1 tanesi işe yarar bir şey olur.</p>
<p style="text-align:justify;">Biliyorum, bisiklet ve Arduino birlikte iyi erimiyor. Hele de yukarıda büyük kalıplı ışıklardan dem vurmuşken. Arduino ev için ufak bir edevat gibi gözükse de bisiklet üzerine takılacak bir şey değil. Oralara da geleceğiz ama önce temelleri öğrenelim.</p>
<p style="text-align:justify;">Sadede gelirsek, ben bu bisiklet ışığının, ışık sensörlü olmasını istiyorum. Çok büyük bir icat olacağından değil de, havalı bir ürün olacağını düşündüğümden. Bir de ışık sensörlerinin oldukça ucuz olmasından. Ve belki de, milyonda bir ihtimal de olsa, işe yarayabilir bir ürünün çıkma ihtimalinden dolayı bunun üzerine gitmek istiyorum.</p>
Fikir basitçe şu: basit çakar ışığınız normal koşullar altında işini yapmaya ve çakmaya devam edecek. Ancak kendisini çok karanlık bir ortamda bulursa, mesela sokak ışıklandırmasının olmadığı veya bozuk olduğu bir bölümde, çakma işlevini sona erdirip sürekli yanar hale gelecek. Sadece bu kadar. İki led on metre önünüzü aydınlatmayacak ama karanlıkta en azından bir şey.

Önceden eklemeliyim, Arduino ve elektronik bilgim kısıtlı ve çoğunlukla bir işe kalkışıp boza boza öğrenmeyi tercih ediyorum şeyleri. Bu blogun amaçlarından biri de öğrenme sürecime bir teşvik oluşturması. Yazarken öğreneceğim yani.

Gereken malzemeleri de verelim. Öncelikle bir Arduino lazım. En standardından Arduino Uno olur. Maksat öğrenmek. Ancak bisiklete takma aşamasına kadar gelirse bu proje, Arduino Nano da süper iş görür. Elbette yine bu projenin aslı için pahalı ve büyük ama yine de gidona takınca sırıtmaz. Ondan sonra, bir kaç LDR, bir tutam led, isteğe bağlı olarak düğme ve bu kadar. Pil konusunu ben de bilmiyorum, yaparken öğreneceğiz.

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3</wp:post_id>
  <wp:post_date>2014-10-17 22:30:33</wp:post_date>
  <wp:post_date_gmt>2014-10-17 22:30:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1</wp:comment_id>
    <wp:comment_author><![CDATA[Sensörlü Bisiklet Işığı Yaparak Arduino’ya Giriş -2 | Diken Dine. Kendine. Kendi Kendine.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://dikendine.wordpress.com/2014/11/25/sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-2/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.246</wp:comment_author_IP>
    <wp:comment_date>2014-11-26 10:19:49</wp:comment_date>
    <wp:comment_date_gmt>2014-11-26 10:19:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] 1. Bölüm: Projenin amacı ve genel bir giriş.  [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1416997189.5225460529327392578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1416997274</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1416997274.3617889881134033203125;s:7:"message";s:45:"raicem changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"raicem";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2</wp:comment_id>
    <wp:comment_author><![CDATA[Sensörlü Bisiklet Işığı Bölüm 3: Buton Debounce, Pull-Up ve Pull-Down Dirençler | Diken Dine. Kendine. Kendi Kendine.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.138</wp:comment_author_IP>
    <wp:comment_date>2014-11-28 21:03:37</wp:comment_date>
    <wp:comment_date_gmt>2014-11-28 21:03:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] 1. Bölüm: Projenin amacı ve genel bir giriş.  [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417208617.8926279544830322265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417213156.687244892120361328125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417249172</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417249172.11923694610595703125;s:7:"message";s:45:"raicem changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"raicem";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>4</wp:comment_id>
    <wp:comment_author><![CDATA[Sensörlü Bisiklet Işığı Bölüm 4: Farklı Modlar ve Işık Sensörü | Diken Dine. Kendine. Kendi Kendine.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://dikendine.wordpress.com/2014/11/29/sensorlu-bisiklet-isigi-bolum-4-farkli-modlar-ve-isik-sensoru/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.150</wp:comment_author_IP>
    <wp:comment_date>2014-11-29 15:19:21</wp:comment_date>
    <wp:comment_date_gmt>2014-11-29 15:19:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] 1. Bölüm: Projenin amacı ve genel bir giriş.  [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417274361.555635929107666015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417274444</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417274444.98295497894287109375;s:7:"message";s:45:"raicem changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"raicem";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Unuttuklarını Kendine Sakla</title>
  <link>https://dikendine.wordpress.com/2014/10/17/unuttuklarini-kendine-sakla/</link>
  <pubDate>Fri, 17 Oct 2014 22:15:35 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.wordpress.com/?p=5</guid>
  <description/>
  <content:encoded><![CDATA[Elliott Smith'le tanışmasını The Royal Tenenbaums'a borçlu olan binlerce kişiden biriyim. 90'larda Kadıköy'de takılmadığımız için kimse bizi suçlayamaz. Ancak Elliott Smith ile ilişkimi uzunca bir süre The Needle in the Hay'den öteye geçiremediğim için, çıplak ayakla legoya basmak ile ıslak ekmek yemek arasında kalan aralıktaki cezaları kabul edebilirim.

Gariptir, külliyatına baştan ya da en büyük klasiklerden değil de Figure 8 albümünden başladım. Jon Brion'ın hiç bir zaman yayınlanmayan ama Youtube sayesinde değerlenen programında Son of Sam ile başladı takıntı. Hem dinleyerek, hem çalmaya çalışarak. Halen inanılmaz bir Elliott Smith şarkısı olduğunu düşünürüm. Akorlarıyla ve sözleriyle. Bir seri katilin lakabını taşıması ve sözlerinin de gerçek Son of Sam olan David Berkowitz'in ağzından yazılmış gibi gelmesi her zaman ürkütür.

Elliott Smith zaman zaman anaakım damarlarına bassa da nedense bizde akla "90'lar Kadıköy'ü"nü getiren bir etkiye sahip. Kalın deri bileklikler, duvar önünde poz vermeler, dağınık ve tekrar edilemez fontlar. Ancak o günlerle birebir tanık olmamış birisi için Figure 8 ve XO albümlerinin anlaşılması gereken başka tarafları da var: Elliott Smith, '95 yılında fırlamış, dönemin harbici Hipster barınağı Portland'dan bağımsız plak şirketiyle bir albüm çıkarmış ve namını o şekilde yürütmüş. Ama bütün bunlar 5 sene içinde değişmiş. Elliott 1999 yılında Oscar adayı olmuş, Dreamworks'ten iki albüm çıkarmış ve işin daha çılgın tarafı, milyonlar tarafından beğenilecek bu albümleri yaparken, bir kere bile tekleyip arkasındaki indie geçmişine takılmamış bir tip. Portland'da akustik gitarı ile kendi başına albüm kaydeden adamdan, Abbey Road stüdyolarında albüm kaydeden adama geçişte eli bir kez bile titrememiş ve harbici Hipsterları bu özelliği ile tedirginliğe düşürmüş.

O günlere tanık olmadım, ben de bilmiyorum. Sadece tüm zamanların en çok tartışılan ancak aslında tartışılmasına mahal bile verilmemesi gereken sitesi Pitchfork'un kurucusu Ryan Schreiber'ın yalancısıyım. Schreiber, Figure 8 eleştirisinde, resmen zamanın ruhunu, Zeitgeist'i pompalamış ve döneminden indie müzik camiyasının Elliott'un bu yetenekleri karşısında yaşadığı şaşkınlığı fevkaladenin fevkinde anlatmış. Bir albüm eleştirisinin illa o albümle sınırla kalması gerekmediğini kanıtlamış.  <a href="http://pitchfork.com/reviews/albums/7267-figure-8/" target="_blank">Burdan okuyun. </a>

İlk iki albümse yine bir dürtükleme sonrası geldi. Pitchfork'ta geçen sene, Elliott Smith'in 10. ölüm yıldönümünde çıkan <a href="http://pitchfork.com/features/articles/9246-elliott-smith/">Oral History yazısı</a> bu iki albüme, hatta Elliott Smith'in erken dönemlerinde Heatmiser ile kaydettiği şeylere dalma fırsatını sundu önüme. Yazı elbette ki Amerikalıların hazırladığı bir Oral History olduğu için muhteşem. Akıyor gidiyor. Elliott Smith'in sadece bir şarkısını duymuş olsanız bile okuyun.

Not: Bu Oral History geyiğini açıklamak gerekli mi bilmiyorum. Belgeselin yazılı olan türevi diyebilirim. Pek çok insanın bir olay/kişi etrafında verdiği demeçler bir yazar tarafından derleniyor ve kronolojik olarak yazılıyor. Henüz Türkçe'de böyle bir şeye tanık olmadım. Zaten bu kategoriyi keşfedişim de 2012'de Grantland'de<a href="http://grantland.com/features/an-oral-history-malice-palace/"> İndiana Pacers - Detroit Pistons kavgasının anlatıldığı Oral History'ydi</a>. Halen hayatımda okuduğum en akıcı ve sürükleyici metinlerden biridir.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>5</wp:post_id>
  <wp:post_date>2014-10-17 22:15:35</wp:post_date>
  <wp:post_date_gmt>2014-10-17 22:15:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>unuttuklarini-kendine-sakla</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="diger"><![CDATA[Diğer]]></category>
  <category domain="post_tag" nicename="elliott-smith"><![CDATA[elliott smith]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>"Bir Süre Yere Paralel Gittikten Sonra" Okuma Rehberi</title>
  <link>https://dikendine.wordpress.com/2014/11/14/bir-sure-yere-paralel-gittikten-sonra-okuma-rehberi/</link>
  <pubDate>Fri, 14 Nov 2014 17:17:57 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.wordpress.com/?p=16</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Eğer siz de benim gibiyseniz ve kitaba hızlıca dahil olan karakterlerin kontrolünü kaybediyorsanız, Barış Bıçakçı'nın Bir Süre Yere Paralel Gittikten Sonra kitabını okurken kafanız karışabilir, hatta karışmasa bile yüzünüze fırlatılan karakterlerin nereye ait olduğunu çözene kadar huzurunuz kaçabilir.</p>
<p style="text-align:justify;">Bunları yazmamın sebebi, kitaba yöneltilen bir eleştiri değil. Hatta bu karmaşıklık hoşuma gitti ilk kez okurken. Sadece benim gibi okumayı bitirdikten sonra bir de olaylara tepeden bakayim demek isteyenler için basit bir grafik yaptım. Kitapta bulunan çoğu karakterin (mesela Ahmet'in babası ile annesini almadım pek önemsiz kaçtıkları için) birbiriyle bağlantısını açıklıyor çok fazla (hatta bence hiç) spoiler vermeden.</p>
<p style="text-align:justify;">Buyrun:</p>
<p style="text-align:justify;"><a href="https://dikendine.files.wordpress.com/2014/11/paralel.jpg"><img class="alignnone  wp-image-17" src="https://dikendine.files.wordpress.com/2014/11/paralel.jpg?w=300" alt="paralel" width="622" height="481" /></a></p>
<p style="text-align:justify;">Bir aile ağacı değil bu elbette. O yüzden o şekilde yorumlamayın. Aile fertleri siyah oklar ile, aile dışı ilişkiler kırmızı oklar ile gösterildi. Başak'ın iki tane kardeşi yok yani, biliyorum yanlış okumadım kitabı.</p>
<p style="text-align:justify;">Bu grafiğe bakınca farkettiğim garip bir şey, kitabın merkezinde Başak varmış gibi gözükmesine rağmen, ağacın en çok budaklandığı karakter Umut. Umut'un arkadaşının çoçuğu bile hatırı sayılır derecede anılıyor kitapta. Belki Barış Bıçakçı'nın bize bir mesajıdır.</p>
<p style="text-align:justify;"></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>2014-11-14 17:17:57</wp:post_date>
  <wp:post_date_gmt>2014-11-14 17:17:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bir-sure-yere-paralel-gittikten-sonra-okuma-rehberi</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="baris-bicakci"><![CDATA[barış bıçakçı]]></category>
  <category domain="post_tag" nicename="bir-sure-yere-paralel-gittikten-sonra"><![CDATA[bir süre yere paralel gittikten sonra]]></category>
  <category domain="category" nicename="diger"><![CDATA[Diğer]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[17]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>paralel</title>
  <link>https://dikendine.wordpress.com/2014/11/14/bir-sure-yere-paralel-gittikten-sonra-okuma-rehberi/paralel/</link>
  <pubDate>Fri, 14 Nov 2014 17:04:40 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/paralel.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2014-11-14 17:04:40</wp:post_date>
  <wp:post_date_gmt>2014-11-14 17:04:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>paralel</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>16</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/paralel.jpg</wp:attachment_url>
</item>
<item>
  <title>Sensörlü Bisiklet Işığı Yaparak Arduino’ya Giriş -2</title>
  <link>https://dikendine.wordpress.com/2014/11/25/sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-2/</link>
  <pubDate>Tue, 25 Nov 2014 21:15:45 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.wordpress.com/?p=21</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;"><a href="http://dikendine.wordpress.com/2014/10/17/sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-1/">1. Bölüm: Projenin amacı ve genel bir giriş. </a></p>
<p style="text-align:justify;">- Bu yazıda Arduino'ya giriş mahiyetinde led'lerimizi bağlayıp ilk basit kodu upload edeceğiz. -</p>
<p style="text-align:justify;">Gerekli malzemeleri edindiysek, deneyselleşmeye başlayabiliriz demektir. İnternette inanılmaz boyutlara ulaşan Arduino kaynaklarını göz önüne alarak çok detaylı olarak "Arduino nedir?" kafasına girmek istemiyorum. Ancak blogun üstündeki yazıyı görüyorsunuz: "Eğer basitçe anlatamıyorsan, anlamamışsındır". Feynman'dan Einstein'a kadar geniş yelpazede bilim adamına atfedilen bu söze saygı duyalım ve açıklamaya çalışalım.</p>
<p style="text-align:justify;">Arduino, üzerinde bulunan mikrodenetleyiciyi programlamamızı sağlayan bir geliştirme platformudur. Neden bu kadar popülerdir? Çünkü bir mikrodenetleyicinin kodlanması aşamasında ortaya çıkan ayrı bir programlayıcı bulma (mikrodenetleyicileri direk bilgisayara takamazsınız, bağlantı için gereken programlayıcı Arduino kartının üzerinde hazırdır), onun sürücülerini yükleme,  denenmesi gereken bir prototip için uygun voltajı ayarlamaya uğraşma (Arduino'nun kendi gerilim düşürücüsü vardır), ya da karmaşık C kodlarıyla cebelleşme derdini ortadan kaldırır. Her ne kadar kullandığımız dil C olsa da, Arduino IDE yazılımını kullanarak oluşturacağımız programlarda, Arduino projesinde çalışan mühendislerin bizler için önceden hazırladığı, işimizi kolaylaştıracak fonksiyonlar bizim için yeterli olacak. Neyse, geri kalanları da ilerledikçe öğreniriz.</p>
<p style="text-align:justify;">Arduino'yu programlamadan önce bisiklet ışığını ışık yapacak LED'lerimizi takalım.  İçimden gelen sesi dinleyerek iki adet LEDtakmaya karar verdim bu ufak proje için, ama elbette bir tane LED de uygundur. Arduino'nun 13 adet dijital pininden herhangi iki tanesini kullanabiliriz ledlerimiz için. Sadece 13. çıkışı kullanmamalıyız, o çıkışın kendine has dahili direnci bizim kendi dirençlerimizi seçmemize engel olacaktır.</p>
<p style="text-align:justify;">Arduino'nun 5 voltluk çıkışı LED'lerin 2 veya 3 voltluk çalışma aralığına fazla geleceğinden dolayı, direnç kullanmamız gerekmekte. Şimdilik ledinizin zarar görmemesi açısından 560 ohm veya 1k ohm direnç takıp sadece kodumuzun çalıştığını kontrol edeceğiz ama ileride ucuz ledlerimizin kapasitesi olan 20 miliamperin tamamını kullanmak istiyorum. Çünkü bu bir bisiklet ışığı olacak ve parlaklık önemli. O aşamaya gelince kaçlık direnç kullanmamız gerektiğini Ohm yasasını kullanarak hesaplayacağız.</p>
<p style="text-align:justify;">Şimdilik LED'lerimizi şu şekilde bağlıyoruz. LED'lerin pozitif ve negatif uçlarına dikkat edin. Uzun olan bacak pozitif. Yukarıda dediğim gibi 1k ohm direnç yeterli olacaktır. <img class="aligncenter wp-image-32 size-large" src="https://dikendine.files.wordpress.com/2014/11/untitled-sketch_bb.jpg?w=660" alt="Untitled Sketch_bb" width="660" height="482" /></p>
<p style="text-align:justify;">İki led aynı pin çıkışına da bağlanabilirdi ancak bu durumda Arduino ve genel olarak AVR çiplerinin pin başına 40 mA sağlama sınırına oldukça yaklaşmış olurduk. Hatta beyaz led'lerin 25-30 mA'ya kadar çalışabileceğini varsayarsak iki tanesini aynı pinden çalıştırmak mümkün olmazdı. Arduino'dan fazla akım çekmeye çalışarak pinlere zarar verebiliriz.</p>
<p style="text-align:justify;">Şimdi LED'lerimizi bağladığımıza göre kendilerini yakabiliriz. Ardino IDE'nin içerisinde gelen örnek kodları açarsanız (File -&gt; Examples -&gt; Basics -&gt; Blink) zaten bizim yapmak istediğimiz tarzda bir kod olduğunu fark edeceksiniz. Bunu sadece programda tanımlanan led pinlerini değiştirerek kullanabilirsiniz ancak biz tekrar etmek amacıyla kendimiz bir tane yaratalım.</p>


[code language="cpp"]
// Ledlerimizi bağladığımız pinler ve isimleri burada tanımlanmalı.
int led1 = 8;
int led2 = 7;

// Kullandığımız pinleri çıkış pini olarak atıyoruz.
void setup() {
  // initialize the digital pin as an output.
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
}

// Arduino açık kaldığı sürece tekrarlanacak rutin:
void loop() {
  digitalWrite(led1, HIGH);  // led1 pinini yükselt (5V uygula)
  digitalWrite(led2, HIGH);  // led2 pinini yükselt (5V uygula)
  delay(100);                // bu şekilde 100 milisaniye bekle
  digitalWrite(led1, LOW);   // led1 pinini düşür (Sıfır Volt)
  digitalWrite(led2, LOW);    // led2 pinini düşür (Sıfır Volt)
  delay(100);                // bu şekilde 100 milisaniye bekle
}

[/code]

<p style="text-align:justify;">Görüldüğü üzere programın üç ana bölümü var. İlk kısmında sadece Arduino'ya hangi pinleri kullanacağımızı ve bu pinlerin isimlerini söylüyoruz. Bu sayede daha sonra bu isimleri refere edebilceğiz. Daha sonra bağlayacağımız sensör veya tuşları da bu bölümde tanıtacağız.</p>
<p style="text-align:justify;">İkinci bölümde bulunan setup fonksiyonu Arduino açıldıktan sonra sadece bir kere çalışacak. Bu fonksiyon içerisinde pinlerin hangi amaçlarla kullanılacağını belirliyoruz. Ledlerimizi bağladığımız dijital pinler, sadece çıkış için değil, başka görevler için giriş olarak da kullanılabilmekte. Hatta Arduino'nun dijital pinleri varsayılan olarak giriş pini olarak ayarlanmıştır. Işık veya ses üretmek için gereken çıkış akımının verilebilmesi için, bu pinlerin özel olarak çıkış amaçlı kullanılacağının belirtilmesi gerekir. Bu nedenle pinMode fonskiyonu ile, isimlerini belirlediğimiz pinlerin OUTPUT olarak ayarlanmasını sağlıyoruz.</p>
<p style="text-align:justify;">Üçüncü bölüm loop fonksiyonu ve adından da anlaşılacağı üzere, setup fonksiyonundan sonra loop'a gelindiğinde sonsuz bir döngüye giriliyor. Bu sonsuz döngüde yapmak istediğimiz hareketleri Arduino'ya yaptırabiliyoruz.</p>
<p style="text-align:justify;">Örnek koda bakarsanız görebileceğiniz gibi burada iki adet fonksiyon var. İlki digitalWrite(), pinlerin bulunduğu durumu değiştirmemizi sağlıyor. Bu fonsiyon sayesinde bir pin'in 5 Volta yükseltip LED'in yanmasını sağlayabiliyoruz. Bu Arduino'da HIGH olarak tanımlı. O nedenle fonksiyona ilk olarak durumunu değiştirmek istediğimiz pini, daha sonra da istediğimiz durumu parametre olarak göndermemiz gereiyor. Led'i kapatmak istediğimizde ise, LOW parametresini gönderiyoruz ve pin, 0 volta düşüyor, LED sönüyor.</p>
<p style="text-align:justify;">Aralardaki delay() fonksiyonu ise, adından da belli olacak şekilde mikrokontrolörün tüm işlemlerini durduruyor. O esnada herhangi bir değişiklik yapmak mümkün değil. Bunu milisaniye mertebesinde yaptığı için 1 saniye için 1000 sayısını vermeniz gerekmekte. Ben 0.1 saniyelik bir fark istediğim için 100 verdim.</p>
<p style="text-align:justify;">-Bir sonraki postta bisiklet ışığımıza bir kaç sürekli açık, yanıp sönme veya flip-flop gibi bir kaç fonksiyon kazandıracağız. Bir tuşla bu fonksiyonlar arasında geçiş yapabileceğiz. Sensörlü ufak bir ışık yapma hedefine doğru atılmış bir adım olacak. -</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>21</wp:post_id>
  <wp:post_date>2014-11-25 21:15:45</wp:post_date>
  <wp:post_date_gmt>2014-11-25 21:15:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>3</wp:comment_id>
    <wp:comment_author><![CDATA[Sensörlü Bisiklet Işığı Bölüm 3: Buton Debounce, Pull-Up ve Pull-Down Dirençler | Diken Dine. Kendine. Kendi Kendine.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.138</wp:comment_author_IP>
    <wp:comment_date>2014-11-28 21:03:40</wp:comment_date>
    <wp:comment_date_gmt>2014-11-28 21:03:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] 2. Bölüm: LED yakma ve ilk program.  [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417208621.002294063568115234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417249171</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417213156.7367229461669921875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417249171.8358271121978759765625;s:7:"message";s:45:"raicem changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"raicem";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>5</wp:comment_id>
    <wp:comment_author><![CDATA[Sensörlü Bisiklet Işığı Bölüm 4: Farklı Modlar ve Işık Sensörü | Diken Dine. Kendine. Kendi Kendine.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://dikendine.wordpress.com/2014/11/29/sensorlu-bisiklet-isigi-bolum-4-farkli-modlar-ve-isik-sensoru/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.150</wp:comment_author_IP>
    <wp:comment_date>2014-11-29 15:19:23</wp:comment_date>
    <wp:comment_date_gmt>2014-11-29 15:19:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] 2. Bölüm: LED yakma ve ilk program. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417274363.98490810394287109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417274444</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417274444.7260930538177490234375;s:7:"message";s:45:"raicem changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"raicem";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Laptop Soğutucum İşe Yarıyor Mu?</title>
  <link>https://dikendine.wordpress.com/2014/11/23/laptop-sogutucum-ise-yariyor-mu/</link>
  <pubDate>Sun, 23 Nov 2014 21:38:21 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.wordpress.com/?p=24</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Elimde kor gibi parlayan (laptopu sıcak bir şeylere benzeterek abartma girişimlerine bir tane daha) Asus X201 netbook/subnotebook olduğu için bu sorunun cevabını merak ediyordum. Ancak tüketimin rahatlığına kapılıp mağazadan markalı bir laptop soğutucu almak istemedim. Ben de edindiğim bi kaç parça ile kendime bir benzerini yapmaya ve sonuçları ölçmeye karar verdim.</p>
<p style="text-align:justify;">Edinilecek parçalar zaten iki adet. İlki bir adet fan olacak. Fan seçimi önemsiz bir konu değil. Piyasada satılan pek çok fan masaüstü bilgisayarlara göre ve 12 volt ile çalışıyorlar. Laptop'un USB çıkışlarından verilen akımın elektrik potansiyeli ise en fazla 5 volt. Bu durumda fan bazen çalışabilir, bazen çalışmayabilir (bilimseliz burada). Yaptığım araştırmaya göre markalara göre, ya da içinde bulunan mıknatısın gücüne göre değişmekte. Buna göre tasarlanmış 5 voltluk fanlardan kullanmakta fayda var. Ancak ben onları bulamadım ve en standardından Akasa marka bir masaüstü fanı aldım. 12 volt, 0.14 amper. Yani 1.68W.</p>
<p style="text-align:justify;">Gereken önemli ikinci parça kullanacağınız kasa. Artık tahtadan mı yaparsınız, aluminyumdan mı yaparsınız, yoksa kesmekle uğraşmayıp bir mangal ızgarası altına mı yerleştirirsiniz fanı, o kısmı size kalmış. Ben bir tahta plaka alıp elde olmayan imkanlarla kesmeye çalıştım kör bir testere ve bıçak yardımıyla. Oldukça uğraştırdı ve sonucun Jony Ive imzası taşımadığı açık. Ama bir delik ve içinden hava geçiyor. Bizim için yeterli.</p>
<p style="text-align:justify;">Diğer bir önemli nokta güç kaynağı. 12 voltluk fanı 5 voltluk USB çıkışına bağlamak bir anlamda "hayal kırıklığı" diye bağırıyor ama denemekte fayda var. Her zaman 12 voltluk bir adaptör edinip fanı oraya bağlayabilirsiniz. Şimdilik deneylerimizi 5 volt ile sürdüreceğiz.</p>
<p style="text-align:justify;">En önemsiz parça USB kablosu. Bilgisayar çıkışına uygun herhangi bir tanesi işe yarayacaktır. İşinize yarayacak uzunlukta kesin ve içinden çıkan dört farklı renkte kablodan sadece kırmızı ve siyah renkli olanlarını sıyırın. Geriye kalan iki tanesi data kablosu olduğu için kullanmayacağız.</p>
<p style="text-align:justify;">Sıyırdığımız kırmızı ve siyah kabloyu, fandan çıkan 3'lü fişe takacağız. Kırmızı kırmızıya, siyah da siyaha gidecek (bariz). Fişte bulunan sarı giriş ise boş kalabilir. O fan hızını kontrol etmek için sağlanan bir giriş.</p>
<p style="text-align:justify;">En nihayetinde bazı denemeler sonucu böyle bir sonuca ulaşıldı. Son derece ilkel.</p>
<p style="text-align:justify;"><a href="https://dikendine.files.wordpress.com/2014/11/img_0344.jpg"><img class="alignnone size-medium wp-image-25" src="https://dikendine.files.wordpress.com/2014/11/img_0344.jpg?w=300" alt="IMG_0344" width="300" height="223" /></a> <a href="https://dikendine.files.wordpress.com/2014/11/img_0346.jpg"><img class="alignnone size-medium wp-image-26" src="https://dikendine.files.wordpress.com/2014/11/img_0346.jpg?w=300" alt="IMG_0346" width="300" height="223" /></a></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;">Soğutucu Asus Netbooka bağlandığında kendi kendine dönmeye başlıyor. Ancak deneme amacıyla Macbook'a bağladığımda nedense kendi kendine dönmüyor, parmakla ilk hareketin verilmesi gerekiyor.</p>
<p style="text-align:justify;">Multimetre yardımıyla yapmaya çalıştığım ölçümlerde laptoptan çıkan voltajı 5.06, fana giden akımı ise 45 mA olarak ölçtüm. Yani fanın potansiyeli olan 1.68 W yerine 0.22 W kullanılıyor. Bu oldukça düşük.</p>
<p style="text-align:justify;">İşe yarayıp yaramadığını anlama amacıyla basit işlemci sıcaklığı karşılaştırması yapmak için, işlemcinin anlık sıcaklığının yanında belli bir süredeki ortalama sıcaklığını da ölçen bir yazılım gerekti. Görünüşe göre Real Temp, SpeedFan gibi popüler çözümlerin hiç biri böyle bir özelliğe sahip değil. Kıyıda köşede bulduğum <a href="http://www.hwinfo.com/">HWİNFO</a> adlı bu program ise tam dediğim özelliğe sahip. Ana menüde yer alan sensors seçeneği ile beraber belli bir zaman dilimindeki sensör sıcaklığının ortalamasını alabiliyorsunuz.</p>
<p style="text-align:justify;">Laptopun bulunacağı dört farklı pozisyon seçtim. İlki standart olarak masa üstünde sabit olacak. İkincisinde laptopun arkası iki kitap yardımıyla yükseltilecek ve fan bölümün daha rahat hava alması sağlanacak (ampiriğin dibi bir yaklaşım, ama işe yarıyor mu anlamak için kendimizi deneye adadık). Daha sonra yaptığım soğutucunun üzerinde, hem fan açık hem de fan kapalı olarak duracak.</p>
<p style="text-align:justify;">Bilgisayarın her pozisyonu için farklı iki işlem yürüttüm. İlkinde bilgisayar tamamen boştayken 15 dakika beklettim. Yaklaşık %2-3 işlemci yükünde sıcaklık derecelerini ölçtüm. Aynı bekletme işlemini bir de Google Chrome'da 360p bir Youtube videosu oynatırken yaptım. Yine 15 dakika boyunca ölçülen işlemci derecelerinin ortalamasını not ettim.</p>
<p style="text-align:justify;">İnternette dolaşma testine de niyetlendim ancak internette her sitenin farklı farklı JavaScript, Flash, HTML5 bölümleri içermesinden dolayı vazgeçtim. Belki bu test uzun bir süreçte, sitelerin tekil özelliklerini törpüleyecek şekilde 1-2 saatlik seanslar halinde yapılabilir. Asus ana bilgisayarım olmadığından böyle bir şey yapabilir miyim bilmiyorum.</p>
<p style="text-align:justify;">Test sonuçları aşağıdaki gibi.</p>
<p style="text-align:justify;"><a href="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-23-23-08-18.png"><img class="alignnone  wp-image-28" src="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-23-23-08-18.png?w=300" alt="Ekran Resmi 2014-11-23 23.08.18" width="446" height="165" /></a></p>
<p style="text-align:justify;">Rakamların doğru olup olmadığı kestirmek zor ama göreceli olarak bir sonuca varılıyor sanırım. Bilgisayar boşta iken neredeyse hiç etki etmiyor soğutucu. Faydasını ancak işlemci kullanımı arttıkça görüyoruz ve 3 dereceye kadar değişim yaratıyor. Gücünün %12'siyle çalışan bir fan için fena değil.</p>
<p style="text-align:justify;">Başlıktaki sorunun cevabı; evet, kendi yaptığınız bir soğutucu için sonuç güzel. Ama böyle bir sonucu 50 liralık piyasa ürünlerinden alsaydım üzülürdüm.</p>
<p style="text-align:justify;">Bir şekilde fana 12 volt güç verip denemelerimi onunla da yapacağım ve buradaki bilgileri güncelleyeceğim. Ama gerçekten efektif bir çözüm olmasını beklemiyorum zira aklıma takılan sorular var.</p>
<p style="text-align:justify;">1- Laptopun içerisine yerleştirilmiş fanın görevi heatsink üzerinden mümkün olduğu kadar hava geçirmek. Bizim laptopun içindeki fana doğru hava üflememiz, ufak fanın kapasitesini artırmayacak, yani heatsink üzerinden geçen hava miktarı artış göstermeyecek. Ne kadar hava gönderirsek gönderelim, içeride çalışan küçük fanın yapabildiği ile sınırlandırılacağız.</p>
<p style="text-align:justify;">2- Eğer ek soğutucu bilgisayarın hava alma ızgaralarına tam denk gelmiyorsa, plastiğe veya aluminyuma hava çarptırarak soğutma yapmaya çalışmak ne kadar mantıklı?</p>
<p style="text-align:justify;">3- Laptop ve soğutucu arasındaki alanın darlığı nedeniyle maksimum akım (maximum flow) yerine daha stabil çalışan sabit basınç (static pressure) fanları daha mı faydalı olur? Bu sayede gerekli ekipmanla lapoptun alt kısmında pozitif basınç alanı oluşturursak (bilgisayar kasası gibi) nasıl etkiler görülür?</p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>
<p style="text-align:justify;"></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>24</wp:post_id>
  <wp:post_date>2014-11-23 21:38:21</wp:post_date>
  <wp:post_date_gmt>2014-11-23 21:38:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>laptop-sogutucum-ise-yariyor-mu</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="diger"><![CDATA[Diğer]]></category>
  <category domain="post_tag" nicename="laptop-sogutucular"><![CDATA[laptop soğutucular]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>IMG_0344</title>
  <link>https://dikendine.wordpress.com/2014/11/23/laptop-sogutucum-ise-yariyor-mu/img_0344/</link>
  <pubDate>Sun, 23 Nov 2014 17:20:26 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/img_0344.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>25</wp:post_id>
  <wp:post_date>2014-11-23 17:20:26</wp:post_date>
  <wp:post_date_gmt>2014-11-23 17:20:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_0344</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>24</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/img_0344.jpg</wp:attachment_url>
</item>
<item>
  <title>IMG_0346</title>
  <link>https://dikendine.wordpress.com/2014/11/23/laptop-sogutucum-ise-yariyor-mu/img_0346/</link>
  <pubDate>Sun, 23 Nov 2014 17:20:37 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/img_0346.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>26</wp:post_id>
  <wp:post_date>2014-11-23 17:20:37</wp:post_date>
  <wp:post_date_gmt>2014-11-23 17:20:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_0346</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>24</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/img_0346.jpg</wp:attachment_url>
</item>
<item>
  <title>Ekran Resmi 2014-11-23 23.08.18</title>
  <link>https://dikendine.wordpress.com/2014/11/23/laptop-sogutucum-ise-yariyor-mu/ekran-resmi-2014-11-23-23-08-18/</link>
  <pubDate>Sun, 23 Nov 2014 21:10:25 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-23-23-08-18.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>28</wp:post_id>
  <wp:post_date>2014-11-23 21:10:25</wp:post_date>
  <wp:post_date_gmt>2014-11-23 21:10:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ekran-resmi-2014-11-23-23-08-18</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>24</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-23-23-08-18.png</wp:attachment_url>
</item>
<item>
  <title>Untitled Sketch_bb</title>
  <link>https://dikendine.wordpress.com/2014/11/25/sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-2/untitled-sketch_bb/</link>
  <pubDate>Tue, 25 Nov 2014 10:56:12 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/untitled-sketch_bb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>32</wp:post_id>
  <wp:post_date>2014-11-25 10:56:12</wp:post_date>
  <wp:post_date_gmt>2014-11-25 10:56:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>untitled-sketch_bb</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>21</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/untitled-sketch_bb.jpg</wp:attachment_url>
</item>
<item>
  <title>Sensörlü Bisiklet Işığı Bölüm 3: Tuş Debounce, Pull-Up ve Pull-Down Dirençler</title>
  <link>https://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/</link>
  <pubDate>Fri, 28 Nov 2014 21:03:33 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.wordpress.com/?p=44</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;"><a href="http://dikendine.wordpress.com/2014/10/17/sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-1/">1. Bölüm: Projenin amacı ve genel bir giriş. </a></p>
<p style="text-align:justify;"><a href="http://dikendine.wordpress.com/2014/11/25/sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-2/">2. Bölüm: LED yakma ve ilk program. </a></p>
<p style="text-align:justify;">- LED'lerimizi yakmayı başardıktan sonra, sonraki adıma geçiyoruz. Öncelikle ışıklarımızı açıp kapatmak için bir tuş ekleyeceğiz ve bu tuşun düzgün çalışması için tahmin edilenden çok fazla efor sarfedeceğiz (hatta mikrodenetleyici ortamında, tuşun düzgün çalışması için harcanılan efor hiç bitmez). -</p>
<p style="text-align:justify;">Tuşlar basit ve temel bir parça olarak gözükse de, mikrodenetleyicilere bağlanmaları aşamasında bazı temel sorunlarla zorluklar çıkarmakta oldukça başarılılar. Öncelikle temel olarak nasıl çalıştığına bir bakalım.</p>
<p style="text-align:justify;"><a href="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-37.png"><img class="alignnone size-medium wp-image-59" src="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-37.png?w=300" alt="Ekran Resmi 2014-11-28 00.28.37" width="300" height="154" /></a></p>
<p style="text-align:justify;">Şekilde de görülebileceği üzere, tuş sayesinde (buton nedense saçma bi kelime gibi geliyor bana, anahtar da farklı bir anlama çıkıyor) Arduino'nun pini ile 5 V arasında bir bağlantı kurabiliyoruz. Tuşun basılması durumunda pin'e 5 V gönderiyoruz ve bu durumu Arduino ile okuyabiliyoruz. Tuşun basılı olmadığı durumda ise pine herhangi bir akım gitmiyor. Bu durumda pin tarafından okunan değerin  0 V olacağını düşünürsünüz değil mi? Maalesef değil. Çünkü A numaralı pinin bulunabileceği hallerin sayısı aslında iki değil, üçtür. HIGH (veya 1 veya 5V), LOW (veya 0 veya 0 V) ve de FLOAT. FLOAT, pinin boşta kalması sebebiyle oluşan, tabiri caizse osuruktan nem kapan, kararsız bir duruma verilen isimdir. Eğer pin boşta duruyorsa, hem çipin kendisinden hem de etrafta oluşan elektromanyetik gürültüden etkilenebilir ve rastgele sonuçlar okuyabilir. Bu sebeple karar vermek için kullanacağımız pinlerde bu durumun oluşmasını istemeyiz.</p>
<p style="text-align:justify;">Bunu önlemek için en basit yol, tuşun basılı olmadığı süre için pini 0'a çekecek bir bağlantı kurmaktır. O da şu şekilde gösterilebilir:</p>
<p style="text-align:justify;"><a href="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-47.png"><img class="alignnone size-medium wp-image-60" src="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-47.png?w=300" alt="Ekran Resmi 2014-11-28 00.28.47" width="300" height="172" /></a></p>
<p style="text-align:justify;">Şimdi her şey güzel gözüküyor değil mi? YANLIŞ. Evet, tuş serbest iken osuruktan nem kapma durumu oluşmayacak ve pin sıfır volt okuayacak. Ancak tuşa basıldığı anda 5V ile 0V arasında kesintisiz bir bağlantı kurulacağı için kısa devre oluşacak.</p>
<p style="text-align:justify;">Bu sebeple, tuş ile GND arasında 10k veya benzeri boyutlarda bir direnç yerleştirilerek hem bu kısa devre engellenir, hem de FLOAT durumundan kaçınılır. Gördüğünüz bu şekil, pini sürekli olarak GND'ye, yani 0 Volt'a doğru çektiğinden dolayı, Pull-Down Resistor (Al aşağı, al, al, al) olarak adlandırılır. Şekil:</p>
<p style="text-align:justify;"><a href="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-58.png"><img class="alignnone size-medium wp-image-61" src="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-58.png?w=300" alt="Ekran Resmi 2014-11-28 00.28.58" width="300" height="194" /></a></p>
<p style="text-align:justify;">Pull-Up resistor ise bunun tam tersi uygulamasıdır. Şekile bakarak daha net kavrayabilirsiniz.<a href="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-33-14.png"><img class="alignnone size-medium wp-image-63" src="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-33-14.png?w=300" alt="Ekran Resmi 2014-11-28 00.33.14" width="300" height="204" /></a></p>
<p style="text-align:justify;">Pull-Down dirençlerde tuş serbest bırakıldığında 0, tuşa basıldığında 1 okunur (kulağa da bu doğal geliyor). Ancak Pull-Up dirençte bu tamamen tersidir. Tuş serbestken 1, basıldığında 0 okunur.</p>
<p style="text-align:justify;">Biz kendi tuş örneğimiz için istersek pull-up veya istersek pull-down dirençlerden faydalanabiliriz. Ancak Atmel mühendislerinin bizlere bir armağanı olarak, ATMega ve daha bir çok mikrodenetleyici, pinlerinde kendi pull-up dirençleriyle beraber gelir. Bu bizi hem parça, hem ekstra lehim, hem ekstra kablo olayından kurtaran harika bir çözümdür. Biz de tuşumuzu GND ve pin arasında direkt olarak bağlayarak ve sadece yazılım aracılığı ile pull-up direnci aktifleştirebiliriz. Hemen devreye ait görseli paylaşayım:<a href="https://dikendine.files.wordpress.com/2014/11/02_bb.jpg"><img class="alignnone  wp-image-50" src="https://dikendine.files.wordpress.com/2014/11/02_bb.jpg?w=300" alt="02_bb" width="577" height="421" /></a></p>
<p style="text-align:justify;">Gördüğünüz üzere şimdilik yapmanız gereken şey sadece bir tuş eklemek. Şimdi bu butondan komutlarımızı okuyarak ışıklarımızı kapatıp açacağız. Sorun şu ki, eğer bir anahtar kullansaydık işimiz çok kolay olacaktı. Anahtarı açtığımızda Arduino'ya 5 volt gidecek, kapattığımızda ise gitmeyecekti. Bize de sadece bu değeri okumak zorunda kalacaktı. 5 Volt (yani 1) olduğunda LED'leri yak, 0 Volt olduğunda ise söndür diyecektik. Ancak bu bir anahtar değil. Anahtarları ufak elektroniklerde sevmiyoruz çünkü büyükler ve pahalılar. Bu çok basit bir tuş (gavurcası için: tactile button). Yani basıyoruz ve denetleyiciye sıfır komutunu sadece bir anlığına yollayabiliyoruz.</p>
<p style="text-align:justify;">// Sadece gelen komut HIGH'dan LOW'a döndüğünde LED'in durumunu değiştir</p>
<p style="text-align:justify;">Bu sayede gelen HIGH komut, LOW'a döndüğünde işlem yapacağız ancak sonrasında Arduino'nun okuyacağı yüzlerce LOW komutuna tepkisiz kalacağız. Neyse, ben de anlatacaklarımın sırasını karıştırdım şu anda. Koda bakalım.</p>


[code language="cpp"] // İlk bölümdeki ledlere ek olarak tuşu ve programda kullanacağımız değişkenleri tanımlıyoruz.
int led1 = 8;
int led2 = 7;
int tus = 6;
boolean okuma;
boolean sontusdurumu = HIGH;
boolean leddurumu = HIGH;

// Kullandığımız pinleri çıkış pini olarak atıyoruz. Input ayarlamaya gerek yok.
// Setup aşamasında pin'e HIGH komutu yollarak Pull-Up direnci aktifleştiriyoruz.
void setup() {
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  digitalWrite(tus, HIGH);
}

// Arduino açık kaldığı sürece tekrarlanacak rutin:
void loop() {
  okuma = digitalRead(tus);

  if (okuma == LOW &amp;amp;amp;&amp;amp;amp; okuma != sontusdurumu) {
    digitalWrite(led1, leddurumu);
    digitalWrite(led2, leddurumu);
    leddurumu = !leddurumu;
  }
  sontusdurumu = okuma;
}
 [/code]

İlk kodun üzerine birden fazla ekleme yaptık, farklılıkların üzerinden geçmeye çalışalım.
Öncelikle en tepede LED'lerimizle beraber tuşumuzu tanımladık ve 6. dijital pine bağlayacağımızı söyledik. Onun yanında, kodumuzda kullanmak için bazı değişkenler belirledik. Bu değişkenler gördüğünüz üzere diğerleri gibi int değil, boolean. Boolean, integerların aksine büyük rakamları değil, sadece HIGH ve LOW durumlarını kaydetmek için kullanılabilir. Bizim yapacağımız gibi bir dijital programda bunlar işimize yarayacak.

Setup bölümüne gelirsek, burada adeta loop fonksiyonu içerisinde bir led yakar gibi, button pinine HIGH komutu gönderiyoruz. Bu sayede Arduino'nun içinde bütünleşik bulunan pull-up direnci aktif hale getiriyoruz. Ayrıca dikkat edeceksiniz ki, setup bölümünde OUTPUT'ları belirlemiş olmamıza rağmen, tuşumuzun pinini INPUT olarak özellikle belirtmedik. Önceden de dediğim gibi Arduino'nun pinleri aksi belirtilmedikçe INPUT pini olarak varsayılır.

Loop bölümüne daha önceden tanımladığımız okuma boolean değişkenine bir değer atayarak başlıyoruz. digitalRead fonskiyonu ile, bir pin üzerindeki değeri okutup bunu okuma değişkenimize geçiriyoruz. Bu pin elbette bizim tuşumuzun bağlı olduğu pin. Buradaki değer pull-up direnç kullandığımızdan dolayı tuş basılıyken LOW, tuşa basılmazken HIGH olacak.

Değerimizi kaydettikten sonra asıl karar verme bölümüne geçebiliriz. Yukarıda da kısaca anlatmaya çalıştığım gibi, LOW sinyali alındığından itibaren ışıkları açmamız ya da kapatmamız gerekiyor. Bir if (eğer) fonksiyonu ile bunu kontrol edebiliriz ve ışıklarımızın durumunu değiştirebiliriz. Ancak, kullanıcı elini tuştan ne kadar çabuk çekerse çeksin, Arduino o zaman aralığında onlarca ve belki yüzlerce LOW ölçümü yapacak. Yani okunan veriler şu şekle benzeyecek:

HHHHHHHHHHHHHLLLLLLLHHHHHHHHHHHHHHHHHHHHHH

Biz tam olarak ilk LOW değerini okuduktan sonra işlemimizi gerçekleştirmek ve diğer L değerlerinde herhangi bir şey yapmak istemiyoruz. Yani sadece HIGH'dan LOW'a geçerken işlem yapmak istiyoruz. O halde şu şekide bir kod yazabiliriz.

/*
Eğer gelen sinyal LOW ise ve ondan hemen önce gelen sinyal LOW değilse,
Işıkların durumunu değiştir (kapalıysa aç, açıksa kapa)
*/

Kodumuzun bunu yapması yeterli. Ancak Arduino'ya "bundan önce gelen sinyal neydi hatırla bakıyim" diyemiyoruz. Onu da ayrıca bir değişkene atamalıyız. Özetle, HIGH'dan LOW'a geçildiğinde ışıklarımızı yakacağız ancak son tuş durumunun da LOW olduğunu hatırlayacak bir değişken belirleyeceğiz. İşte bu değişkenin adı sontusdurumu.

"okuma == LOW" bölümünden sonra gelen "okuma != sontusdurumu" (okuma sontusdurumu'na eşit değilse demektir) şartı da işte tam olarak bunu sağlıyor. Eğer okuma tuş durumuna eşit değilse, if fonksiyonunun içerisi yürütülüyor. Yürütme sonrası loop sonuna gelindiğinde tuştan son okuduğumuz reading değerini tuş durumuna eşitliyoruz. Böylece sonraki turda tekrar LOW sinyali geldiğinde tuş durumu da LOW oluyor ve okuma != tusdurumu sağlanmamış oluyor. Led ışıklarımızın durumu değişemiyor.

If koşulu sağlandığı takdirde led ışıklarımızın bulundukları durumu tam tersine çevirmesi işlemini ise yine bir boolean değişken ile yapabiliriz. Boolean değişken leddurumu, programın başında HIGH olarak tanımlı. Bu sebeple, if koşulu ilk kez çalıştığında ışıklara HIGH komutu geçirilecek. Ancak bu komut geçirildikten ve işi bittikten hemen sonra boolean değişkenin durumu "leddurumu = !leddurumu" satırıyla tam tersine döndürülecek. Yani HIGH ise LOW, LOW ise HIGH olacak. Bu sayede bir if koşulunu sağlayan bir sonraki seferde (yani sonraki tuşa basışta) önceki durumun tam tersi geçirilmiş olacak.

Arduino üzerinde devreyi tamamlayıp kodu başarıyla çalıştırdıysanız, tuşlarla alakalı başka bir sorunun varlığı dikkatinizi çekmiş olmalı. Tuşa bir kere bassanız bile, bazen iki kere ve hatta üç kere basılmış etkisi görebiliyorsunuz. Bunun sebebi, button debounce (tuş sekmesi?!) denen fenomen. Bir tuşa bastığınızda, tuş direkt olarak akımı geçirmeye başlamak yerine çok kısa bir süreliğine dans ediyor ve HIGH - LOW arasında hızlıca gidip gelebiliyor. Şu görsel açıklayıcı olacaktır:<a href="https://dikendine.files.wordpress.com/2014/11/switch_debounce_04_lrg.jpg"><img class="alignnone size-large wp-image-54" src="https://dikendine.files.wordpress.com/2014/11/switch_debounce_04_lrg.jpg?w=656" alt="switch_debounce_04_lrg" width="656" height="461" /></a>

Bounce ile belirtilen bölgelerdeki komutları görmezden gelmemiz gerekmekte. Çünkü eğer onları da okursak ışıklarımız girilen tek komuta karşılık birden fazla aç-kapa yapabilir. Bunun önüne geçmek için hem yazılımsal, hem de donanımsal bazı yöntemler var.

<strong>1-Donanım</strong>

En basit çözüm yöntemi bu. Ufak bir kondansatörü tuşun iki ucu arasına paralel olarak bağlıyoruz. Bu kadar. Bitti. Finito.

Ancak bu <a href="http://www.youtube.com/watch?v=Iby888ZXpZ8&amp;index=11&amp;list=PLE72E4CFE73BD1DE1">şu harika video serisinde</a> anlatıldığı üzere "Poor Man's Button Debouncing". Friztzing resmini paylaşırsam şöyle bir şey olacak. O mavi cücük gibi şey bir kondansatör, idare ediverin :)

<a href="https://dikendine.files.wordpress.com/2014/11/02a_bb.jpg"><img class="alignnone size-large wp-image-55" src="https://dikendine.files.wordpress.com/2014/11/02a_bb.jpg?w=656" alt="02a_bb" width="656" height="485" /></a>Bu şekilde tuş tarafından yaratılan debouce pürüzlerinin çoğunu törpüleyebiliriz. Bunun için kondansatörün elektrik yük tutma kapasitesinin yani Farad'ın doğru seçilmesi gerekir. Yüksek boyutlu bir kondansatör, elektrik yüküyle dolana kodar çok vakit gerektireceği için tuşunuzun uzun bir süre tepki vermemesine sebep olabilir. Ufak boyutlusu ise, hemen şarj olarak istediğimiz dengeleme etkisini gösteremeyip, debounce olayına yeterince yardımcı olmayabilir. En uygunu tuş devremizde bir pull-up resistorun da bulunduğunu varsayarak bunun bir Resistor Capacitor (RC) devresi olduğunu anlamak ve tuş için gereken tepkiselliği direncin ve kondansatörün büyüklüğü ile hesaplamak. Bunun için pull-up resistorun bilinmesi gerekmekte. Şimdilik araştırmaya üşendiğimden ve 22 nanoFaradlık kondansatör gayet iyi çalıştığından dolayı burayı geçiyorum.

RC devrelerinde daha fazla bilgi ve hesaplamalar için <a href="http://www.electronics-tutorials.ws/rc/rc_1.html">bu linke</a> tıklayabilirsiniz. Hesaplamak için pull-up direncin boyutuna bakmak isterseniz Arduino'nun çipi ATMega 328P'nin datasheet'lerine bakabiliriniz <a href="http://www.atmel.com/Images/doc8161.pdf">buradan</a> (dikkat, 12 mb'lık pdf dosyası).

Benim için 22 nF'lık kondansatör gayet başarılı sonuç verdi. 10 microFarad ise tuşun tepkisizleşmesine sebep oldu.

<strong>2- Yazılım </strong>

Nasıl tuş için ekstra pull-up veya pull-down direnci gerekliliğinden ATMega'yla bütünleşik gelen pull-up dirençleri sayesinde sadece yazılımla kurtulduk, bu debounce olayında da sadece yazılım yardımıyla kurtulabiliriz. Bunu yapmanın pek çok farklı yolu var. Sadece bir delay() koyma ile, apayrı bir debounce fonksiyonu koymaya kadar giden farklı çözümler internette mevcut. Kendi programınıza uyarladığınız sürece, hepsini kullanabilirsiniz. Ben burada sıklıkla kullanılan bir metodu (kendi basit uyarlamamla beraber) göstermek istiyorum.

Yukarıda tuşun basıldığını anlamak için bazı koşullarımız vardı. O koşula yeni bir ekleme yapmamız yetecek.

/*
Eğer gelen sinyal LOW ise ve ondan hemen önce gelen sinyal LOW değilse ve <strong>20 tane LOW sinyali arka arkaya geldiyse</strong>;
Işıkların durumunu değiştir (kapalıysa aç, açıksa kapa)
*/

Deboucing ya da zıplama olayının Arduino tarafından okunuşu bir bakıma şu şekilde diyebiliriz:

1111111111111111111111111010101010000000000000000000000001010101001111111111111111

1 ve 0'lar arasında kalan bölümde bazı karışıklıklar olduğu görüyorsunuz. Biz bu karışıklıkları göz ardı etmek, arka arkaya gelen 0'lar bütününü okumak istiyoruz. Bunun için koştuğumuz şart da 20 tane sıfırın arka arkaya gelmesi. 20 tane sıfır arka arkaya geldiyse, biz tuş zıplamasının bittiğini tahmin ediyor ve işlemimizi yürütebiliyoruz. Bu 20 rakamını azaltıp artırabilirsiniz size kalmış. Azaltmak tuş zıplamalarının artmasına, artırmak da tuşun tepkisizleşmesine sebep olabilir.

Kodumuz şu şekilde:

[code language="cpp"] // İlk bölümdeki ledlere ek olarak tuşu ve programda kullanacağımız değişkenleri tanımlıyoruz.
int led1 = 8;
int led2 = 7;
int tus = 6;
boolean okuma;
boolean sontusdurumu = HIGH;
boolean leddurumu = HIGH;
boolean debounced;
long int artirma = 0;

// Kullandığımız pinleri çıkış pini olarak atıyoruz.Input ayarlamaya gerek yok.
// Setup aşamasında pin'e HIGH komutu yollarak Pull-Up direnci aktifleştiriyoruz.
void setup() {
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  digitalWrite(tus, HIGH);
  Serial.begin(9600);
}

// Arduino açık kaldığı sürece tekrarlanacak rutin:
void loop() {
  okuma = digitalRead(tus);

  if (okuma == LOW){ //okuma LOW yani 0 ise
    artirma++;       //Bu rakamı bir artır
    if (artirma &amp;amp;gt; 20) { //20 kere artırdıktan sonra
      debounced = HIGH;
    }
  }

  if (okuma == LOW &amp;amp;amp;&amp;amp;amp; okuma != sontusdurumu &amp;amp;amp;&amp;amp;amp; debounced == HIGH) {
    digitalWrite(led1, leddurumu);
    digitalWrite(led2, leddurumu);
    leddurumu = !leddurumu;
    artirma = 0;
  }
  sontusdurumu = okuma;
  Serial.println(artirma);
}
 [/code]

Programın ilk bölümünde bir boolean değişken olan debounced'ı tanıttık. Bunu debounce önleme işleminin yapılıp yapılmadığına karar vermek için kullanacağız.
Daha sonra 20 tane LOW sinyalinin arka arkaya gelip gelmediğini saymak üzere integer olarak artirma parametremiz tanıttık. Başlangıç olarak sıfır verdik. Burda farklı olan şu, int kelimesinin başında bulunan long. Long çok büyük boyuttaki (mesela 6-7 basamaklı) sayıları tutabilmek için atanmış bir değişken türü. Tuşun basılı kalması durumunda, artirma parametremiz büyüdükçe büyüyeceği için, içerisinde daha fazla bit tutabilen bu değişkene ihtiyacımız olabilir.

Setup bölümü tamamen aynı.

Loop bölümünde, digitalRead ile okumamızı yaptıktan sonra, debounce işlemine başlıyoruz. okuma parametresine gelen her LOW değeri için, artirma değişkenimizi bir artırıyoruz ("artirma ++" tamamen "artirma = artirma + 1" koduyla aynı). Bu kod 20'ye gelene kadar saymaya devam ediyor ve 20'ye geldiğinde debounce boolean değişkenini HIGH yapıyor. Bu değişkenin HIGH olmasıyla beraber üçlü koşulumuz sağlanıyor ve ışıklarımızın durumu değişiyor. Bundan sonra yapmamız gereken tek şey tekrar kullanmak üzere artırma parametremizi sıfırlamak.

Bu başarılı bir debouncing kodu değil elbette. Sadece kendime uyarladığım pratik bir çözüm. Örneğin artirma parametresinin 19'da kalması ve tuşun HIGH konumuna geçmesi durumunda artirma parametresini sıfırlayacak bir komutumuz yok. O halde debouncing halinde gelecek ilk LOW kodunda 20'yi aşacağız ve tuş daha stabil hale gelmeden ışıklarımızı yakmaya çalışacağız. Bu ideal bir durum değil. Ancak şimdilik idare edecektir.

- Bu yazıya modlar arasında değişiklik yapmayı ekleyecektim ama fazla uzaması nedeniyle onu sonraki bölümümüze bırakmaya karar verdim. -]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>44</wp:post_id>
  <wp:post_date>2014-11-28 21:03:33</wp:post_date>
  <wp:post_date_gmt>2014-11-28 21:03:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="arduino"><![CDATA[arduino]]></category>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <category domain="post_tag" nicename="bike-light"><![CDATA[bike light]]></category>
  <category domain="post_tag" nicename="bisiklet-isigi"><![CDATA[bisiklet ışığı]]></category>
  <category domain="post_tag" nicename="debouncing"><![CDATA[debouncing]]></category>
  <category domain="post_tag" nicename="direncler"><![CDATA[dirençler]]></category>
  <category domain="post_tag" nicename="pull-down"><![CDATA[pull-down]]></category>
  <category domain="post_tag" nicename="pull-up"><![CDATA[pull-up]]></category>
  <category domain="post_tag" nicename="resistors"><![CDATA[resistors]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>6</wp:comment_id>
    <wp:comment_author><![CDATA[Sensörlü Bisiklet Işığı Bölüm 4: Farklı Modlar ve Işık Sensörü | Diken Dine. Kendine. Kendi Kendine.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://dikendine.wordpress.com/2014/11/29/sensorlu-bisiklet-isigi-bolum-4-farkli-modlar-ve-isik-sensoru/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.150</wp:comment_author_IP>
    <wp:comment_date>2014-11-29 15:19:26</wp:comment_date>
    <wp:comment_date_gmt>2014-11-29 15:19:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] 3. Bölüm: Tuş ekleme, Pull-Up ve Pull-Down dirençler, Button Debouncing [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417274366.5464661121368408203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1417274444</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1417274444.44480609893798828125;s:7:"message";s:45:"raicem changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"raicem";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>02_bb</title>
  <link>https://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/02_bb/</link>
  <pubDate>Wed, 26 Nov 2014 18:21:38 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/02_bb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>50</wp:post_id>
  <wp:post_date>2014-11-26 18:21:38</wp:post_date>
  <wp:post_date_gmt>2014-11-26 18:21:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>02_bb</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>44</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/02_bb.jpg</wp:attachment_url>
</item>
<item>
  <title>switch_debounce_04_lrg</title>
  <link>https://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/switch_debounce_04_lrg/</link>
  <pubDate>Thu, 27 Nov 2014 07:19:31 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/switch_debounce_04_lrg.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>54</wp:post_id>
  <wp:post_date>2014-11-27 07:19:31</wp:post_date>
  <wp:post_date_gmt>2014-11-27 07:19:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>switch_debounce_04_lrg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>44</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/switch_debounce_04_lrg.jpg</wp:attachment_url>
</item>
<item>
  <title>02a_bb</title>
  <link>https://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/02a_bb/</link>
  <pubDate>Thu, 27 Nov 2014 09:23:56 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/02a_bb.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>55</wp:post_id>
  <wp:post_date>2014-11-27 09:23:56</wp:post_date>
  <wp:post_date_gmt>2014-11-27 09:23:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>02a_bb</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>44</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/02a_bb.jpg</wp:attachment_url>
</item>
<item>
  <title>Ekran Resmi 2014-11-28 00.28.37</title>
  <link>https://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/ekran-resmi-2014-11-28-00-28-37/</link>
  <pubDate>Fri, 28 Nov 2014 20:50:56 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-37.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>59</wp:post_id>
  <wp:post_date>2014-11-28 20:50:56</wp:post_date>
  <wp:post_date_gmt>2014-11-28 20:50:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ekran-resmi-2014-11-28-00-28-37</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>44</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-37.png</wp:attachment_url>
</item>
<item>
  <title>Ekran Resmi 2014-11-28 00.28.47</title>
  <link>https://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/ekran-resmi-2014-11-28-00-28-47/</link>
  <pubDate>Fri, 28 Nov 2014 20:51:51 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-47.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>60</wp:post_id>
  <wp:post_date>2014-11-28 20:51:51</wp:post_date>
  <wp:post_date_gmt>2014-11-28 20:51:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ekran-resmi-2014-11-28-00-28-47</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>44</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-47.png</wp:attachment_url>
</item>
<item>
  <title>Ekran Resmi 2014-11-28 00.28.58</title>
  <link>https://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/ekran-resmi-2014-11-28-00-28-58/</link>
  <pubDate>Fri, 28 Nov 2014 20:52:34 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-58.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>61</wp:post_id>
  <wp:post_date>2014-11-28 20:52:34</wp:post_date>
  <wp:post_date_gmt>2014-11-28 20:52:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ekran-resmi-2014-11-28-00-28-58</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>44</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-28-58.png</wp:attachment_url>
</item>
<item>
  <title>Ekran Resmi 2014-11-28 00.33.14</title>
  <link>https://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/ekran-resmi-2014-11-28-00-33-14/</link>
  <pubDate>Fri, 28 Nov 2014 20:53:15 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-33-14.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>63</wp:post_id>
  <wp:post_date>2014-11-28 20:53:15</wp:post_date>
  <wp:post_date_gmt>2014-11-28 20:53:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ekran-resmi-2014-11-28-00-33-14</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>44</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-28-00-33-14.png</wp:attachment_url>
</item>
<item>
  <title>Sensörlü Bisiklet Işığı Bölüm 4: Farklı Modlar ve Işık Sensörü</title>
  <link>https://dikendine.wordpress.com/2014/11/29/sensorlu-bisiklet-isigi-bolum-4-farkli-modlar-ve-isik-sensoru/</link>
  <pubDate>Sat, 29 Nov 2014 15:19:17 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.wordpress.com/?p=65</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;"><a href="http://dikendine.wordpress.com/2014/10/17/sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-1/">1. Bölüm: Projenin amacı ve genel bir giriş. </a></p>
<p style="text-align:justify;"><a href="http://dikendine.wordpress.com/2014/11/25/sensorlu-bisiklet-isigi-yaparak-arduinoya-giris-2/">2. Bölüm: LED yakma ve ilk program.</a></p>
<p style="text-align:justify;"><a href="http://dikendine.wordpress.com/2014/11/28/sensorlu-bisiklet-isigi-bolum-3-buton-debounce-pull-up-ve-pull-down-direncler/">3. Bölüm: Tuş ekleme, Pull-Up ve Pull-Down dirençler, Button Debouncing</a></p>
<p style="text-align:justify;">- Şimdiye kadar ledleri taktık, tuş ile düzgün bir şekilde okuma yaparak ledleri açıp kapattık. Buraya kadar gelmek için önceki bölümleri takip edebilirsiniz. -</p>
<p style="text-align:justify;">Bundan sonra ışığa fonksiyonalite kazandırmaya başlayabiliriz. Bunun için ışığa öncelikle bazı çakma modları ekleyeceğiz. Şimdilik üç mod düşündüm, zaten arkasındaki mantığı anlayınca istediğiniz kadar ekleyebilirsiniz.</p>
<p style="text-align:justify;">İnternette daha güzel kodlar olduğuna eminim ama bu kendi kendine kullandığım modlar arasında gezinme yöntemim. Çok basit bir for loop ve ledmode diye bir değişken yeterli :)</p>
<p style="text-align:justify;">Önce kodu yapıştırayım her zaman yaptığım gibi.</p>


[code language="cpp"]
// İlk bölümdeki ledlere ek olarak tuşu ve programda kullanacağımız değişkenleri tanımlıyoruz.
int led1 = 8;
int led2 = 7;
int tus = 6;
boolean okuma;
boolean sontusdurumu = HIGH;
boolean debounced;
long int artirma = 0;
int ledmode = 0;

// Kullandığımız pinleri çıkış pini olarak atıyoruz.Input ayarlamaya gerek yok.
// Setup aşamasında pin'e HIGH komutu yollarak Pull-Up direnci aktifleştiriyoruz.
void setup() {
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  digitalWrite(tus, HIGH);
  Serial.begin(9600);
}

// Arduino açık kaldığı sürece tekrarlanacak rutin:
void loop() {
  okuma = digitalRead(tus);

  if (okuma == LOW){ //okuma LOW yani 0 ise
    artirma++;       //Bu rakamı bir artır
    if (artirma &amp;amp;gt; 20) { //20 kere artırdıktan sonra
      debounced = HIGH;
    }
  }

  if (okuma == LOW &amp;amp;amp;&amp;amp;amp; okuma != sontusdurumu &amp;amp;amp;&amp;amp;amp; debounced == HIGH) {
    ledmode++; //Burada direk ışıkları kontrol etmek yerine ledmode artırıyoruz.
    if (ledmode &amp;amp;gt; 2) {
      ledmode = 0; //Programın başa dönmesi için bir noktadan sonra sıfıra dönmeli.
    }              // Yoksa sonsuza kadar sayar gider.
    artirma = 0;
  }
  //ledmode == 0 konumunu tanımlamaya gerek yok zaten orada ışıkları kapalı istiyoruz.
  if (ledmode == 1) { // Işıklar tamamen açık
    digitalWrite(led1, HIGH);
    digitalWrite(led2, HIGH);
  }

  if (ledmode == 2) { // 75 Milisaniye aralıkla çakar mod
    digitalWrite(led1, HIGH);
    digitalWrite(led2, HIGH);
    delay(75);
    digitalWrite(led1, LOW);
    digitalWrite(led2, LOW);
    delay(75);
  }
  sontusdurumu = okuma;
  Serial.println(artirma);
}
[/code]

<p style="text-align:justify;">"leddurumu" boolean değişkenine ihtiyacımız kalmadığı için onu çıkartıyoruz. Onun yerine ledmode (neden bazı değişkenleri Türkçe bazılarını İngilizce yapıyorum ben de bilmiyorum, karışıklık oluyorsa kusuruma bakmayın) diye modlarımızı tanımlayacağımız bir integer ekliyoruz. Programın tanımlamalar ve setup bölümü bunun dışında aynı.</p>
<p style="text-align:justify;">Asıl farklılık loop bölümünde ancak o da çok büyük bir fark değil. önceden 3 koşulumuzun sağlanıp, leddurumu'nu değiştirdiğimiz bölümde artık sadece ledmode değişkenimizin sayısını bir artırıyoruz. Bu sayede ledmode'un farklı değerlerine karşılık gelen komutları çalıştırabileceğiz. Örneğin ledmode sayısı 1'e eşit olduğunda (tuşa bir kez basıldığında) ışıklarımız tamamen yanacak ancak 2'ye eşit olduğunda (yani tuşa bir kez daha basıldığında) çakar moda geçecek. 2'den fazla modumuz olmadığı için ledmode değişkeninin 3'e ve daha ilerisine gitmesini istemiyoruz. Onu sıfırlamak için, ledmode 3'ten büyük hale geldiği an onu sıfırlayacağız. Bu sayede her tuşa basıldığında modlar arasında dolaşabileceğiz.</p>
<p style="text-align:justify;">if koşullarından çıktıktan sonra loop bölümünün sonlarına doğru ledmode değişkenleri için istediğimiz işlevleri tanıtıyoruz. Yukarıda da dediğim gibi, sürekli açık kalmasını istiyorsak digitalWrite(ledx, HIGH) yazarak olayı bitirebiliriz. Çakar modda ise 2. bölümde yaptığımız gibi araya delay fonksiyonu ekleyerek açılma kapanma efekti koyabiliriz. Dikkat edilmesi gereken nokta, delay fonksiyonunun mikrodenetleyicimizin bütün fonksiyonlarını durduran çok katı bir fonksiyon olmasıdır. delay süresi devam ederken tuşa basmanız durumunda komut algılanmayacak ve mod değişmeyecektir. Bu da kodda düzeltilmesi gereken ufak pürüzlerden bir tanesi. delay süresini 75 milisaniye olarak ayarlama sebeplerinden birisi de tuşa basıldığında delay'e denk gelme ihtimalini azaltmaktı. Ancak bu sorunu ilerleyen bölümlerimizde çözmeye çalışacağız zaten.</p>
<p style="text-align:justify;">Eğer buraya kadar geldiyseniz sonraki adım, ve de en zevkli adım, ışık sensörümüzü takma aşamasına geçebiliriz :)</p>
<p style="text-align:justify;">Işık sensörleri ya da bilinen adıyla (Light Dependent Resistor / LDR) aslında bir dirençtir. Ancak bu direnç değişken olup üzerine düşen ışık miktarıyla ters orantılıdır. Üzerine gelen ışık miktarı arttıkça direnci azalır, ışık azaldıkça direnç artar. Dirençteki değişimin gerilime etkisini ölçerek ışık sensöründen veri toplayabiliriz. Akla öncelikle şöyle bir şekil geliyor:</p>
<p style="text-align:justify;"><a href="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-29-15-01-17.png"><img class="alignnone size-medium wp-image-68" src="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-29-15-01-17.png?w=300" alt="Ekran Resmi 2014-11-29 15.01.17" width="300" height="147" /></a></p>
<p style="text-align:justify;">Ancak bu tarz bir devre ile ölçmek istediğimiz voltajı asla ölçmeyi başaramayız. Bir önceki paragrafta belirttiğim üzere, biz direnci değil, bu direncin oluşturacağı gerilim değişimlerini ölçmek istiyoruz. Yukarıdaki şematikte her ne kadar 5 voltluk gerilim uygulanıyormuş gibi gözükse de, aslında bunun pek azı akıma dönüşebiliyor. Bunun en önemli sebebi mikrokontrolör gibi cihazların içsel direnci, yani empedansı.</p>
<p style="text-align:justify;">Yüksek empedans, yani yüksek direnç bizim akım oluşturmamıza engel olan bir mikrokontrolör faktörü. Bu empedansı devreden çıkarabilmek ve devrede akım oluşturarak düzgün bir gerilim ölçümü yapabilmek için, bu mikrokontrolör empedansına paralel bir direnç eklememiz gerekmekte. Bu eklenen paralel direnç sayesinde empedansın etkisini azaltabiliriz (paralel direnç toplama formülünü hatırlayın) ve bir gerilim yaratmayı başarabiliriz. Bu gerilim oluşturan paralel direnç eklendiğinde, aslında ortaya bir gerilim bölücü (voltage divider) devre ortaya çıkıyor. Devremiz şu şekilde gözükür:<a href="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-29-15-03-10.png"><img class="alignnone size-medium wp-image-69" src="https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-29-15-03-10.png?w=300" alt="Ekran Resmi 2014-11-29 15.03.10" width="300" height="155" /></a></p>
<p style="text-align:justify;">Bu anlaşılması kolay bir konsept değil. Empedens, gerilim bölücü, pull-down direnç gibi farklı terimlerin bir araya karıştığı bir durum bu. Benden kat kat daha iyi açıklayan bir sürü internet kaynağı mevcut. Onlarla vakit geçirmenizi tavsiye ederim.</p>
<p style="text-align:justify;">http://electronics.stackexchange.com/a/70012 (Bu en iyisi)</p>
<p style="text-align:justify;">http://www.youtube.com/watch?v=XxLKfAZrhbM (bu genel olarak gerilim bölücülerle alakalı)</p>
<p style="text-align:justify;">http://electronics.stackexchange.com/a/28903 (bu da genel bir özet gibi)</p>
<p style="text-align:justify;">Daha önceleri hep dijital pinlerimize veri girişi yapmıştık. Hatırlarsanız o girişlerin hepsi boolean değişkenlerdi. Yani ya HIGH (5 Volt) ya da LOW (0 Volt) durumu vardı. Şimdi o iş değişecek. Sensörümüzün değişken direnci sayesinde Arduino girişine 0 ila 5 volt arasında kalan bütün değeler gelebilir. Bu salınımlı, yani analog değerlerin düzgün bir şekilde ölçülebilmesi gerekir.</p>
<p style="text-align:justify;">Ölçümün yapılabilmesi için bu sensörün Arduino'ya bağlanacağı yer ADC girişi, yani Analog to Digital Converter. Mikrokontrolörün bu bölümü, sensör tarafından gönderilen verilen analog gerilim aralığını, dijitale dönüştürür. Örneğin 0 Volt rakam olarak 0'a denk gelirken 5 Volt 255 rakamına denk gelebilir. Bu 8-bit çözünürlükte yapılan ölçümdür (2^8 = 256).</p>
<p style="text-align:justify;">Arduino'da ise 2^10 çözünürlüğünde ADC vardır. Yani 0 ile 5 Volt arasındaki değerlere 256 değil, 1024 (2^10) tane değer atanabilir. Bu sayede birim voltaja düşen dilimler artarken (ya da dilimlerin boyu ufalırken) analog sinyale benzerlik artar, çözünürlük de artar (türev ve integralin ne olduğunu hatırlayın lise ve üniversiteden, onun kafasında bir şey).</p>
<p style="text-align:justify;">Bu durumda şu demektir, ışık sensörünü bağlayacağımız ADC, 0 ve 5 Volt arasındaki ölçümlerine karşılık bize 0 ila 1023 arasında bir rakam verecektir. Biz bu rakamı kullanarak belirli komutlar ayarlayabiliriz. Ancak şunu unutmamak gerekir ki, sensörden gerilim ölçebilmek için kullandığımız gerilim bölücü devre bizim 0 ila 5 V arasında salınmamızı engelleyecek. Yani Arduino'dan alacağımız veri de 0 ila 1023 arasında değişmeyecek. Bu bir problem değil, sadece devrenin gerektirdiği bir durum. Gelecek rakamlar, empedansa paralel olarak bağladığımız dirençle direkt bağlantılı olacaktır.</p>
<p style="text-align:justify;">Pratikte, 1 kOhm veya 10 kOhm gibi dirençler kafidir bu işlem için. Daha ufak veya daha büyük dirençler bizim ölçüm aralığımızı daraltabilir. Şimdilik sensörü cihaza nasıl bağlayacağımıza bakalım ve ölçümlerimizi kodla okuyalım:</p>
<p style="text-align:justify;"><a href="https://dikendine.files.wordpress.com/2014/11/04_bb.png"><img class="alignnone size-large wp-image-70" src="https://dikendine.files.wordpress.com/2014/11/04_bb.png?w=656" alt="04_bb" width="656" height="485" /></a></p>
<p style="text-align:justify;">Sol üstte yeşil ve kırmızı kablolarla bağladığımız şey LDR. Bir ucu 5 Volta, diğer ucu hem GDN'ye hem de Analog 0 portuna bağlanıyor.</p>
<p style="text-align:justify;">Şimdi ışık sensörümüze fonksiyon kazandırmaya başlayabiliriz. Hemen yeni modlar eklemeden önce, ışık sensörlerimiz ne gibi değerler okuyor ona bakalım. Bunun için 3 yeni şey ekleyeceğiz.</p>


[code language="cpp"]

int okuma2; 
int isiksensoru = A0;

void setup() {

 Serial.begin(9600);
}

void loop() {

okuma2 = analogRead(isiksensoru);

Serial.println(isiksensoru); 

[/code]

<p style="text-align:justify;">Önceki programı silmeden, bu koddaki satırları void setup ve void loop içerisine yapıştırırsanız yine çalışacaktır. Ne yaptığını açıklayalım.
Öncelikle tepede "isiksensor"unu hangi pine atayacağımızı söyledik. Gördüğünüz üzere A0 numaralı pine atadık. Başına A yazmanız şart değil ancak onun Analog olduğunu anlamada işime yaradığı için bu şekilde kullanıyorum.
Daha sonra okuyacağımız değeri geçireceğimiz bir değişken atıyoruz. Adı "okuma2".</p>
<p style="text-align:justify;">Işık sensörünün okuma bilgilerini, daha doğrusu ADC okuması sonucu atadığı 0-1023 arasındaki rakamı görmek istiyoruz. Arduino bu değeri biliyor, ancak bize göstermesinin herhangi bir yolu yok dışarıdan ayrıca bir ekran eklemedikçe. Bunu kolayca aşmak için, Serial Monitor özelliğini kullanabiliriz. Burada Arduino'ya istediğimiz parametreleri bilgisayara Serial Monitor konsoluna yollamasını isteyebiliriz. Bu özellik büyük ihtimalle en kritik Arduino pratik bilgisi. Hata ayıklamadan, algoritmaların nasıl çalıştığını anlamaya kadar çok çeşitli alanlarda işimize yarıyor.</p>
<p style="text-align:justify;">Bu özelliği açmak için öncelikle bağlantıyı başlatmak gerekiyor. Bunu Serial.begin(9600) komutuyla yapıyoruz. Buradaki 9600 rakamı baud rate. Bit rate gibi bir şey ancak burada bitler yerine semboller var, şimdilik kafa yormamız gereken bir şey değil.</p>
<p style="text-align:justify;">Bağlantı kurulduktan sonra, okunan değeri sadece Serial Monitor'e göndermemiz yeterli. Bunun için "Serial.println(okuma2)" yazmamız gerek. "Serial.print" yerine "Serial.println" yazmamızın sebebi yeni satıra geçmek istememiz.</p>
<p style="text-align:justify;">Kodu Arduino'ya upload ettikten sonra sadece Arduino IDE'nin sağ üstünde bulunan büyüteç benzeri logodan Serial Monitor'u açmanız gerekiyor. Sensörün ölçtüğü datalar oraya aktarılıyor olmalı.</p>
<p style="text-align:justify;">10 kOhm'luk bir direnç taktığımda 100 ile 1000 arasında değişen değerler okudum sürekli olarak. Bu beklediğimden de geniş bir aralık ve olumlu bir gelişme. Sensöre fener veya lamba tutarak okumaların nasıl değiştiğini canlı olarak görebilirsiniz. Eğer düzgün bir şey okuyabildiyseniz sensörümüzden gelen veriyi değerlendirmeye başlayabilririz.</p>
<p style="text-align:justify;">Bu yazı dizisinin en başında dediğim gibi bu bisiklet ışığının normal durumda çakar konumda olmasını ancak çok karanlık bir yere girilmesi halinde çakma durumunun sona erip ışıkların tamamen yanar hale gelmesini istiyorum. Bunun için önceki yazıdaki gibi ek bir mod yaratalım. Bu varolan iki modumuza ek olarak bir otomatik modu olacak. Yeni mod eklemek için yapmamız gereken tek şey, lightmode değişkeninin sıfırlanma noktasını 2'den 3'e yükseltmek. Bunu yaparsak lightmode değişkenini 3'e eşitleyerek yeni bir işlev ekleyebiliriz.</p>
<p style="text-align:justify;">Bu işlev diğerlerinin aksine bir koşul daha barındıracak. Bu da ışık sensöründen gelen okuma2 değeri. Biz ortam çok karanlık olduğu takdirde, yani okuma2 değeri belli bir seviyeyi aştığında ışıkları sürekli yanar hale getireceğiz.</p>
<p style="text-align:justify;">Kodumuz:</p>


[code language="cpp"]
// İlk bölümdeki ledlere ek olarak tuşu ve programda kullanacağımız değişkenleri tanımlıyoruz. 
int led1 = 8;
int led2 = 7;
int tus = 6;
boolean okuma;
boolean sontusdurumu = HIGH;
boolean debounced;
long int artirma = 0;
int ledmode = 0;
int okuma2; 
int isiksensoru = A0;

// Kullandığımız pinleri çıkış pini olarak atıyoruz.Input ayarlamaya gerek yok. 
// Setup aşamasında pin'e HIGH komutu yollarak Pull-Up direnci aktifleştiriyoruz. 
void setup() {
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  digitalWrite(tus, HIGH);
  Serial.begin(9600);
}

// Arduino açık kaldığı sürece tekrarlanacak rutin:
void loop() {
  okuma = digitalRead(tus);
  Serial.println(okuma2);
  
  if (okuma == LOW){ //okuma LOW yani 0 ise
    artirma++;       //Bu rakamı bir artır
    if (artirma &amp;amp;gt; 20) { //20 kere artırdıktan sonra 
      debounced = HIGH;
    }
  }

  if (okuma == LOW &amp;amp;amp;&amp;amp;amp; okuma != sontusdurumu &amp;amp;amp;&amp;amp;amp; debounced == HIGH) {
    ledmode++; //Burada direk ışıkları kontrol etmek yerine ledmode artırıyoruz.
    if (ledmode &amp;amp;gt; 3) {
      ledmode = 0; //Programın başa dönmesi için bir noktadan sonra sıfıra dönmeli.
    }              // Yoksa sonsuza kadar sayar gider. 
    artirma = 0;
  }
  //ledmode == 0 konumunu tanımlamaya gerek yok zaten orada ışıkları kapalı istiyoruz.
  if (ledmode == 1) { // Işıklar tamamen açık
    digitalWrite(led1, HIGH);
    digitalWrite(led2, HIGH);
    delay(75);
    digitalWrite(led1, LOW);
    digitalWrite(led2, LOW);
    delay(75);
  }
  
  if (ledmode == 2) { // 75 Milisaniye aralıkla çakar mod
    digitalWrite(led1, HIGH);
    digitalWrite(led2, HIGH);
  }
  
  if (ledmode == 3){ // Otomatik Mod
    okuma2 = analogRead(isiksensoru); //Analog okuma yapılır
    if (okuma2 &amp;amp;gt; 500) { // 500 eşik değeri olarak seçildi. Büyükse ve küçükse farklı şeyler yapılacak. 
      digitalWrite(led1, HIGH);
      digitalWrite(led2, HIGH);
      delay(75);
      digitalWrite(led1, LOW);
      digitalWrite(led2, LOW);
      delay(75);
    }
    
    if (okuma2 &amp;amp;lt; 500) {
      digitalWrite(led1, HIGH);
      digitalWrite(led2, HIGH);
    }
  }
      
  sontusdurumu = okuma;
}

[/code]

Lightmode değişkenini en fazla 3 yapacak şekilde ayarlamak ek modun eklenmesi açısından önemli. Onu hallettikten sonra, loop bölümünün devamında 3. modda ne yapılacağını tanımlayabilirsiniz. Biz üçüncü modda sensörden ölçüm yapılacağını söyledik. Gördüğünüz üzere bu "digitalRead" fonskiyonu benzeri "analogRead". Bu ölçüm sonucu olan okuma2 parametresinin alacağı değere bağlı olarak da ledlerimizi ne şekilde kontrol edeceğimizi sadece if komutlarıyla sağlamayı başardık. Bu şimdiye kadar gördüklerimizden farklı bir kod değil ama nedense daha eğlenceli.

Işığın eşik değerini şimdilik 500 olarak seçtik. Bu değer bisikletin kullanılacağı bölgelerde de ölçüm yapılarak daha da optimize edilebilir. Ya da arduino'ya bağlanacak bir potans veya trimmer ile ile bu değer bisiklet üzerinde de hızlıca ayarlanabilir. Bir kalibrasyon mekanizması olarak.

Bisiklet ışığının ana iskeleti çıktı diyebiliriz. Şu anda elinizde basit de olsa çalışan bir örnek var. Ancak çalışıyor olması günlük hayatta kullanılabilir anlamına gelmiyor maalesef. Öncelikle programın bazı büyük kusurları var. Günlük kullanımda gerçekten deneyimin önüne geçebilecek bazı hatalar bunlar. Önce onları yavaş yavaş düzelteceğiz. Daha sonra Arduino'nun ufak varyasyonlarına bu programı nasıl uygulayabileceğimize bakacağız. Aklıma Arduino Pro Mini'ye uygulama fikri var ama henüz eBay'den aldığım Pro Mini'ler elime ulaşmadı.

O nedenle bundan sonraki postta, koddaki kusurları gidermeye çalışacağım.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>65</wp:post_id>
  <wp:post_date>2014-11-29 15:19:17</wp:post_date>
  <wp:post_date_gmt>2014-11-29 15:19:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sensorlu-bisiklet-isigi-bolum-4-farkli-modlar-ve-isik-sensoru</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ekran Resmi 2014-11-29 15.01.17</title>
  <link>https://dikendine.wordpress.com/2014/11/29/sensorlu-bisiklet-isigi-bolum-4-farkli-modlar-ve-isik-sensoru/ekran-resmi-2014-11-29-15-01-17/</link>
  <pubDate>Sat, 29 Nov 2014 13:01:44 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-29-15-01-17.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>68</wp:post_id>
  <wp:post_date>2014-11-29 13:01:44</wp:post_date>
  <wp:post_date_gmt>2014-11-29 13:01:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ekran-resmi-2014-11-29-15-01-17</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>65</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-29-15-01-17.png</wp:attachment_url>
</item>
<item>
  <title>Ekran Resmi 2014-11-29 15.03.10</title>
  <link>https://dikendine.wordpress.com/2014/11/29/sensorlu-bisiklet-isigi-bolum-4-farkli-modlar-ve-isik-sensoru/ekran-resmi-2014-11-29-15-03-10/</link>
  <pubDate>Sat, 29 Nov 2014 13:03:40 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-29-15-03-10.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>69</wp:post_id>
  <wp:post_date>2014-11-29 13:03:40</wp:post_date>
  <wp:post_date_gmt>2014-11-29 13:03:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ekran-resmi-2014-11-29-15-03-10</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>65</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/ekran-resmi-2014-11-29-15-03-10.png</wp:attachment_url>
</item>
<item>
  <title>04_bb</title>
  <link>https://dikendine.wordpress.com/2014/11/29/sensorlu-bisiklet-isigi-bolum-4-farkli-modlar-ve-isik-sensoru/04_bb/</link>
  <pubDate>Sat, 29 Nov 2014 14:05:01 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2014/11/04_bb.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>70</wp:post_id>
  <wp:post_date>2014-11-29 14:05:01</wp:post_date>
  <wp:post_date_gmt>2014-11-29 14:05:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>04_bb</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>65</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2014/11/04_bb.png</wp:attachment_url>
</item>
<item>
  <title>Arduino Bisiklet Işığı Bölüm 5: Hatalardan Ders Çıkarmak</title>
  <link>https://dikendine.wordpress.com/2014/12/03/arduino-bisiklet-isigi-bolum-5-hatalardan-ders-cikarmak/</link>
  <pubDate>Wed, 03 Dec 2014 19:03:57 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.wordpress.com/?p=72</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Eğer son kod ile vakit geçirdiyseniz, bazı kusurları olduğu göreceksiniz. Hem bir ufak kusuru, hem de iki tane baya büyük kusuru var. Onlara bakmaya çalışalım.</p>
<p style="text-align:justify;"><strong>1- Ufak Kusur</strong></p>
<p style="text-align:justify;">Bazen modlar arasında dolaşırken ışıkların kapanmadığını farkettim. Her zaman değil de, sanki belli bir koşula bağlı olarak oluşuyordu bu durum. Sonra programdaki şu yorumu gördüm:</p>
<p style="text-align:justify;">//ledmode == 0 konumunu tanımlamaya gerek yok zaten orada ışıkları kapalı istiyoruz.</p>
<p style="text-align:justify;">Burada, ileride daha ufak mikrokontrolörlere geçildiğinde program hafızasından tasarruf etme çabası vardı. Ne kadar az kod, o kadar fazla kod mantığı yani. Ancak ledmode 0'ın tanımlı olmaması şöyle bir soruna yol açıyor. Sonuncu sırada olan modumuzda, sensörden gelen veriye göre ışıklar sürekli açık konumdaysa ve bu durumda mod değiştirilirse, ortada bir ledmode = 0 tanımı olmadığından dolayı ışıklar açık kalıyor. Bu esnada ledmode'un değeri olması gerektiği gibi 0 ancak ledler açık.</p>
<p style="text-align:justify;">Eğer sensörden gelen verilere göre çakar modda iken mod değiştirseydik, ledmode'da hem değerimiz 0 olacaktı hem de ledler sönecekti. Bunun sebebi çakar modda son komutun digitalWrite(LOW) olması. Mod değiştikten sonra ledlere yeniden bir komut göndermediğimiz için son hallerinde kalıyorlar. Eğer otomatik modda ışık çakıyorsa sorun yok, tuşa basıldığında ledler kapanacak ama sürekli açık modda isek, ledler kapanmayacak.</p>
<p style="text-align:justify;">Bu çözmek için ledmode == 0 durumu tanımlanıp, tekrardan digitalWrite(LOW) komutu gönderebiliriz. Bunu Arduino'da yapmamak için bizi kısıtlayan bir şey yok. Ancak ileride daha ufak hafızalı bir çiple çalıştığımızı hayal ederek çözelim bu sorunu.</p>
<p style="text-align:justify;">Dediğim gibi ışıklar yanıp sönüyorsa, ledmode = 0'ın tanımlı olmaması sorun yaratmıyor. Bunun için modlarımızın sırasını değiştirerek, sonuncu (yani 3. ) modun hep çakar mod olmasını sağlayabiliriz. Hatta ben modlarımızı şu şekilde değiştireceğim:</p>
<p style="text-align:justify;">ledmode 0- Kapalı</p>
<p style="text-align:justify;">ledmode 1- Otomatik</p>
<p style="text-align:justify;">ledmode 2- Sürekli Açık</p>
<p style="text-align:justify;">ledmode 3- Çakar</p>
<p style="text-align:justify;">Bu sıralamayı yaparsak bu ufak sorun çözülecektir.</p>
<p style="text-align:justify;"><strong>2 - Baya Büyük İki Kusur</strong></p>
<p style="text-align:justify;">Bu kusurun adı delay(). Her ne kadar kullanışlı bir özellik olsa da, mikrokontrolörün işlevlerine büyük bir balta vurmakta oldukça başarılı. Önemli baltalarından bir tanesini, önceki postta da bahsettiğim üzere, tuşu tepksizleştirerek vuruyor. delay() fonksiyonu belirtilen zaman içerisinde tüm işlemleri durdururken, Arduino dışarıdan gelecek bütün müdahelelere tepkisiz kalıyor (tamam, tümü değil ama çoğunluğu). Buna bizim tuşumuz da dahil. Yani ledlerin sönük olduğu 75 milisaniye içerisinde tuşa basılırsa tepki alamıyoruz. Her ne kadar kısa bir süre aralığı gibi gözükse de sık sık başıma geldi.</p>
<p style="text-align:justify;">İkinci büyük kusuru ise, delay fonksiyonunun saniyede tamamlanan döngü sayısını değiştirmesi. Biliyorsunuz biz debounce yapmak için arka arkaya gelecek LOW sinyalleri sayıyoruz ve 20'ye ulaşınca tuşun salınımı bitti diyip komutlarımızı yerine getiriyoruz. LOW sinyalinin 20'ye ulaşması için döngünün 20 kere tamamlanması lazım. Bu döngünün süresi ışığın moduna göre değişiyor. Eğer ışık yanıp sönmüyorsa, işlemlerin tamamlanması anlık bir şey (yine bilimseliz). Ancak eğer yanıp sönme durumu varsa, yani delay fonksiyonları kullanılıyorsa döngünün tamamlanması "anlık bir şey + delay(75)*2". Bu bizim 20'ye kadar gelme süremizin farklı modlarda değiştiğini gösteriyor ki nereden baksan saçma. Böyle olmaması lazım.</p>
<p style="text-align:justify;"><strong>Çözüm Yolu 1</strong></p>
<p style="text-align:justify;">delay()'den tamamen kurtulmak en güzel çözümlerden bir tanesi. Delay'de zaman biriminden işlemcinin neredeyse bütün özelliklerini donduruyoruz. Bunu durdurmadan zaman tutmanın bir yolunu bulabilirse ve döngüyü kesmeden akan giden zamanın farkında olmanın bir yolu varsa, bunu çözebiliriz.</p>
<p style="text-align:justify;">Güzel bir orta açtım kendime, bir kafa golüyle bitireyim. Bunların çözümü millis() fonksiyonu. millis() Arduino'daki kod çalışmaya başladıktan itibaren zaman tutmaya başlayan bir fonksiyon. Onu çağırdığınızda size başlangıçtan itibaren geçen zamanı milisaniye cinsinden söylüyor. Biz milisi bir değişkene kaydedip, daha sonra void loop döngüsünde değişkene kaydettiğimiz zaman ile milis()'in sürekli saydığı zamanı karşılaştırabiliriz. Bu karşılaştırmanın 100 milisaniyeyi aşması durumunda led ışıklarımızın durumlarını değiştirebiliriz. Bütün kodu değil sadece sayacı ve led'leri açması şu şekilde:</p>


[code language="cpp"]
if ((unsigned long)(millis() - oncekiMillis) &amp;amp;gt;= 100){
      oncekiMillis = millis();
      digitalWrite(led1, leddurumu);
      digitalWrite(led2, leddurumu);
      leddurumu = !leddurumu;
[/code]

<p style="text-align:justify;">öncelikle oncekiMillis adında bir değişken kaydetmeliyiz. Millis fonksiyonunun döndüreceği değerler inanılmaz büyük rakamlar olabildiğinden bunları sıradan int değişkeninde değil, long değişkeninde tutmalıyız. Long değişkeni, -2.147.483.648 ve 2.147.483.647 arasındaki rakamları hafızasında tutabilir. Ancak dikkat ederseniz negatif sayılar mevcut. Bu negatif sayılar millis fonksiyonu tarafından kullanılmayacağı için (elbette zaman geriye doğru akmaya başlamazsa) ziyan oluyor. Biz bu sayı tutma hacmini tamamen pozitif tarafa aktarmak adına long değişkenimizi de unsigned olarak belirleyebiliriz. Bu sayede 0'dan  4.294.967.294'a kadar rakamları tutabiliriz.</p>
<p style="text-align:justify;">Yukarıdaki işlemde millis fonskiyonunun çağrıldığı anda saydığı zamanı geri döndüreceği tahayyül edebilirsiniz. Döndürdüğü bu rakamı oncekiMillis ile kıyaslayacağız (program hiç çalışmamışsa 0'dan başlayacak). Koşulların sağlandığı yerde, yani millis() değeri ile oncekiMillis arasında 100 fark olduğu anda, led ışıklarımızı bulundukları durumun tersine çevireceğiz ve anında oncekiMillis değerimizi şimdiki millis() değeri ile güncelleyeceğiz. Bu sayede programın bir sonraki turunda ışıklarımızın durumu düzgün bir şekilde değişebilecek. Burada esneklik sağlamak adına led ışıkları tek tek HIGH ve LOW diye tarif etmek yerine yine bir boolean değer ile iki seçenek arasında adeta bir flip flop usülü değişim yapmayı tercih ettim. Yeni tanımlanan leddurumu boolean'ı ile kolayca flip flop yapabiliyoruz.</p>
<p style="text-align:justify;">Program akışına baktığımda ise, programın iki aşamasında (mod 1 ve otomatik modda) bu blink olayının kullanıldığını gördüm. Bu nedenle aynı kodu farklı yere iki kere koymak yerine bunu loop fonksiyonu dışında bağımsız bir fonksiyon olarak tanımlamayı, ihtiyaç duyulduğunda çağırmayı planladım.</p>
<p style="text-align:justify;">Arduino'da fonksiyon kullanmak oldukça basit. Görelim:</p>


[code language="cpp"]
void ledBlink() {
  if ((unsigned long)(millis() - oncekiMillis) &amp;amp;gt;= 100){
      oncekiMillis = millis();
      digitalWrite(led1, leddurumu);
      digitalWrite(led2, leddurumu);
      leddurumu = !leddurumu;
  }
}
[/code]

<p style="text-align:justify;">Gördüğünüz gibi "void istediginizBirİsim" diyerek fonksiyon üretebiliyorsunuz. Buradaki void'in olayı, fonksiyonun herhangi bir değer geri döndürmediğini belirmemiz. Eğer matematiksel bir işlem yapıyor olsaydık ve sonucu "return sonuc" olarak yazmamız gerekseydi void yerine int yazmamız gerekirdi. Burada öyle bir amacımız yok ve void kullanıyoruz. Fonksiyonu ise gereken yerlerde şu şekilde çağırabiliyoruz.</p>


[code language="cpp"]
  if (ledmode == 1) {
    Serial.println(&amp;amp;quot;1&amp;amp;quot;);
    okuma2 = analogRead(isiksensoru);
    if (okuma2 &amp;amp;gt; 500) {
      ledBlink(); //Burada fonksiyon çağırılıyor
    }
[/code]

<p style="text-align:justify;">Daha sonra led'lerin çakmadığı yani sabit bulunduğu bölümlerdeki kodu da tekrar tekrar yazmanın gereksiz olduğuna kanaat getirdim. Geçirilecek HIGH veya LOW değerine göre ledleri kontrol etmeyi sağlayak bir fonksiyon yazdım. O da şu şekilde görülüyor:</p>


[code language="cpp"]
void ledStable ( boolean stablePosition ) {
  digitalWrite(led1, stablePosition);
  digitalWrite(led2, stablePosition);
}
[/code]

<p style="text-align:justify;">Gördüğünüz üzere bu bir boolean kabul eden fonksiyon. ledStable(HIGH) veya ledStable(LOW) diyerek istediğimiz bölümde kendisini çağırabiliriz. Böylece orda burda digitalWrite fonksiyonunu tekrar etmekten kurtuluruz. Programın tamamı şu şekilde:</p>


[code language="cpp"]
//degismeyecek degiskenler
const int led1 = 5;
const int led2 = 6;
const int tus = 2;
const int isiksensoru = A0;

//debounce
long artirma;
boolean debounced;

//mod degistirme
boolean okuma = HIGH;
boolean sontusdurumu = LOW;
int ledmode = 0;
int okuma2;

//blinking
unsigned long oncekiMillis;
boolean leddurumu = HIGH;

void setup() {
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  digitalWrite(tus, HIGH); //Internal Pull-Up direnç
}

void loop() {
  okuma = digitalRead(tus);

  if (okuma == LOW){ //okuma LOW yani 0 ise
    artirma++;       //Bu rakamı bir artır
    if (artirma &amp;amp;gt; 20) { //20 kere artırdıktan sonra
      debounced = true; //Koşul sağlanırsa debounced doğrulanır
    }
  }
  if (okuma == LOW &amp;&amp; okuma != sontusdurumu &amp;&amp; debounced == true) {
    ledmode++;
    if (ledmode == 3) { //daha fazla mod eklemek istiyorsanız 3 rakamını artırabilirsiniz
      ledmode = 0;
      artirma = 0;
    }
  }
  if (okuma == HIGH) { // 20'ye gelmeden duran serileri sıfırlar
    artirma = 0;
  }
  sontusdurumu = okuma; 

  if (ledmode == 3) { // Çakar Mod
    ledBlink();       // Çağırılan fonksiyon aşağıda
  }

  if (ledmode == 2) { // Sürekli Açık Mod
    ledStable(HIGH);  // Çağırılan fonksiyon aşağıda
  }

  if (ledmode == 1) {
    okuma2 = analogRead(isiksensoru); //Sensörden okuma yapılır
    if (okuma2 &amp;amp;gt; 500) {
      ledBlink();
    }
    if (okuma2 &amp;amp;lt; 500) {
      ledStable(HIGH);
    }
  }
}

void ledBlink() {
  if ((unsigned long)(millis() - oncekiMillis) &amp;amp;gt;= 100){ //Fark 100 milisaniye olursa
      oncekiMillis = millis();
      digitalWrite(led1, leddurumu);
      digitalWrite(led2, leddurumu);
      leddurumu = !leddurumu; //HIGH ve LOW arasında dönüp durması için
  }
}

void ledStable ( boolean stablePosition ) {
  digitalWrite(led1, stablePosition);
  digitalWrite(led2, stablePosition);
}

[/code]

<p style="text-align:justify;">Bu kod genel olarak çalışıyormuş gibi gözüküyor. Tek bir hatasını gördüm, ilk çalıştırmada, başkta iki kez tuşa basmak gerekiyor. Ondan sonra da hemen normale dönüyor zaten. Nedenini çözemedim.</p>
<p style="text-align:justify;"><strong>Çözüm Yolu 2 (Kısmen)</strong></p>
<p style="text-align:justify;">İkinci çözüm yolu, interrupt'lar ile olacaktı ancak şu anda inanılmaz bir açlıkla karşı karşıya kaldığımdan dolayı sonra devam etmeye karar verdim. Bölüm 6 olarak.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>72</wp:post_id>
  <wp:post_date>2014-12-03 19:03:57</wp:post_date>
  <wp:post_date_gmt>2014-12-03 19:03:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arduino-bisiklet-isigi-bolum-5-hatalardan-ders-cikarmak</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="arduino"><![CDATA[arduino]]></category>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <category domain="post_tag" nicename="delay"><![CDATA[delay]]></category>
  <category domain="post_tag" nicename="millis"><![CDATA[millis]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Arduino Bisiklet Işığı Bölüm 6: Interrupt'ları Kullanmak</title>
  <link>https://dikendine.wordpress.com/2014/12/17/arduino-bisiklet-isigi-bolum-6-interruptlari-kullanmak/</link>
  <pubDate>Wed, 17 Dec 2014 23:09:02 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.wordpress.com/?p=81</guid>
  <description/>
  <content:encoded><![CDATA[Önceki bölümlerde hatırlayacağınız üzere en önemli problemimiz tuşun delay fonksiyonu sebebiyle tepki vermemesiydi. O gün gelen açlık krizinin etkisiyle postu tamamlayamamıştım. Bugün ikinci çözüm yolunun ne olduğundan kısaca bahsedeceğim.

Delay fonskiyonunun CPU işlemlerini tamamen durdurduğunu söylemiştim ancak o biraz yanlış bir tabir oldu. Delay fonksiyonu aslında bir anlamda vitesi boşa alıyor. Araba motoru çalışıyor olsa da ortaya herhangi bir iş çıkmıyor. CPU da delay fonksiyonu esnasında boşa döngülerini çevirmeye devam ediyor ancak portlara herhangi bir değişiklik yansımıyor. Fakat mikrodenetleyicimizi delay fonksiyonunun bu karanlığından kurtaracak çok ama çok önemli bir özellik mevcut: Interrupt'lar.

Interrupt'lar tetiklendiği zaman CPU'nun o sırada ne yaptığına bakmaksızın kendi fonksiyonlarını çalıştırırlar ve Interrupt'lar delay melay dinlemeden CPU'yu rahatsız ederler. Bu sayede bir interrupt tetikleyerek delay fonksiyonu esnasında oluşan tuşları okumama durumunu yenebiliriz. Yani bir anlamda mikrodenetleyicimize "çalışmasına çalış ama ben bir interrupt tetiklediğimde o işini bırak ve interrupt ile gelen fonksiyonu hallet" diyebiliriz. Bu tek bir döngüde dönüp duracak programlarımız açısından önemli bir multitasking özelliği.

İnternette, interrupt'ların ne kadar önemli bir şey olduğunu anlatan bir çok kaynak var. Aklıma şimdi güzel bir kaynak gelmese de herhangi bir Google araması aydınlatıcı açıklamalar getirecektir. Tavsiye ederim. Zira mikrodenetleyicilerin en önemli özellikleri olarak gösteriliyorlar.

Interrupt'lar hem yazılımla hem de donanımla beraber tetiklenebilirler. Yazılımsal olarak interruptlar belirli süre aralıklarında (her 10 saniye ya da her 100 milisaniye gibi), mikrodenetleyiciye gelecek UART/USART komutlarında veya ADC işlemlerinin tamamlanmasıyla tetiklenebilir. Donanım interruptları ise, mikrodenetleyicinin belirli pinlerinde ölçülen gerilimlerin değişmesi suretiyle tetiklenebilir. Örneğin bir interrupt'ı pin'de ölçülen gerilim değişince tetikleyecek şekilde ayarlayabiliriz. Bunun üzerine, pin değişiminin yönünü bile belirtebiliriz. Örneğin, bir pin 1'den 0'a geçtiğinde tetiklenecek bir interrupt yaratabiliriz. Bu inanılmaz faydalı bir şey. Önceki postları hatırlarsanız, tuşun konumunu kaydetmek, karşılaştırmak için bir sürü değişken belirlemek zorundaydık.

Biz de tuşa basıldığında lightmode değişkenimizi bir artıracak bir interrupt yapacağız. Bunun için hali hazırda kodumuzda bulunan bir sürü bölümden (tuşu okuma, kontrol etme, debounce etme gibi) kurtulmak zorundayız. Uyguladığımız debounce yöntemi, sadece tekrarlanan döngünün içinde bir işe yaradığı için maalesef yapacağımız interrupt türüne uygun değil. Ona başka bir çözüm bulmamız gerekecek.

Interrupt eklemek Arduino'da oldukça basit. Void setup() bölümüne şu satırı yazın:

[code language="cpp"]
  attachInterrupt(0, modDegistir, FALLING);
[/code]

Kullandığımız fonksiyon attachInterrupt. Üç adet argüman kabul ediyor. İlki, hangi pinde interrupt için gerekli değişikliğin kontrol edileceği bilgisi. Sıfır rakamı kafanızı karıştırmasın. Evet, Arduino üzerinde sıfır numaralı bir analog pini var ama konuyla alakasız. Burada Arduino'nun temelini oluşturan Atmega328'in pin isimlerine göre hareket etmemiz gerekiyor.

<a href="http://arduino.cc/en/Hacking/PinMapping168">Bu sayfada</a> bulunan resme bakmanızı istiyorum. Bu bize Arduino'nun pinleri ile ona güç veren ATMega328'in pinlerini göstermekte. ATMega'nın fonksiyonlarla dolu pinlerini Arduinonun nasıl yalınlaştırdığını görebilirsiniz bu resimde. Biz ilgimizi INT0 pin'ine vermeliyiz. Bu donanımsal interrupt'ların sürekli olarak kontrol edileceği adanmış pinlerden bir tanesidir. Her ne kadar ATMega'nın PCINT yazan bütün pinlerini bu iş için adayabiliyor olsak da, 1'den 0'a, ya da 0'dan 1'e değişim yönünü ancak INT0 ile denetleyebiliriz. INT0 da gördüğünüz üzere PD2 portunda. attachInterrupt fonksiyonuna geçireceğimiz 2 değeri de buradna geliyor.

Fonksiyonun ikinci parametresi, interrupt'ın tetiklenmesi durumunda hangi fonksiyonun çalıştırılacağı. Bu çok bariz ve bir önceki postta loop() dışarısında fonksiyonların nasıl oluşturulacağını gördüğümüz için oldukça basit. Bu durumda yazmamız gereken fonksiyon şu şekilde olmalı:

[code language="cpp"]
  void modDegistir() {
  ledmode++;
  if (ledmode == 4) ledmode = 0;
}
[/code]

Gördüğünüz üzere fonksiyon oldukça basit. Sadece mod sayacını bir artırıyoruz. 4'e ulaşınca sıfırlıyoruz. if komutundan sonra gelecek emirlerin sadece tek satır olmasından ötürü, parantez sonrasına tekrardan {} bloğu açmadan kodumuzu koyabiliriz.

Üçüncü parametremiz interrupt'ı neyin tetikleyeceği konusunda. Eğer pin'in herhangi bir gerilim değişime tepki vermesini isteseydik CHANGE, 0'dan 1'e yükseldiğinde tetiklenmesini isteseydik RISING, 1'den 0'a düştüğünde tetiklenmesini isteseydik FALLING dememiz gerekirdi. Biz pull-up resistor ile sürekli olarak 1'e çekilen pinimizin FALLING değişimini denetlemek istiyoruz.

İnanması güç ama sadece bu kadarlık kod bizim modlar arasında rahatça dolaşmamızı sağlayacak. Aşağıda ekleyeceğim koddaki loop() fonksiyonunun nasıl kısaldığına dikkat edin. Döngümüz artık her turunda tuşu kontrol etmek zorunda kalmayacak. Bisiklet ışığının bir kaç saat boyunca aynı modda kalacağını düşünecek olursak sürekli tuş kontrol etmek epey gereksiz bir şey.

Burada üzerinde durulması gereken bir nokta debounce ihtiyacı. Debounce yapmadığımız takdirde interrupt arka arkaya bir kaç kez tetiklenebilir ve istediğimiz modu seçmeye engel olabilir. Bunu interrupt içerisinde yapmak biraz zor ve aslında en iyi çözümlerden biri değil. Ancak şimdilik çok basit bir yöntem uyduracağız.

Tuşumuzun salınımı yaklaşık 5 ms sürüyor ve bu esnada interrupt'ı tekrarlatacak sinyaller gönderebiliyor. Biz arka arkaya gelecek interrupt tetiklemelerini ciddiye almamak için interrupt fonksiyonu içerisinde mikrodenetleyiciyi boşta bekletebiliriz. Bunun için 5 veya 10 ms'lik delay fonksiyonu yeterli olacaktır.

<strong>Paradoks</strong>: Yukarıda delay fonksiyonuna bir tek interrupt'ların etki edebildiğini söylemiştim. Ancak şimdi de arka arkaya gelecek interrupt'ları okumamak için delay fonksiyonu kullanıyorum. Teorisini öğrenmem lazım çünkü pratikte işe yarayan bir çözüm oldu.

Son önemli nokta, hem interrupt fonksiyonunda, hem de ana döngüde kullandığımız lightmode değişkeni. Bu değişkeni volatile olarak tanıtmamız Arduino dökümanları tarafından, interrupt tarafından değiştirilen değerin loop'ta da güncel kalabilmesi için tavsiye edilmiş. Açıkçası bunu yapmayı unuttuğumda da kod çalıştı, o yüzden önemini kavrayamadım.

Tüm kod aşağıdaki gibi:

[code language="cpp"]
  //degismeyecek degiskenler
const int led1 = 5;
const int led2 = 6;
const int tus = 2;
const int isiksensoru = A0;

volatile int ledmode = 0;
int okuma2;

unsigned long oncekiMillis;
boolean leddurumu = HIGH;

void setup() {
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  digitalWrite(tus, HIGH); //Internal Pull-Up direnç
  attachInterrupt(0, modDegistir, FALLING); //1'den 0'a tetiklenecek
}

void loop() {

  if (ledmode == 3) { // Çakar Mod
    ledBlink();       // Çağırılan fonksiyon aşağıda
  }

  else if (ledmode == 2) { // Sürekli Açık Mod
    ledStable(HIGH);  // Çağırılan fonksiyon aşağıda
  }

  else if (ledmode == 1) {
    okuma2 = analogRead(isiksensoru); //Sensörden okuma yapılır
    if (okuma2 &amp;amp;gt; 500) {
      ledBlink();
    }
    else if (okuma2 &amp;amp;lt; 500) {
      ledStable(HIGH);
    }
  }
}

void modDegistir() { // Interrupt fonksiyonu
  delay(10);       // Tuş debouncing için bekleme süresi
  ledmode++;
  if (ledmode == 4) ledmode = 0;
}

void ledBlink() {
  if ((unsigned long)(millis() - oncekiMillis) &amp;amp;gt;= 100){ //Fark 100 milisaniye olursa
      oncekiMillis = millis();
      digitalWrite(led1, leddurumu);
      digitalWrite(led2, leddurumu);
      leddurumu = !leddurumu; //HIGH ve LOW arasında dönüp durması için
  }
}

void ledStable ( boolean stablePosition ) {
  digitalWrite(led1, stablePosition);
  digitalWrite(led2, stablePosition);
}

[/code]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>81</wp:post_id>
  <wp:post_date>2014-12-17 23:09:02</wp:post_date>
  <wp:post_date_gmt>2014-12-17 23:09:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arduino-bisiklet-isigi-bolum-6-interruptlari-kullanmak</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <category domain="post_tag" nicename="arduino-interrupt"><![CDATA[arduino interrupt]]></category>
  <category domain="post_tag" nicename="interrupts"><![CDATA[interrupts]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Arduino Bisiklet Işığı Bölüm 7: Sensör Verilerini Yumuşatmak</title>
  <link>https://dikendine.wordpress.com/2015/01/01/arduino-bisiklet-isigi-bolum-7-sensor-verilerini-yumusatmak/</link>
  <pubDate>Thu, 01 Jan 2015 14:12:12 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=94</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">- Bisiklet ışığımızın girdiği her gölgede çılgın atmaması için, sensörden gelen verilerin ortalamasının alınması, yumuşatılması, düzene sokulması gibi konulardan bahsedeceğiz. -</p>
<p style="text-align:justify;">Yetişkin bir analog sensör, saniyede milyonlarca veri toplayabilir, bunları umarsızca direkt olarak Arduino'ya gönderebilir, gördüğü her şeyi iletmek suretiyle kullanıcı deneyimini baltayabilir. Bizim bisiklet ışığımızda bu istemeyeceğimiz bir olay. Geceleri iyi aydınlatılmış bir bölgede bir ağacın gölgesinden geçerken ışığımızın buna tepki vermesini istemeyiz. Yani tamam, verse umrumuzda olmayabilir belki ama konuya girdik bi kere, anlatacağız.</p>
Neyse, dediğim gibi gördüğü kısa süreli değişikliklere göre tepki veren bir cihaz istemeyiz. Dikkatimizi dağıtabilir. Biz bisikletimizi sürerken gidonun üzerinde kafasına göre takılıp sürekli mod değiştirebilir. Biz ışığımız daha ağır kanlı, daha sakin, 3 saniye önce okuduğu değerleri unutmayan, nereden geldiği bilen bir cihaz olsun istiyoruz. Bunun en basit yolu da şu: hareket eden ortalamalar.
<p style="text-align:justify;">İngilizcesi moving veya rolling average diye geçiyor. Hesaplanması açısından bir sürü güzel kaynak mevcut. <a href="http://en.wikipedia.org/wiki/Moving_average">Özellikle wikipedia sayfası.</a> Biz hem bu sayfadan hem de <a href="http://arduino.cc/en/Tutorial/Smoothing">Arduino sayfasından </a>yararlanarak 3 adet çözüm yöntemine bakacağız.</p>
<p style="text-align:justify;">Büyük ihtimalle tahmin ettiniz. Sensörün ölçtüğü anlık verilerle karar vermemek adına, son 10 veriyi veya son 100 veriyi hafızasında tutup, onların sürekli ortalamasını alan bir çözüm getireceğiz. Bu çözümde belirlediğimiz sayıdaki ölçüm bir dizide toplanacak ve her yeni gelen ölçüm sonucu, en eski ölçüm sonucunu diziden atacak. Ölçüm sonuçlarını sallıyorum, ama örnek olarak şöyle bir şey.</p>
<p style="text-align:justify;">543 543 542 544 <span style="text-decoration:underline;">546 543 556 578 590 574 556 550 544 543</span></p>
<p style="text-align:justify;">Altı çizili kısım bizim ortalamasını alacağımız kısım. Yeni veri geldiğinde ise şu şekilde bir kaydırma yapacağız. Rakamlara dikkat:</p>
<p style="text-align:justify;">543 543 542 544 546 <span style="text-decoration:underline;">543 556 578 590 574 556 550 544 543 680</span></p>
<p style="text-align:justify;">Gördüğünüz gibi yeni gelen 680 verisiyle beraber, dizide bulunan en eski veriyi, yani 546'yı ocak dışında bıraktık. Burada şu önemli; 680, diğer ölçümlere göre çok yüksek kalan bir rakam. Buna rağmen Arduino, ortalama aldığımızdan dolayı derhal bu rakama tepki vermeyecek. Ancak 600'lü rakamların gelmeye devam etmesiyle ortalamamız yükselebilir ve belki yanma modu değişebilir. Bu Arduino'nun sayfasında anlatılan güzel bir metod. <a href="http://arduino.cc/en/Tutorial/Smoothing">Ardino sayfasında da paylaşılan </a>kodu görelim:</p>


[code language="cpp"]
//Rolling Average için gerekli değişkenler
const int okumaSayisi = 20;
int okumalar[okumaSayisi];
int indeks = 0;
int toplam = 0;
int ortalama = 0;
[/code]


[code language="cpp"]

if (ledmode == 1) {
    //tanımlanan dizinin indeks pozisyonunda duran degeri çıkar
    toplam = toplam - okumalar[indeks];
    //onun yerine yeni bir ölçüm al ve kaydet
    okumalar[indeks] = analogRead(isiksensoru);
    //toplama yeni ölçümü ekle
    toplam = toplam + okumalar[indeks];
    //dizinin farklı bir pozisyonuna ilerle
    indeks++;
    //dizinin boyutunu berirlemek için okumaSayisi'nı sınırla
    if (indeks == okumaSayisi) indeks = 0;
    //dizinin içindeki değerlerin ortalamasını al
    ortalama = toplam / (okumaSayisi-1);
    //bu ortalamaya göre karar ver
    if (ortalama &amp;gt; esikDeger) {
      ledBlink();
    }
    if (ortalama &amp;lt; esikDeger) {
      ledStable(HIGH);
    }
  }
[/code]

<p style="text-align:justify;">Bu metod Ardunio ve onu Arduino yapan ATmega328p mikrodenetleyicisiyle birlikte güzelce çalışacaktır. Ancak bisiklet ışığımızı hem daha az yer kaplayan, hem daha az güç tüketen hem de daha ucuz bir mikrodenetleyiciyle yapmak istersek içerisinde 10 veya 100 tane ölçüm barındıran bir dizi tanımlamak, derhal mikrodenetleyicinin az olan RAM'ini dolduracak ve kod direkt olarak çalışmayacaktır.</p>
<p style="text-align:justify;">O nedenle bu sürekli ortalama alma fikrinin mikrodenetleyicilere uygun bazı farklı hesaplama yöntemleri var. Bu yöntemlerin hepsi Wikipedia'da anlatılmış. Ben <a href="http://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average">özellikle üslü hareketli ortalamalara</a> (berbat Türkçe'ye çevirdim. Aslında Exponential Moving Averages) değinmek istiyorum.</p>
<p style="text-align:justify;">Wikipedia'da verilen fonksiyonlar kafa karıştırıcı olabiliyor. Ben şöyle özetlemeye çalışayim. Sensörün ölçtüğü değeri sakladığımız bir değişkenimiz olsun:</p>


[code language="cpp"]
  okuma = analogRead(isiksensoru);
  if (okuma &lt; 500) {
      ledStable(HIGH);
    }
[/code]

<p style="text-align:justify;">Gördüğünüz gibi burada bir okuma yapıyoruz ve okumanın sonucu direkt olarak karar verme aşamamızda kullanıyoruz. Önceki turda ölçülen değerin herhangi bir önemi yok. Bir dizi tanımlamadan önceki serileri hatırlamanın çok güzel bir yolu var.</p>


[code language="cpp"]
  okuma = analogRead(isiksensoru);
  gecmisiHatirlayanOkuma = gecmisiHatirlayanOkuma*0.9 + okuma*0.1;
  if (gecmisiHatirlayanOkuma &lt; 500) {
      ledStable(HIGH);
    }
[/code]

<p style="text-align:justify;">Burada yine okumamızı yapıyoruz. Ancak bunu direkt olarak karar vermede kullanmıyoruz. İkinci bir değişken tanımlayarak önceki ölçümlerimizden gelen verileri de hesaba dahil ediyoruz. Dikkat ederseniz, gecmisiHatirlayanOkuma degiskenimizin karşısında, gecmisiHatirlayanOkuma * 0,9 gibi bir ibare var. Yani değişkene yeni bir değer atarken, önceki turda ölçülen sonucun %90'ını aktarıyoruz. Yani ona bir nevi hafıza kazandırıyoruz. Değişkenin geri kalan %10'luk kısmı ise yeni yaptığımız okuma değerinden geliyor. Yani bir nevi önceki okumaları 100 tam sayıyı bir dizide tanıtmadan, RAM'de aşırı yer kaplamadan kaydetmiş oluyoruz. Bu %90-%10'luk oranlar sizin hassasiyetinizi belirliyor ve istediğiniz şekilde değiştirebilirsiniz. Örneğin yeni gelen okuma sonucunun %10 değil de %1 etkilemesini isterseniz, her gelen yeni sonuç, gecmisiHatirlayanOkuma değerinizi daha az etkilemeye başlayacak. Bu sayede daha yavaş tepki veren bir sensöre sahip olacaksnız. Ya da tam tersi.</p>
<p style="text-align:justify;">Gördüğünüz gibi burada array kullanmaktan kaçındık ve belki de kısıtlı RAM'imize sığdırmayı başardık programı. Ancak sorunlar burada bitmiyor. Önceki örnekte olduğu gibi ATmega 328P bu işlemlerin üstünden kolaylıkla gelebilir ancak daha ufak bir çip küsüratlı sayılarla yapılan işlemlerde oldukça zorlanabilir. AVR mikrodenetleyiciler her ne kadar saniyede milyonlarca kez sensörden veri alabilseler de küsüratlı sayı işlemlerinde zorlanmaktadırlar. Bu nedenle mümkün olan her fırsatta küsüratlı sayı kullanmaktan kaçının. Özellikle bizim rakamları göremeyeceğimizi, sadece sensör ölçümünde kullanacağımızı göz önünde bulundurursanız küsüratlı sayılara bulaşmamak en iyisi. Eğer virgüllü sayılardan uzak durmak istiyorsanız şöyle bir çözüm uydurabilirsiniz:</p>


[code language="cpp"]
  okuma = analogRead(isiksensoru);
  gecmisiHatirlayanOkuma = (gecmisiHatirlayanOkuma*9)/10 + okuma/10;
  if (gecmisiHatirlayanOkuma &lt; 500) {
      ledStable(HIGH);
    }
[/code]

<p style="text-align:justify;">Ancak burada da başka (hatta belki daha büyük) bir sorun var. Her ne kadar AVR çipler çarpma işlemini kolaylıkla yapabilselerde, bölme işlemlerinde de düşük performans göstermektedirler. Burada tam sayılarla işlem yapabilmek adına 10 ile bölüm yaptık. Peki hangisi daha kötü? Tam sayılar ile bölme işlemi yapmak mı? Yoksa virgüllü sayılarla çarpma işlemi yapmak mı? Bunu kolaylıkla test edebiliriz. Aşağıdaki kod, Arduino'nun içindeki kronometreyi kullanarak 10.000 adet tam sayı bölme ve 10.000 adet virgüllü sayı çarpma işlemleri için geçen süreyi hesaplıyor. Gördüğünüz micros fonksiyonu, çağırıldığı zaman sadece programın başından itibaren ne kadar zaman geçtiğini söyleyen faydalı bir fonksiyon. İşlemlerin başında ve sonunda iki ölçüm yapıp bu rakamları kıyaslarsak, geçen zamanı da hesaplayabiliriz. Oldukça faydalı. Kod aşağıda:</p>


[code language="cpp"]
int i;
int okuma = 400;
unsigned long baslangic;
unsigned long gecenZaman;

void setup() {
  Serial.begin(9600);
}

void loop() {
  // Floating Point ile
  baslangic = micros();
  for (i = 0; i &amp;lt; 10001; i++)
  {
    okuma = okuma*0.9 + okuma*0.1;
  }
  gecenZaman = micros() - baslangic;
  Serial.print(&amp;quot;float: &amp;quot;);
  Serial.println(gecenZaman);
  /
  //Tam sayı bölümü ile
  baslangic = micros();
  for (i = 0; i &amp;lt; 10001; i++)
  {
    okuma = okuma*9/10 + okuma/10;
  }
  gecenZaman = micros() - baslangic;
  Serial.print(&amp;quot;integer: &amp;quot;);
  Serial.println(gecenZaman);
}
[/code]

<p style="text-align:justify;">Aslında çok önemli değil ama işlemlerin ne kadar hızlı tamamlandığına dair ufak bir bilgi vermesi açısından faydalı bir uygulama. Göreceğimiz üzere ortalama adında sabit bir değerimiz var ve bunun üzerinden hem virgüllü sayılar ile hem de tam sayı bölümü ile işlem yapıyoruz. Elbette tek işlemin süresini ölçmek zor olacağından bu işlemi 10000 kez tekrarlatıyoruz for loop ile. Başında ve sonunda ölçtüğümüz micros değerlerinin farkı ile de geçen zamanı buluyoruz kabaca. 10000 işlem için benim gördüğüm sonuçlar bu şekilde:</p>
<p style="text-align:justify;">Virgüllü Sayılar ile: 343360 mikrosaniye</p>
<p style="text-align:justify;">Tam Sayı bölümü ile: 289400 mikrosaniye</p>
<p style="text-align:justify;">Gördüğünüz gibi yaklaşık %15'lik bir iyileşme var kodun çalışma hızında. Bu güzel bir ilerleme. Ancak burada durmamamız lazım. Tam sayıları entegre etresek de, ileride kullanmak isteyeceğimiz ufak mikrodenetleyiciler için bu bile fazla gelebilir. Peki float kullanmadan ve bölme yapmadan bölme yapabilmek mümkün mü?</p>
<p style="text-align:justify;">Elbette mümkün. Adı bit kaydırma (bit shifting).</p>
<p style="text-align:justify;">Bu benim her zaman kafamı karıştıran bir konsept. O yüzden anlatmaya 10'luk sayma sisteminden başlamak istiyorum. Şimdi önce 8 slotu olan bir bölüm hayal edelim. Her slotun bir rakam tutabilme kapasitesi var. Eğer 68 rakamını yazmak istersek şu şekilde gösterebiliriz.</p>
<p style="text-align:justify;">00000068</p>
<p style="text-align:justify;">Bu bizim rakamımız. Bunu 10 ile çarpmak istersek bunu konvansiyonel olarak 68 x 10 şeklinde yapabiliriz. Ancak dikkatinizi çekmek istediğim bir nokta var, eğer tüm rakamları bir basamak sola kaydırırsak elde edeceğimiz sonuç:</p>
<p style="text-align:justify;">(00000068 &lt;&lt; 1) = 00000680 (C kodunda bit kaydırma notasyonu bu şekilde)</p>
<p style="text-align:justify;">Baştan bir sıfır düştü ve sona bir sıfır eklendi diyebiliriz aslında. Önemli olan şey, bu kaydırma işleminin sonucunda sayımız 10'la çarpılmış oldu. Bunu istediğimiz sayıya istediğimiz kadar yapabiliriz. Her zaman bir basamak kaydırdığımızda bir rakamı 10 ile çarpmış oluyoruz.</p>
<p style="text-align:justify;">İşin güzel yanı aynısı bölme işlemi için de geçerli. Bu sefer 687 rakamını ters yöne, yani bir basamak sağa kaydıralım.</p>
<p style="text-align:justify;">(00000687 &gt;&gt; 1) = 00000068</p>
<p style="text-align:justify;">Başa bir sıfır geldi ve sondaki 7 aşağı düştü diye düşünebiliriz. Bölme işlemi yapmadan bir rakamı 10'a bölmüş olduk. Ancak bir şey dikkatinizi çekecektir, eğer 687'i konvansiyonel bir şekilde 10'a bölseydik elimizde 68,7 kalacaktı ve virgüllü sayılarla uğraşmak istemediğimizden dolayı bunu 69 olarak yuvarlayacaktık. Bunu bit kaydırmalı yöntemle yapmamız mümkün değil. Sondaki rakam ne olursa olsun slottan aşağı atılacak ve elde kalan iki rakam değerlendirilecek.</p>
<p style="text-align:justify;">Bunu çözümü kolay. Sadece bit kaydırma yapmadan önce rakama 10 ekleyin. O zaman her zaman yukarı yuvarlanan sayılar elde edersiniz. Ya da aynı mantıkla her zaman aşağı yuvarlanan sayılar elde etmek istiyorsanız 10 çıkarın.</p>
<p style="text-align:justify;">Buraya kadar açıklayabildiysem, şimdi de makine koduna bakalım. Bildiğiniz üzere makina kodu 0 ve 1'lerden, yani ikili sayma (binary) sisteminden oluşuyor. Bizim kodumuzda verdiğimiz sayı her zaman binary sisteme dönüştürülüyor. 22'nin binary karşılığına bakalım. Tekrardan 8 slotla çalıştığımızı unutmayın:</p>
<p style="text-align:justify;">00010110 (10'lu sistemde 22)</p>
<p style="text-align:justify;">Eğer bu rakamı bir kez sola kaydırırsak, aynı 10'lu sistemde olduğu gibi sonuna bir sıfır eklenecek:</p>
<p style="text-align:justify;">(00010110 &lt;&lt; 1) = 00101100 (Onlu sistemde 44)</p>
<p style="text-align:justify;">Bu rakamın karşılığına baktığınızda ise şu sonucu görüyorsunuz: 44. Tanıdık geldi mi? Hadi bir kez daha yapalım ve sona bir sıfır ekleyelim:</p>
<p style="text-align:justify;">(00101100 &lt;&lt; 1) = 01011000 (88!)</p>
<p style="text-align:justify;">Bu binary rakamın karşılığı ise 88. Şimdi biraz daha netleşmiştir sanırım. 22 - 44 -88. Binary sistemde rakamları sola kaydırdığımız her seferde, sayımız 2 ile çarpılıyor. Yani mikrodenetleyici üzerinde bir rakamı iki ile çarpmak yerine bitlerini kaydırabiliriz. İşin güzel yanı, bu bölme işlemi için de geçerli. Rakamları sağa kaydırıp sondan bir basamak atarsanız, elinizdeki sayıyı ikiye bölmüş olursunuz.</p>
<p style="text-align:justify;">Bununla oynamak, nasıl bir şey olduğunu görmek için şu linki takip edin:</p>
<p style="text-align:justify;">http://www.mathsisfun.com/binary-decimal-hexadecimal-converter.html</p>
Hem binary hem de onlu sayıları değiştirip kurcalayabilirsiniz. Sona basamak ekledikçe veya çıkardıkça nasıl 2'yle çarpılıp 2'yle bölündüğüne bakabilirsiniz.

Tabii şöyle bir sorun çıkıyor ortaya. Biz sayılarımızı 10'a bölmek ve 9 ile çarpmak istiyoruz. Binary'de sağa sola kaydırarak 9 veya 10 ile işlem yapamayız. Sadece 2 ve 2’nin üstleriyle hareket edebiliriz. Ya da başka bir yolu var mı?

Sanırım var (yarattığı beklentiyi karşılayamadı). Sanırım var diyorum çünkü internette bunun üzerine yazılmış pek fazla kaynak bulamadım. Kendim bir yöntem düşündüğümde ise sistematik bir çözüme ulaşamadım. Ben de pratik yoldan 2 ve 2’nin üsleriyle işlem yapmaya razı oldum şimdilik. Yani %1 yerine 1/128 gibi yakın değerlerde çalışmaya karar verdim. Bunu yapmak oldukça basit. Şöyle düşünelim:

Ortalama = okuma/128 + ortalama*127/128

Ortalama’nin 128 parçasından 127 tanesi, önceki döngüde hesaplanmış ortalama değerinden gelecek. 1/128’i yeni okuduğumuz değerden vereceğiz. Buradaki 128’e bölüm işlemlerini kolayca yapabiliriz. Daha düzenli gözükmesi açısından iki tarafı da 128 ile çarpabiliriz.

128 * Ortalama = okuma + ortalama * 127

Ancak bulduğumuz ortalama değerini kullanırken onu 128’e bölmemiz gerek. Yani 7 kez sağa kaydırmamız gerek.

Ortalama = okuma + ortalama * 127

Ortalama = ortalama &gt;&gt; 7

En nihayetinde kodumuz bu şekilde gözükecek:

[code language="cpp"]
  okuma = analogRead(isiksensoru);
  ortalama = okuma + ortalama * 127;
  ortalama = ortalama &gt;&gt; 7;
  if (ortalama &gt; 500) {
	....
  }
[/code]

&nbsp;

Bu sayede mikrodenetleyiciye fazla yük bindirmeden sensörden gelen bilgiyi düzene sokmuş olduk.

Bir sonraki yazıda kullanıcının, ışığın hangi karanlık seviyesinde yanıp hangi karanlık seviyesinde çakmaya başlayacağını ayarlayabilmesi için bir kalibrasyon özelliği ekleyeceğiz.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>94</wp:post_id>
  <wp:post_date>2015-01-01 14:12:12</wp:post_date>
  <wp:post_date_gmt>2015-01-01 14:12:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arduino-bisiklet-isigi-bolum-7-sensor-verilerini-yumusatmak</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="arduino"><![CDATA[arduino]]></category>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <category domain="post_tag" nicename="bit-shifting"><![CDATA[bit shifting]]></category>
  <category domain="post_tag" nicename="hareketli-ortalama"><![CDATA[hareketli ortalama]]></category>
  <category domain="post_tag" nicename="moving-average"><![CDATA[moving average]]></category>
  <category domain="post_tag" nicename="rolling-average"><![CDATA[rolling average]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0d869dcd2538e9450fb54b8bc64720d4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ab4e3ac3e5bbd64b1205468f9634de00</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Arduino Bisiklet Işığı Bölüm 8: Ne Kadar Süre Tuşa Basıldığını Ölçme</title>
  <link>https://dikendine.wordpress.com/2015/01/03/arduino-bisiklet-isigi-bolum-8-ne-kadar-sure-tusa-basildigini-olcme/</link>
  <pubDate>Sat, 03 Jan 2015 17:22:24 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=108</guid>
  <description/>
  <content:encoded><![CDATA[Fark ettim ki, programa ışığın aktive olması için belirli bir ölçüm değeri girmek mantıklı bir hareket değil. Her bindiğim yerde, istediğim şekilde tepki vermeyebilir. O nedenle, bisiklet ışığına basit bir kalibrasyon/ayarlama fonksiyonu eklemeye karar verdim.

Çok basit çalışacak: otomatik modda iken tuşa uzun basıldığında ortamdaki ışık seviyesini ölçecek ve o değeri eşik değer olarak kaydedecek. Çok basit ancak tuşu nasıl denetlediğimizi değiştirmemiz gerekmekte.

Şu zamana kadar tuş basıldığında saymaya başladık ve o sayaç belli bir değeri geçince ışık modunu değiştirdik. Şimdi bunu değiştirerek, tuşun ne kadar süreyle basıldığına bakıp ona göre işlemleri gerçekleştirmemiz gerek. Yapmak ise oldukça basit, tuş basılı iken sayacağız ve tuş bırakıldıktan sonra gelecek ilk HIGH komutuyla beraber sayacı sıfırlamadan ne kadar saydığımızı kontrol ederek işlemleri gerçekleştireceğiz.


[code language="cpp"]
if (digitalRead(tus) == LOW) {
    sayac++; //Saymaya başla
    if (sayac == 200 &amp;&amp; ledmode == 1) //Otomatik modda yeterince basılı tutulduysa{
      ledmode = 5; //Ledler sönsün diye tanımlanmamış bir ledmode
      esikDeger = 0; //esik değeri sıfırla
      for (int i = 0; i &lt; 8; i++) { //Arka arkaya 8 kez ölçüm alınacak
        esikDeger = esikDeger + analogRead(isiksensoru); //eşik değeri eklemeye başla
        digitalWrite(led1, HIGH);
        digitalWrite(led2, LOW);
        delay(50);
        digitalWrite(led1, LOW);
        digitalWrite(led2, HIGH);
        delay(50);
      }
      esikDeger = (esikDeger&gt;&gt;3); //8 ölçümün toplamını 8'e böl
      ledmode = 1; // otomatik moda geri dön
    }
  }
  else {
    if (sayac &gt; 2 &amp;&amp; sayac &lt; 500) { //Tuş bırakıldı
      ledmode++; // mod değiştir
      if (ledmode == 4) {
        ledmode = 0; //başa dön
      }
    }
    sayac = 0; //Bir sonraki ölçüm için sayacı sıfırla
  }
[/code]

Evet gördüğünüz gibi tuş bırakılana kadar mod değişmeyecek. Ancak otomatik modda elinizi basılı tutup bırakmazsanız sensör yeni ölçümü eşik değer olarak kaydedecek ve tekrar otomatik moda geri dönecek. Bir tuşun ne kadar süreyle basıldığını anlamak bu kadar kolay. Kesin olarak milisaniye cinsinden ölçmek istiyorsanız mikrodenetleyici içindeki millis fonksiyonunu kullanabilirsiniz aslında. Ancak burada gerek kalmadı.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>108</wp:post_id>
  <wp:post_date>2015-01-03 17:22:24</wp:post_date>
  <wp:post_date_gmt>2015-01-03 17:22:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arduino-bisiklet-isigi-bolum-8-ne-kadar-sure-tusa-basildigini-olcme</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Bu Blogun Amacı Nedir?</title>
  <link>https://dikendine.wordpress.com/bu-blogun-amaci-nedir/</link>
  <pubDate>Thu, 01 Jan 2015 14:22:29 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?page_id=109</guid>
  <description/>
  <content:encoded><![CDATA[Arduino ve AVR'ler merak alanım olduğundan bu konuda daha fazla şey öğrenmek istiyorum. Bunun yanında, öğretmeye çalışmanın en iyi öğrenme yolu olduğuna inanıyorum. Bloga gelecek ziyaretçi sayısından bağımsız olarak, birilerine bir şeyler anlatıyormuş gibi yaparak kendimi geliştirmek amacım. O nedenle bilgi yanlışları olabilir, kötü kodlar olabilir. Amaç bunları deneyimleyerek daha ileriye gidebilmek.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>109</wp:post_id>
  <wp:post_date>2015-01-01 14:22:29</wp:post_date>
  <wp:post_date_gmt>2015-01-01 14:22:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bu-blogun-amaci-nedir</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Arduino Bisiklet Işığı Bölüm 9: Hangi Arduino Modeli?</title>
  <link>https://dikendine.wordpress.com/2015/01/08/arduino-bisiklet-isigi-bolum-9-hangi-arduino-modeli/</link>
  <pubDate>Thu, 08 Jan 2015 11:17:36 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=118</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Bu ışık için karar vermemiz gereken iki şey var: boyutu ve pili. Eh, en önemli özelliği de bu zaten. Bu işe Arduino ile başadık ve Arduino ile devam edeceğiz şimdilik. İlk bölümlerde bahsettiğim üzere, Arduino’nun bu kadar popülerleşmesinin sebepleri, kolay kullanılan dili, bilgisayara direkt olarak bağlanıp programlanabilmesi ve kendi gerilim düzenleyicisi (a.k.a voltaj regülatörü, hangisi doğru bilmiyorum?) bulunması. Bunların hepsi güzel özellikler ancak projemiz sonlandığında bize boyut ve karmaşıklık olarak geri dönüyorlar. Yani bir geliştirme ve prototipleme kartını, günlük hayatta kullanacağımız son üründe kullanmaya çalışıyoruz. Bu biraz garip bir şey ama yine de işimize yarayacak Arduino türleri var.</p>

<ul style="text-align:justify;">
	<li>Arduino Nano</li>
</ul>
<p style="text-align:justify;">Nano, işlevsel olarak tamamen Uno ile aynı diyebiliriz. Kendi USB-Serial dönüştürücüsü, USB girişi, voltaj regülatörü ve ATmega328P mikrodenetleyicisi var. Ancak tamamen aynı olmasının yanında, Arduino Uno’dan 2 veya 3 kat daha ufak ve hafif. Zaten Uno’nun o standart boyutunda olmasının sebeplerinden bir tanesi, gelişmiş shield desteğinin devam edebilmesi. Shield ekleme gibi derdiniz yoksa normal Nano kullanmanın bir dezavantajı yok. Kendi gerilim güzenleyicisi Uno’ya kıyasla daha dar bir aralıkta çalışıyor olmasına rağmen mevcut. Uno 12 volta kadar çalışabilirken Nano için bu değer 9V. Ebay veya banggood.com gibi sitelerden inanılmaz ucuz fiyatlara kendinize nano getirtebilirsiniz. Dikkat edilmesi gereken tek nokta, USB-Serial dönüştürücüsü olarak hangi çipi kullandığı. Bu çiplerin en yaygın olanı FTDI, orijinal Arduino Nano’da kullanılan çip. Ancak bu çipi üreten firmanın geçen aylarda yayınladığı bir Windows güncellemesiyle beraber sahte FTDI’lar (yani eBay ve Banggood gibi sitelerde satılan Arduino’ların kullandıkları) kullanılamaz hale geliyor. Her ne kadar aşırı tepkiler nedeniyle o güncelleme geri çekildiyse de, ben Nano’mu bağladığımda bazen sürücüleri tekrar elle yüklemek zorunda kalabiliyorum. Garip bir durum. Çözümü şudur, güncellemenin olayları karıştırmasından sonra, zaten pahalı olan FTDI çiplerinin alternatifleri eBay’i doldurmaya başladı bile. Artık Arduino Nano klonlarında daha ucuz, sürücü sorunu olmayan CH340G çipleri yaygınlıkla kullanılıyor. Onlardan tercih etmeniz kafanızı rahatlatacaktır.</p>

<ul style="text-align:justify;">
	<li>Arduino Pro Mini</li>
</ul>
<p style="text-align:justify;">Düşününce şu geliyor akla. USB-Serial dönüştürücüler Arduino’yu programlamak için kullanılıyor ancak biz yapacağımız şeyi tamamladıktan ve kullanmaya başladıktan sonra tekrar Arduino’yu programlamaya sık sık ihtiyaç duymayacağız. O nedenle, bir kere kod tamamlandıktan sonra bu dönüştürücü çipe çok ihtiyacımız yok. Hem Arduino’nun ücretini yükseltiyor, hem bi şey yapmasa ile güç tüketiyor hem de Arduino’nun boyutunu büyütüyor. İşte bu sebeple üzerinde USB-Serial dönüştürücüsü bulunmayan Pro Mini biçilmiş kaftan. Hem Uno ile aynı mikrodenetleyiciye sahip, hem üzerinde voltaj regülatörü var ancak dediğim gibi USB-Serial dönüştürücüsü yok. Bu bir dezavantaj değil. Pro Mini’ye dışarıdan takacağımız USB-Serial dönüştürücüsü ile kolayca kodlarımızı atabiliriz. Bu sayede hem kolayca programlama yaparız hem de gereksiz bir çipe tekrar tekrar para vermek zorunda kalmayız. USB-Serial dönüştürücüler ayrı olarak satılıyor ve fiyatları 1-1.5 dolar civarında. Hatta Türkiye’de Gittigidiyor’dan bile 8-10 liraya kolayca bulabilirsiniz. Arduino Pro Mini’ler ise Nano’lardan bile ucuz. Bir sürü Arduino Pro Mini alıp sadece tek bir USB-Serial dönüştürücüsüyle tek tek programlayabilirsiniz. Böyle düşününce, bir daha Uno almaya bile gerek yok. Pro Mini bu sebeple benim tercihim. Ancak şuna dikkat etmekte fayda var, Pro Mini’ler ya 3.3V ya da 5V olarak satılıyor. Arduino Uno veya Nano gibi tek kartta iki farklı gerilim seviyesini barındırmıyor. Aynı şekilde çalıştığı gerilim aralığına göre mikrodenetleyicinin saat hızı da değişiyor. 3.3V 8 mHz’de, 5V ise 16 mHz’de çalışıyor (ya da ben böyle biliyorum). O nedenle bu değerleri kontrol edin ve ona göre satın alın.</p>


[caption id="attachment_124" align="aligncenter" width="660"]<a href="https://dikendine.files.wordpress.com/2015/01/img_0426.jpg"><img class="wp-image-124 size-large" src="https://dikendine.files.wordpress.com/2015/01/img_0426.jpg?w=660" alt="Arduino Modelleri" width="660" height="514" /></a> Üstte Uno, sol altta Nano ve sağ altta Pro Mini. En sağlarında ise 1 lira. Adafruit, Sparkfun para ile boyut belirtiyor, neden biz de öyle yapmayalım?[/caption]
<p style="text-align:justify;"></p>

<ul style="text-align:justify;">
	<li>Çipi çıkarın ve öylece kullanın</li>
</ul>
<p style="text-align:justify;">Arduino Uno’nun bu kadar büyük olmasının sebeplerinden biri de çıkarılabilir bir ATmega328P barındırması. Mikrodenetleyicinin bu şekil formatı, dip türü olarak adlandırılıyor ve SMD parçalara göre çok daha büyükler. Tahmin edeceğiniz üzere, programlamanızı yaptıktan sonra bu ATmega328P’yi çıkarabilir ve Uno kartından bağımsız olarak kullanabilirsiniz. Yapılması gereken tek şey, ATmega328P’nin uygun çalışma aralığında güç sağlamak ve yine ATmega’nın çalışması için gerekli kristali uygun pinlere bağlamak. Bu sayede programladığınız şekilde bu çipi bağımsız olarak kullanabilirsiniz. Ancak çipi çıkardıktan sonra internetten veya elektronikçiden alacağınız diğer ATmega328P’yi Arduino Uno’ya takıp programlayamazsınız. Bunun için çipin önce bootloader ile programlanması gerekiyor. Bense bunun nasıl yapılacağını bilmiyorum ve açıkçası pek de merak etmiyorum. Hatta şu anda sıkıldım baya. İşin komik yanlarından birisi, Türkiye’den edineceğiniz yalın ATmega328P’nin Çin’den edineceğiniz Pro Mini’den pahalı olması. WTF.</p>

<ul style="text-align:justify;">
	<li>AVR Programlama</li>
</ul>
<p style="text-align:justify;">Hep konuştuk Arduino’ya güç veren Atmega328P mikrodenetleyicisinden. Aslında bu ufak bir bisiklet ışığı için çok büyük ve güçlü bir çip. Hem boyut olarak fazla büyük, hem de fazla güç tüketiyor. Ancak Arduino geliştirme platformunda daha ufak ve daha az güç gerektiren çipler kullanılmıyor. Zira bu çiplerin hafızaları Arduino Bootloader’ı için yeterince büyük değil ve bazıları çok işlemci gücüne sahip değil. Bu sebeple projenin ilerleyen aşamalarında Arduino geliştirme platformunu tamamen bırakıp, hazır olan kodumuzu AVR çipleri direkt olarak kodlayabilecek şekilde geliştirebiliriz. Bu iş için uygun olanlar Attiny serisi 13/45/85 olabilir. Bu ufak AVR'lerin nasıl programlanabilecğeine dair bazı şeyleri de ileride paylaşmayı planlıyorum. Belki birilerinin işine yarar. Neyse, projeye güç verme aşamasına geçelim. Güç kaynaklarının oldukça karmaşık dünyasında kaybolmadan, Arduino’nun üzerine bulunan voltaj regülatörüyle güzel güzel projemizi tamamlayabiliriz. Kullanacağınız Arduino türüne göre farklılıklar oluşabilir ama genel olarak ana hatları aynı. Nano ve Uno’da VIN (Voltage In) pinine, Pro Mini’de ise RAW (bak bunun açılımı bilemedim) pinine güç kaynağınızı bağlayabilirsiniz. Ancak bunun da bir sınırı var. 5 volt bağlayıp 5 voltta çalışmasını bekleyemezsiniz. Çünkü voltaj regülatörü çok verimli çalışamıyor. Hatta linear voltaj regülatörü olduğu için baya verimsiz çalışıyor diyebiliriz bile. Neyse, işimizi kolaylaştıracağı için görmezden gelelim ve sınırlı değerleri verelim: Uno ve Nano için:</p>
<p style="text-align:justify;">Giriş Voltajı (önerilen): 7-12 V</p>
<p style="text-align:justify;">Giriş Voltajı (sınırlar): 6-20 V</p>
<p style="text-align:justify;">Pro Mini (5V versiyon için)</p>
<p style="text-align:justify;">Giriş Voltajı: 5-12 V</p>
<p style="text-align:justify;">Bu sonuç beni de şaşırttı. Demek Pro Mini’de kullanılan voltaj regülatörü 5V’a kadar inebiliyor. Büyük ihtimalle, diğerlerinden farklı olarak Low-Drop out bir linear voltaj regülatörü kullanılmış. Bu avantaj olabilir. Ancak şunu unutmayalım, bu orijinal ürünün çalışma aralığı. Çinden gelen klonlar, bu birazcık daha pahalı olabilen low dropout voltaj regülatörü kullanmıyor olabilir. Deneyip görmek lazım. Teorik olarak hem 4 tane AAA/AA pil veya 9 Voltluk dikdörtgen prizma pil ile Pro Mini’yi çalıştırabilirsiniz. Pro Mini’ye güç vermek kolay da, sonra LED’leri nasıl yakacağımızı bulmamız gerek. Projenin başından beri onları direkt olarak Arduino pinlerinden çalıştırdık. Bunu değiştirmeyeceğim ama dezavantajlarından biraz bahsetmek gerek. Atmega328P, her pine 40 mA akım, toplamda ise 200 mA akım sağlayabilir. Ancak bunu yapabiliyor olması, bize bu özgürlüğü tanımıyor. Zira bir mikrodenetleyici ile bir şeylere direkt güç vermek her zaman mantıklı değil. Her ne kadar 5V seviyesinde çalışan bir Arduino’un pinlerinden 5V sağlayabileceğinizi düşünseniz de, pinden çekilen akım arttıkça pindeki voltaj seviyesi düşmeye başlayacaktır. Bunun sebebi, mikrodenetleyicinin içinde bulunan direnci, yani empedansı. Bu direnç, akım arttıkça Ohm yasasına bağlı olarak daha fazla gerilimin kaybedilmesine sebep olacak. Güvenli sınırlarda 2 LED için pin başına 20 mA akım çeksek de bu durum ortaya çıkacak ve bizim hesaplarımızı karıştıracak. Eğer LED’leri gerçek bir voltaj regülatöründen çalıştırsaydık böyle bir sorun olmayacaktı (elbette kaynağın sınırlarına bağlı kalma şartıyla).</p>
<p style="text-align:justify;">Bu problemin yanısıra, linear voltaj regülatörleri inanılmaz verimsizler ve sağladıkları enerji kadarını ısı olarak çarçur edebiliyorlar. Bunun yanında, çalışmaları için gerekli gerilimi sağlamak için ya 4 tane AA/AAA pil ya da 9V'luk pil gerekiyor. Bunlar büyük ve ağır seçenekler. Bisiklet ışığı için uygun olmayabilirler. Üstüne üstlük 9V'luk pillerin kapasitesi oldukça düşük olduğundan (400 mAh civarı) inanılmaz hızlı bir şekilde pil bitecektir. Yani prototipin mobil olarak kullanılabilmesi büyük sorunlar içeriyor.</p>
<p style="text-align:justify;">Elbette buna da bir çözüm var ama bu kısa serinin amacını aşacak. Bi iki güç içerisinde daha ufak boyutlu bir çiple yaptığım versiyonu açıklamaya çalışacağım buradan. Hem voltaj regülatörünü, hem büyük pilleri, hem de daha güçlü bir LED'i barındıran basit bir çözüm olacak.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>118</wp:post_id>
  <wp:post_date>2015-01-08 11:17:36</wp:post_date>
  <wp:post_date_gmt>2015-01-08 11:17:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arduino-bisiklet-isigi-bolum-9-hangi-arduino-modeli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[124]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>9</wp:comment_id>
    <wp:comment_author><![CDATA[Arduino Bisiklet Işığı Bölüm 10: Pro Mini&#8217;yi Bağlamak | Diken Dine. Kendine. Kendi Kendine.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>https://dikendine.wordpress.com/2015/03/09/arduino-bisiklet-isigi-bolum-10-pro-miniyi-baglamak/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.159</wp:comment_author_IP>
    <wp:comment_date>2015-03-09 11:28:41</wp:comment_date>
    <wp:comment_date_gmt>2015-03-09 11:28:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Hangi Arduino Modeli ve Arduino Güç tasarrufu yazılarında değindiğim üzere Pro Mini kullanarak gereksiz masraf oluşturan, elektrik harcayan USB-to-Serial çipinden kurtulmamız en mantıklısı. Bu sayede hem C koduyla Arduino&#8217;yu uykuya yatırabiliriz ve ortalıkta boşa enerji harcayan bir Serial çipi olmadığından tasarruf konusunda bir fark yaratabiliriz. Pil konusunda ise, dikkatli olmak kaydıyla linear regülatörü pas geçerecek uygun voltajı Vcc pininden direkt Atmega328&#8217;e verebilirsiniz. Ancak kafaların rahat olması için direkt olarak 9V&#8217;luk pili regülatöre bağlamak da iyi seçenek. [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1426547127</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1426547127.98853302001953125;s:7:"message";s:45:"raicem changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"raicem";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1425904428.7312591075897216796875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1425900521.7322289943695068359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Arduino Modelleri</title>
  <link>https://dikendine.wordpress.com/2015/01/08/arduino-bisiklet-isigi-bolum-9-hangi-arduino-modeli/img_0426/</link>
  <pubDate>Thu, 08 Jan 2015 11:15:19 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2015/01/img_0426.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>124</wp:post_id>
  <wp:post_date>2015-01-08 11:15:19</wp:post_date>
  <wp:post_date_gmt>2015-01-08 11:15:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_0426</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>118</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2015/01/img_0426.jpg</wp:attachment_url>
</item>
<item>
  <title>Sensorized Bike Light with Attiny13</title>
  <link>https://dikendine.wordpress.com/2015/01/26/sensorized-bike-light-with-attiny13/</link>
  <pubDate>Mon, 26 Jan 2015 18:40:15 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=127</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">This is a small project I've been working on for quite a while. I used it to learn more about the AVR's. It was helpful more than I thought. Made me learn calculation by bit-shifting, timers, pwm controlling devices such as LED's, timer interrupts (although I removed them at the final version), sleep modes for very little power consumption and other stuff.</p>
<p style="text-align:justify;"><a href="https://dikendine.files.wordpress.com/2015/01/img_04821.jpg"><img class="aligncenter size-medium wp-image-149" src="https://dikendine.files.wordpress.com/2015/01/img_04821.jpg?w=300" alt="IMG_0482" width="300" height="238" /></a></p>
<p style="text-align:justify;">The idea came from a necessity of mine while using my bike around. Street and road illumination is not always constant on my general routes. Even though I'm not a believer of high-powered-12-hour-running-time-with-Li-ion-batteries bike lights, there were times that I needed a bright light.</p>
<p style="text-align:justify;">So the implementation makes it a sensorized bike light that responds to the environment via a simple photocell and an ATtiny13 mcu. It blinks when there is enough light that you can see where you are going and others around you can see you. So blinking is only for visibility so bike light does not draw full current (controlled by pwm of course). If went into a dark patch of road, blinking stops and bike light goes into full blast mode with full power.</p>
<p style="text-align:justify;">It uses a 3w led and it is not the best choice since I power it with two AA batteries. When batteries are full, I observed that it drains around 70-80 mA. It is not even close to the limits of the LED (350 ma), but it is restrained by the voltage provided by the battery. However, I'm cool with it since its more than enough for me. Putting in some normal 5 mm LED's or Superflux LED's provided no more than 10 mA current draw with same batteries.  I'll give it a shot with 1w and 0.5 w LED's.</p>
<p style="text-align:justify;">There is also a simple calibration function. You can press down a button for  ~5 seconds and bike light takes measurements for 1 second and uses that to set the threshold level between blinking and not blinking.</p>
<p style="text-align:justify;">Also I needed Attiny13 to not respond every little sensor measurement so I tried to add a little moving average. This was the most difficult to do in this projects since using arrays is not possible to store last 10 or 100 values etc. There is simply not enough RAM in this attiny13. Only viable way of doing it was with exponential moving averages but there are problems with floating points. You simply cannot do it in attiny13 with that amount of information coming from the sensor. However, You can turn those floating points to integers and do a division, but then there is another problem with the division too. You can do it, but it is not really fast. So the bike light becomes kind of unresponsive while blinking. However #2, you can do the division by bit-shifting and it works! So that was that.</p>
<p style="text-align:justify;">I needed a debouncer of course, and it detects it in every CPU cycle whether the button is pressed or not. That is kind of an overkill to detect buttons. Proper way of doing it would be, using the timer interrupts to detect the switch 100 timer per second (100 Hz). That was one part of the project that I failed. Even though my prototype on Arduino worked with timer interrupts I could'nt get it to work in Attiny13. It interfered with INT0 (which is used to wake up the device) or something else. I don't know.</p>
<p style="text-align:justify;">There are four modes in the code. Zeroth of them shuts down CPU and ADC to save power. First of them is automatic mode. Second of them is On for all the time with max current. Third of them is blink mode for all the time with 20mA of current.</p>
<p style="text-align:justify;">So that is it basically. I have the code below. You can check it out. Also if you want to see it in action, watch YouTube video:
[youtube https://www.youtube.com/watch?v=c3a5C1AA4aU&amp;w=560&amp;h=315]</p>


[code language="cpp"]

#include &lt;avr/io.h&gt;
#include &lt;util/delay.h&gt;
#include &lt;avr/sleep.h&gt;
#include &lt;avr/interrupt.h&gt;

#define led1 0
#define led2 2
#define tus 1

uint8_t isikModu = 0;

ISR(INT0_vect) //This is needed even if it does nothing in brackets. 
{} 

static void initTimers(void)
{
	TCCR0B |= (1&lt;&lt;CS00); //Saat prescale 1024  9.600.000/1
	TCCR0A |= (1 &lt;&lt; COM0A1)| (1 &lt;&lt; WGM01) | (1 &lt;&lt; WGM00);
}

static void initADC2(void)
{
	ADMUX |=  (1&lt;&lt;MUX1) | (1&lt;&lt;MUX0); // ADC with referance of Vcc
	ADCSRA |= (1&lt;&lt;ADPS2) | (1&lt;&lt;ADPS1) | (1&lt;&lt;ADEN); //Prescaler = 64. 9.600.000 / 64 = 150000 
}

static int adcOkuma(void) // adcRead function 
{
	ADCSRA |= (1&lt;&lt;ADSC);
	while (ADCSRA &amp; (1 &lt;&lt; ADSC));	
	return ADC;
}

static void parlaklikAyarlama(uint8_t x) // Setting the OCROA to control brightness
{
	OCR0A = x;
}

static void uykuModu(void) // Sleep mode 
{
	cli();
	GIMSK |= (1&lt;&lt;INT0);
	ADCSRA &amp;= ~(1&lt;&lt;ADEN);
	set_sleep_mode(SLEEP_MODE_PWR_DOWN);
	_delay_ms(10);
	sei();
	sleep_mode();
	GIMSK &amp;= ~(1&lt;&lt;INT0);
	ADCSRA |= (1&lt;&lt;ADEN);
	loop_until_bit_is_set(PINB, tus); // This makes it wait until the button is released
	isikModu = 1;
	_delay_ms(10);
}

int main(void)
{
	uint8_t i;
	uint16_t esikDeger = 500;
	uint32_t sayac = 0, sayac2 = 0, sayac3 = 0, ortalama = 0;
	PORTB |= (1&lt;&lt;tus);
	initTimers();
	initADC2();
	CLKPR = 0b10000000;
	CLKPR = 0b00000010;
	
    while(1)
    {
		if (bit_is_clear(PINB, tus))
		{
			sayac++;
			if (sayac == 50000 &amp;&amp; isikModu == 1)
			{
				cli();
				esikDeger = 0;
				isikModu = 5;
				for (i = 8; i != 0; --i)
				{
					esikDeger = esikDeger + adcOkuma();
					DDRB ^= (1&lt;&lt;led1); 
					_delay_ms(100);
				}
				esikDeger = (esikDeger &gt;&gt; 3);
				isikModu = 1;
				sei();	
			}
		}
		else
		{
			if (sayac &gt; 1600 &amp;&amp; sayac &lt; 50000)
			{
				isikModu++;
				switch(isikModu) { // This switch statement assignes brightness level
					case 2:
						parlaklikAyarlama(255);
						break;
					case 3:
						parlaklikAyarlama(30);
						break;
					case 4:
						isikModu = 0;
						break;
				}
			}
			sayac = 0;
		}
		
		if (isikModu == 0)
		{
			DDRB &amp;= ~(1&lt;&lt;led1);
			uykuModu();
		}
		
		else if (isikModu == 3)
		{
    		if (TCNT0 &gt; 40)
    		{
    			sayac2++;
    			if (sayac2 &gt; 5000)
    			{
    				sayac2 = 0;
    				DDRB ^= (1&lt;&lt;led1);
    			} 			
    		}
		}
		else if (isikModu == 2)
		{
			DDRB |= (1&lt;&lt;led1);
		}
		
		else if (isikModu == 1)
		{			
			sayac3++;
			if (sayac3 == 30000)
			{
				for (i = 0; i &lt;64; i++)
				{
					ortalama = ortalama + adcOkuma();
				}
				ortalama = ortalama &gt;&gt; 6;
				sayac3 = 0;
			}

			if (ortalama &gt; esikDeger)
			{	
				parlaklikAyarlama(30);
				sayac2++;
				if (sayac2 &gt; 4000)
				{
					DDRB ^= (1&lt;&lt;led1);
					sayac2 = 0;
				}
			}
			else 
			{	
				parlaklikAyarlama(255);
				DDRB |= (1&lt;&lt;led1);	
			}
		}
	}
}

[/code]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>127</wp:post_id>
  <wp:post_date>2015-01-26 18:40:15</wp:post_date>
  <wp:post_date_gmt>2015-01-26 18:40:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sensorized-bike-light-with-attiny13</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[149]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>AVR ile Sensörlü Bisiklet Işığı</title>
  <link>https://dikendine.wordpress.com/2016/03/18/avr-ile-sensorlu-bisiklet-isigi/</link>
  <pubDate>Fri, 18 Mar 2016 22:21:39 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=130</guid>
  <description/>
  <content:encoded><![CDATA[Bu yazıyı hazırlamışım ancak göndermemişim. Neden bilmiyorum. Kodu GitHub'a koyup fişekliyorum. Koda baktım da, bunu ben ne zaman yazmışım oldum. O yorumları boşuna yazın demiyorlar. Neyse, zaten buradaki Arduino ve AVR yazılarının üzerinden geçip düzenleme planım var. O esnada kodları hatırlarım heralde :)

Daha önceki yazılarda anlattığım Arduino Bisiklet Işığının şimdi gerçekten kullanılabilecek bir versiyonunu yapmaya çalıştım. Arduino yerine direkt olarak AVR kullanarak hem boyutu ufalttım, hem de masraftan kısmış oldum. Zira Karaköy'de AVR çipler kolayca bulunabiliyor. Bu örnekte kullandığım ATtiny13 modeli Türkiye'de kolayca bulabileceğiniz iki ATtiny modelinden biri. Fiyatı 2 lira civarında. Bunu programlamak için ise eBay'den aldığım USBasp programlayıcısını kullandım. Aslında programlamak için Arduino da kullanılabilir.

Işık yine yeterince aydınlık olan yerlerde çakıyor, çok karanlık olan yerlerde sürekli açık moda geçiyor. Ancak burada normal LED yerine 3w'lık power LED kullandım. Pil ömrünü baltalamaması için yanıp sönerken LED'in parlaklığını 20 miliamper olacak şekilde PWM yardımıyla sınırladım. Karanlık bölümde sürekli açık moda geçince ise PWM'i keserek (daha doğrusu 100% duty cycle yaptırarak) tam akımın geçmesine izin verdim. 2 tane kalem pil ile kullanıldığında 70-80 mA civarı bir şey çekiyor. 3W'lık LED için baya az bir değer ama pili bitirmemesi ve ısı sorunları yaratmaması bakımından iyi gibi. 1W ile denemek lazım. Bu LED işini ben de yeni öğreniyorum açıkçası.

PWM ile parlaklığı kontrol ederken aynı zamanda pini açıp kapatmak oldukça garip olmak zorunda kaldı. Normalde PORT registeri ile kontrol edebildiğimiz açıp kapama işlemleri PWM aktif iken işe yaramıyor. Komple DDR registerinden kapatıp açmak gerekiyor. Doğru yöntemi bu mu bilmiyorum ama çalışıyor.

Tuşa 5-10 saniye basılı tutulduğunda kalibrasyon moduna geçiyor ve ölçüm alıyor. Bu ölçüm daha sonra karanlığın belirlenmesi sırasında eşik değer olarak kullanılıyor. Sensörün her gelen değere cevap vermemesi bakımından, sensörün ölçüm sıklığını azalttım. Ayrıca rolling average yerine paketler halinde verinin alınıp değerlendirilmesinin daha faydalı ve etkili olacağını düşündüm. Sensör her saniyede bir 64 ölçüm yapıp bunların ortalamasını buluyor ve ona göre değerlendirme yapılıyor. Bir sonraki döngü geldiğinde tekrardan yeni bir 64 ölçüm alınıyor. Elbette 64'ün ortalamasını bölümle değil, bit kaydırarak alıyorum.

AVR kullanmanın ve voltaj regülatörü kullanmamanın avantajlarından biri olarak, uyku modlarında tüketilen gücü inanılmaz düşürebildim. Burada da ışıklar kapandığında Attiny13 uyku moduna geçiyor ve dandik multimetre ile yaptığım ölçümler doğruysa (heralde değildir) 1 mikroamper akım çekiyor. Bu kadar az güç tüketimi için ayrıca ADC'yi manuel olarak kapatmanız sonra açmanız gerekiyor. Tekrar başlatmak için tuşa bir kere basmak yeterli.

Yine Arduino bisiklet ışığında olduğu gibi, 3 tane mod var. İlki otomatik mod. İkincisi %100 akım ile sürekli açık mod, üçüncüsü kısık olarak ise yanıp sönme modu.

<a href="https://gist.github.com/raicem/6ace672297a581bb182b" target="_blank">İlgili kodu şurada bulabilirsiniz</a>. Gömme sistemlere dair kodlama tecrübem yok, bu ilklerden oldu.

Burda da örnek video var:
[youtube https://www.youtube.com/watch?v=c3a5C1AA4aU]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>130</wp:post_id>
  <wp:post_date>2016-03-18 22:21:39</wp:post_date>
  <wp:post_date_gmt>2016-03-18 22:21:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>avr-ile-sensorlu-bisiklet-isigi</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20895877799]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Arduino ve AVR'de Güç Tasarrufu / Uyku Modları</title>
  <link>https://dikendine.wordpress.com/2015/01/23/arduino-guc-tuketimi-ve-tasarrufu/</link>
  <pubDate>Fri, 23 Jan 2015 21:21:12 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=135</guid>
  <description/>
  <content:encoded><![CDATA[Bisiklet ışığı ile ilgili yazdığım en post, gerçekten çok üzücü bitti. Prototipleme, geliştirme kartı olarak Arduino gerçekten ufak ve mobil bir şey olmaya çok elverişli değil. Yine de elinizden geldiğince güç tüketimini azaltmanın çok hoş yolları mevcut. Bu yazıda bunlardan bahsetmek istiyorum biraz.

Önceki yazıda bahsettiğim gibi, ne yaparsanız yapın Arduino üzerindeki gerilim regülatörü belli bir miktar akım çekmeye devam edecek. Üstüne üstlük, Arduino üzerinde sadece bir tane gerilim düzenleyici yok. USB-Serial dönüştürücü de kendi regülatörüne sahip olabilir. Elimdeki Nano'dan örnek vereyim. Cihaz aktif durumda iken yaklaşık 60 mA akım çekiyor. 60! Bunun 40 mA'sı sadece FTDI USB-Serial çipi yüzünden kaynaklanıyor. O akıma 8 tane LED yakabilirsiniz. Nasıl bir elektrik israfı?!?!?

Bu hasarı azaltmak için Nano veya Uno gibi kendi USB-Serial çipini barındıran bir kart yerine Pro Mini tercih edilebileceğini söylemiştim. Yine de geriye kalan 20 mA yapacağımız işler için çok fazla. Bunu düşürmenin pratik bir yolu var.

Eğer Atmega 328p'nin 400 küsür sayfalalık dökümantasyonunu açarsanız güç yönetimine adanmış özel bir bölüm olduğunu göreceksiniz. Burada enerjiden tasarruf etmek için izleyebileceğiniz yöntemler anlatılıyor. Artık bundan sonra Arduino IDE'nin bize sunduğu hazır fonksiyonlardan biraz uzaklaşacağız. Bazı şeyleri kendi elimizle yapmamız gerekecek. Temel olarak 3 başlığa ayıralım:

<strong>1) İşlemcinin Saat Hızıyla Oynamak</strong>

Arduino'lar genelde 16 veya 12 mHz'lık osilatörlerle çalışıyorlar. Eğer sizin uygulamanız böyle bir hız gerektirmiyorsa, bu hızın fraksiyonları ile çalışarak güçten tasarruf edebilirsiniz. Örneğin 16'yı ikiye bölerek 8 mHz'de daha az elektrikle çalışan bir çip elde edebilirsiniz. Bunun için CLKPR (CLocK PRescale) registerlerıyla oynamanız yeterli. Bu registerin değerlerini değiştirerek bu mHz'ler arasında geçiş yapabilirsiniz. CLKPR registerina bit yazmak ise biraz garip. Bazı kuralları var. Örneğin ilk adımda 8. bite 1 yazıp, odan sonra gelecek 4 döngü içerisinde aynı bite 0 yazarak ayarlama yapabiliyorsunuz. Yani şöyle:

[code language="cpp"]
CLKPR = 0b10000000; //Ayarlamaya başlamak için 8. bite 1 yazılır
CLKPR = 0b00000001; //Ölçek oranını girmek için 8. bit 0 yapılır ve geri kalan bitlere 
//istenen değer girilebilir. 
[/code]

0b00000001 yazarak işlemcinin hızını ikiye böldük. Ancak 8, 16, 32 , 64, 256 gibi faktörler de mevcut. İyice çılgın atabilirsiniz yani. Bütün bu farklı değerler dökümantasyonun Clock Sources kısmında var. Hızı yarı yarıya düşürerek %30 civarı bir tasarruf sağlayabiliyorsunuz. En azından ben öyle ölçtüm.

<strong>2) Uyku Modları</strong>

Aynı bilgisayarlarda olduğu gibi Arduino'ya güç veren Atmega 328p çipini farklı modlarda beklemeye alabilirsiniz. Bu bütün AVR çipleri için geçerli. Bunu gerçekleştirmek için hep çipe göre farklı seçenekleriniz var. En yaygın olanı IDLE ve POWER DOWN. Tasarruf miktarı arttıkça çip bir o kadar derin uykuya geçiyor ve bir o kadar fazla komponentini kapatıyor. Bu nedenle POWER DOWN modundan çıkabilmek için ya bir zamanlayıcı kurmalısınız ya da bir tuşun LOW konumuyla interrupt oluşturmalısınız.

Ancak mikrodenetleyiciyi uyutabilmek için assembly kodu girilmesi şart. Bununla uğraşmamak için önceden hazırlanmış kodlar var neyse ki. sleep.h kütüphanesiyle çok işe yarayan farklı fonksiyonlara erişebilirsiniz. Basit bir uygulamaya bakalım.

[code language="cpp"]
#include &amp;lt;avr/sleep.h&amp;gt; // Bunu dahil etmeyi unutmayın

int led = 2;

ISR(INT0_vect) {
  // Boş olmasına rağmen bu interrupt fonksiyonu kaldırılmamaı
}

void setup() {
  pinMode(led, OUTPUT);
}


void uykuModu(void){
  EIMSK |= (1&amp;lt;&amp;lt;INT0); // Bir Interrupt ekle
  set_sleep_mode(SLEEP_MODE_PWR_DOWN); // Hangi mod olduğunu seç
  sleep_mode(); // Uyku moduna gir. 
  //Uyku modundan tuşa basılarak çıkıldıktan sonra kod
  //Bu satırdan çalışmaya devam edecek. 
  EIMSK &amp;amp;= ~(1&amp;lt;&amp;lt;INT0); //Interruptın ard arda bi sürü kez
  //Tetiklenmemesi için Interruptı kaldır. 
}


void loop() {
  
  for (int i = 0; i&amp;lt;3; i++) {
    digitalWrite(led, !digitalWrite);
    delay(1000);
  }
  uykuModu();
  
}

[/code]

<strong>3) Komponentlerin elle kapatılması</strong>

Bazı çiplerde bazı komponentler POWER DOWN moduna rağmen kapanmıyor olabilir. Örneğin bütün AVR'lerde Brown Out Dedektörü sürekli olarak aktiftir ve ufak olsa da akım çeker. Bunun yanında Attiny 13 mikrodenetleyicisi POWER DOWN moduna geçilse bile Analog-Dijital dönüştürücüsünü kapatmaz. Daha fazla tasarruf için bu gibi bölümlerin elle kapatılması gerekebilir. Uyku modundan çıkılırken tekrar devreye almak kaydıyla elbette.

Brown Out Denetleyicisi en basit anlamıyla çipe gelen gerilimi ölçer ve bu gerilim daha önceden belirlenen sınırların altındaysa, çipin ve pilin fonksiyonlarına zarar vermemek adına (mesela bir pilden çok fazla akım çekip gerilimini fazla düşürmek gibi) çipi kapatır. Eğer bu gibi bir durum sizi endişelendirmiyorsa bunu da kapatabilirsiniz. Ama kapatmak için sigorta bitlerini (Fuse bits) değiştirmeniz gerekebilir. Açıkçası ben yaptığım deneylerde bunun inanılmaz bir tasarruf sağladığını göremedim. Ya da ben beceremedim. Neyse, Attiny13 için kullandığım basit uyku fonsiyonu ise şu şekilde:

[code language="cpp"]
void uykuModu(void)
{
	cli();
	GIMSK |= (1&amp;lt;&amp;lt;INT0); //interruptı ayarlar
	ADCSRA &amp;amp;= ~(1&amp;lt;&amp;lt;ADEN); //ADC kapat
	set_sleep_mode(SLEEP_MODE_PWR_DOWN); //mod seçme (fonksiyon dışında kalsa daha iyi hatta bu)
	sei();
	sleep_mode(); //Uyku moduna geç
	GIMSK &amp;amp;= ~(1&amp;lt;&amp;lt;INT0); //Uykudan çıkınca interruptı kapat
	ADCSRA |= (1&amp;lt;&amp;lt;ADEN); //ADC'yi aç
}
[/code]

Farklı uyku modlarını set_sleep_mode fonksiyonuna farkı değerler geçerek seçebilrisniz. Örneğin burada SLEEP_MODE_PWR_DOWN yerine IDLE yazarak yapabilirdik bunu. IDLE daha fazla akım çekecektir ancak tekrar uyandırmak amacıyla daha fazla seçeneğiniz olabilir. Örneğin UART'tan veya ADC'den gelecek verilerle mikrodenetleyiciyi uyandırabilirsiniz. PWR_DOWN'da bu mümkün değil.

Uyku modları inanılmaz efektif. 15-20 mA çeken mikrodenetleyiciyi anında 2-3 mA seviyelerine düşürecek kadar başarılı. Bu değer Attiny serisinde mikroAmper bile görüyor çok rahatça. Zira benim danik multimetrem 2 mikroA gösteriyor uyku modunda.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>135</wp:post_id>
  <wp:post_date>2015-01-23 21:21:12</wp:post_date>
  <wp:post_date_gmt>2015-01-23 21:21:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arduino-guc-tuketimi-ve-tasarrufu</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>10</wp:comment_id>
    <wp:comment_author><![CDATA[Arduino Bisiklet Işığı Bölüm 10: Pro Mini&#8217;yi Bağlamak | Diken Dine. Kendine. Kendi Kendine.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>https://dikendine.wordpress.com/2015/03/09/arduino-bisiklet-isigi-bolum-10-pro-miniyi-baglamak/</wp:comment_author_url>
    <wp:comment_author_IP>66.135.48.159</wp:comment_author_IP>
    <wp:comment_date>2015-03-09 11:28:44</wp:comment_date>
    <wp:comment_date_gmt>2015-03-09 11:28:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Arduino Modeli ve Arduino Güç tasarrufu yazılarında değindiğim üzere Pro Mini kullanarak gereksiz masraf oluşturan, elektrik [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1425946594.047852039337158203125;s:7:"message";s:45:"raicem changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:6:"raicem";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1425946593</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1425904428.7984149456024169921875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1425900524.5600268840789794921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>cropped-img_0426.jpg</title>
  <link>https://dikendine.wordpress.com/cropped-img_0426-jpg/</link>
  <pubDate>Sat, 24 Jan 2015 20:05:23 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2015/01/cropped-img_0426.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://dikendine.files.wordpress.com/2015/01/cropped-img_0426.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>143</wp:post_id>
  <wp:post_date>2015-01-24 20:05:23</wp:post_date>
  <wp:post_date_gmt>2015-01-24 20:05:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-img_0426-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2015/01/cropped-img_0426.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_custom_header_last_used_pub/twentytwelve</wp:meta_key>
    <wp:meta_value><![CDATA[1422129924]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
    <wp:meta_value><![CDATA[pub/twentytwelve]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>IMG_0482</title>
  <link>https://dikendine.wordpress.com/2015/01/26/sensorized-bike-light-with-attiny13/img_0482/</link>
  <pubDate>Mon, 26 Jan 2015 18:14:59 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2015/01/img_04821.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>149</wp:post_id>
  <wp:post_date>2015-01-26 18:14:59</wp:post_date>
  <wp:post_date_gmt>2015-01-26 18:14:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>img_0482</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>127</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2015/01/img_04821.jpg</wp:attachment_url>
</item>
<item>
  <title>Arduino Bisiklet Işığı Bölüm 10: Pro Mini'yi Bağlamak</title>
  <link>https://dikendine.wordpress.com/2015/03/09/arduino-bisiklet-isigi-bolum-10-pro-miniyi-baglamak/</link>
  <pubDate>Mon, 09 Mar 2015 11:28:29 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=158</guid>
  <description/>
  <content:encoded><![CDATA[Gereğinden fazla uzadı bu seri ancak güzel bir dizi oldu gibi geliyor bana. En azından oldukça fazla bilgiyi kontrol edip öğrenmek zorunda kaldım. Geçen aylardaki postlardan sonra C kodlamaya dair bir kaç kitaba göz gezdirdim. Şu anda geri dönüp o kodlara bakmak acı veriyor resmen. Neyse, geriye bakarak çok vakit kaybetmeden devam etmekte fayda var.

<a href="https://dikendine.wordpress.com/2015/01/08/arduino-bisiklet-isigi-bolum-9-hangi-arduino-modeli/">Hangi Arduino Modeli</a> ve <a href="https://dikendine.wordpress.com/2015/01/23/arduino-guc-tuketimi-ve-tasarrufu/">Arduino Güç tasarrufu</a> yazılarında değindiğim üzere Pro Mini kullanarak gereksiz masraf oluşturan, elektrik harcayan USB-to-Serial çipinden kurtulmamız en mantıklısı. Bu sayede hem C koduyla Arduino'yu uykuya yatırabiliriz ve ortalıkta boşa enerji harcayan bir Serial çipi olmadığından tasarruf konusunda bir fark yaratabiliriz. Pil konusunda ise, dikkatli olmak kaydıyla linear regülatörü pas geçerecek uygun voltajı Vcc pininden direkt Atmega328'e verebilirsiniz. Ancak kafaların rahat olması için direkt olarak 9V'luk pili regülatöre bağlamak da iyi seçenek.

Peki bu Pro Mini'yi neyle programlayalım. Benim elimde CP2102 ve CH340G adında farklı iki USB-to-Serial çip var. Bunların ikisi aynı fonksiyonu görüyor. Pro Mini ile bağlantıları da tamamen aynı.Tek farkı CP2102 için özellikle bir sürücü indirip yüklemek gerekebiliyor. CH340G sürücüleri ise Windows tarafından otomatik olarak yükleniyor. Almayı düşünüyorsanız CH340G tercih edin.

Bağlantı için bu videoyu izleyebilirsiniz:

[youtube https://www.youtube.com/watch?v=Vawhrr4COjI]

Bu videoda CH340G yok ancak CP2102 var. Ancak dediğim gibi hepsi neredeyse aynı. Ayrıca referans bakımından bağlantıları buraya da not ediyorum.

USB-Serial Çip           Pro Mini

GND                 -&gt;       GND

VCC                 -&gt;       VCC

TX                    -&gt;       RX

RX                    -&gt;       TX

DTR                 -&gt;       DTR

İşte bu kadar. Bu pinleri birbirine bağlamanız yeterli. Bundan sonra sadece Arduino IDE ile doğru Arduino kartını ve serial portu seçmeniz yeterli. Bundan böyle yeni Arduino olmak isterseniz de daha ucuz ve ufak olan Pro Mini tercih edebilirsiniz. Böylece gereksiz yere bir sürü USB-Serial çipli Arduino'ya para dökmez, gereksiz yere gezegen kaynaklarını çip üretimine harcamaz ve küresel ısınmayla mücadele etmiş olursunuz. Neden olmasın.

Artık bu bisiklet geyiği burada bitsin. Ben biraz sıkıldım bundan çünkü. Başka şeylere bakalım.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>158</wp:post_id>
  <wp:post_date>2015-03-09 11:28:29</wp:post_date>
  <wp:post_date_gmt>2015-03-09 11:28:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arduino-bisiklet-isigi-bolum-10-pro-miniyi-baglamak</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>2015 Temmuz (Naçizane) SSD Araştırması</title>
  <link>https://dikendine.wordpress.com/2015/07/06/2015-temmuz-nacizane-ssd-arastirmasi/</link>
  <pubDate>Mon, 06 Jul 2015 19:34:34 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=162</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">AVR ve Arduino için kullandığım Asus X201e model bilgisayarımın işlemcisi Celeron 847. 1.1 Ghz. 2 GB Ram. Intel 2000 HD Graphics ve geberik bir sabit disk. Aşağıdaki sabit diskin içler acısı performansını görebilirsiniz. <a href="https://dikendine.files.wordpress.com/2015/07/hddhiz.png"><img class="aligncenter size-medium wp-image-163" src="https://dikendine.files.wordpress.com/2015/07/hddhiz.png?w=300" alt="HDDHiz" width="300" height="277" /></a>Dolayısı ile bu bilgisayarda Arduino IDE açmanın nasıl bir süreç olduğunu tahmin edebilirsiniz. Bir kere Atmel Studio 6 bile kurup kullanmayı denedim. Sinirlerinize hakim olmanın sürdürülebilir bir yolu değil kesinlikle.</p>
<p style="text-align:justify;">Diğer bilgisayarım Macintosh. Maalesef ki AVR ve Arduino işleri için ideal bir ortam değil, her ne kadar ortalıkta bunun için bazı araçlar olsa da. Windows makine ile inanılmaz rahat etmekteyim ve bu durum yakın zamanda değişecek gibi gözükmüyor. Uygulamaların açıldıktan sonra işlemci bakımından ağır işler yapmadığını göz önüne alırsak, bir SSD ile Windows bilgisayar ile çektiğim işkencelerin biraz azalabileceğini düşündüm. Bu sebeple 120-250 GB civarında bir şeyler alıp takmaya karar verdim. Vermez olaydım. Acayip meşakkatli ve zor bir süreç SSD süreci. Baktım başa çıkılamayacak kadar parametre var, kafayı toparlamak için her zaman en iyi çözüm Excel'dir.</p>
<p style="text-align:justify;">Bu sebeple, 6 Temmuz itibarıyla internette bulduğum SSD'lerin fiyatlarını derledim ve böylece gigabyte başına ödenecek Türk Lirasından yola çıkarak bunları birbiriyle karşılaştırmaya karar verdim. Ancak Türk Lirası oynak, her gün değişiyor. Bu sebeple bir de TRY'yi USD'ye çevirip USD halini de yazdım. O şekilde de USD / GB hesapladım. Dikkat, USD ürünlerin Amerika veya Avrupa'daki fiyatları değil. Türkiye'deki etiket fiyatlarının günlük kur üzerinden çevrilmiş hali. Mantıklı mı oldu bilmiyorum ama yaptım işte.</p>
<p style="text-align:justify;">Türkiye'de bilinen ve güvenilir sitelerden topladığım fiyatların en ucuzlarına link vermeye çalıştım ancak kampanyalar sebebiyle bu linkler geçerliliğini ve en ucuz olma özelliklerini ne kadar korur bilemiyorum. Akakce.com'da takılmakta fayda var karar verme sürecinde.</p>
<p style="text-align:justify;">Bir de performanslarını eklemek istedim ancak öyle net bir şey yok bu konuda. userbenchmark sitesinin belirlediği yüzdelik dilimler var bu konuyla alakalı. En objektif o gözüktüğünden dolayı o değerleri geçirdim performans kısmına. Performansla alakalı linkleri de her SSD için ekledim.</p>
<p style="text-align:justify;">Daha derine girdikçe acayip şeyler çıkıyor SSD dünyasında karşınıza. TLC, MLC, NAND, 3D NAND, kontrolcüler falan filan. Bitmiyor yani. Kafaları biraz rahatlatmak amacıyla, böyle bir Excel tablosunu kullanabilirsiniz.</p>
<p style="text-align:justify;">Şimdi ben böyle donanım işlerinden anlamam pek ancak görünen o ki, bu işin go-to cihazı samsung evo 850. Ya da paranız varsa Pro. Türkiye'de pazar biraz enteresan. Crucial gibi yurtdışında övüle övüle bitirilemeyen Fiyat/Performans ürününü bulamadım. Bulduysam da inanılmaz pahalı olduğu için koymadım. Bunun yerine Sandisk ve Kingston gibi bilinirliği yüksek olan markaların Türkiye pazarını baya doldurduğunu gördum. Onlardan ucuz farklı, alternatif olabilecek markalar bulmak zordu. En düşük TRY/GB Sandisk'in üzerine pek veri bulamadığım bir modeline aitti mesela. Düşük fiyat ve düşük performans kombinasyonlarının arasında Sandik Ultra II, markanın kötü repütasyonuna rağmen yeni bir ürün olarak öne çıkıyor. Ayrıca OCZ ARC 100 240 GB modeli de düzgün gibi. Bunlardan daha düşük fiyatlara veya USD/GB oranına sahip ürünlere pek bulaşmamakta fayda var anladığım kadarı ile.</p>
<p style="text-align:justify;">USD/GB veya TRY/GB oranlarına bakınca Sandisk Ultra II baya avantajlı geliyor göze. Ama ulan en nihayetinde 50 lira fark ediyor. Senelerce kullanabileceğin, söküp masaüstüne geçirebileceğim bir cihaz yani. Hadi çıkan eski HDD'yi External HDD yaptın, 150 liralık bi şey almaktan kurtuldun desen... Sanırım Samsung alacağım :)</p>
<p style="text-align:justify;">Google Drive'da yorum yapılabilir hale getirdim. Yanlışlık, kusur veya değişiklik varsa bildirebilirsiniz.</p>
<p style="text-align:justify;">Excel Linki: https://docs.google.com/spreadsheets/d/1AHyLVCeuCy5rAh1-QMksFz0yMtgtStnEvs41OgWNuhM/edit?usp=sharing</p>
<p style="text-align:justify;"></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>162</wp:post_id>
  <wp:post_date>2015-07-06 19:34:34</wp:post_date>
  <wp:post_date_gmt>2015-07-06 19:34:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2015-temmuz-nacizane-ssd-arastirmasi</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ssd"><![CDATA[SSD]]></category>
  <category domain="category" nicename="teknoloji"><![CDATA[Teknoloji]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12442772625]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>13</wp:comment_id>
    <wp:comment_author><![CDATA[Yeni SSDm Sandisk Ultra II 240 GB | Diken Dine. Kendine. Kendi Kendine.]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>https://dikendine.wordpress.com/2015/10/27/yeni-ssdm-sandisk-ultra-ii-240-gb/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.100.201</wp:comment_author_IP>
    <wp:comment_date>2015-10-27 15:16:23</wp:comment_date>
    <wp:comment_date_gmt>2015-10-27 15:16:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] gayet olumlu. Önceki postta göreceğiniz (resmi aşağıya da koydum) üzere 4K rastgele okuma ve yazma hızlarında [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1445959075</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1445959075.696876049041748046875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"raicem";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1445958984.356719970703125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>HDDHiz</title>
  <link>https://dikendine.wordpress.com/2015/07/06/2015-temmuz-nacizane-ssd-arastirmasi/hddhiz/</link>
  <pubDate>Mon, 06 Jul 2015 19:24:46 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2015/07/hddhiz.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>163</wp:post_id>
  <wp:post_date>2015-07-06 19:24:46</wp:post_date>
  <wp:post_date_gmt>2015-07-06 19:24:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hddhiz</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>162</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2015/07/hddhiz.png</wp:attachment_url>
</item>
<item>
  <title>İstanbul Arkeoloji Müzesine Gitmeyin Değil ama Çok Gitmeyin</title>
  <link>https://dikendine.wordpress.com/2015/10/04/istanbul-arkeoloji-muzesine-gitmeyin-degil-ama-cok-gitmeyin/</link>
  <pubDate>Sun, 04 Oct 2015 12:29:42 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=173</guid>
  <description/>
  <content:encoded><![CDATA[Uzun zamandır hakkında okuduğum ve gitmeden önce kendimi eğitmeye çalıştığım Arkeoloji Müzesi'ne gitmeyi sonunda başardım. Ancak büyük bir hayal kırıklığı. Kendi internet sitelerinde göremediğim, kapsamlı (ve belli ki uzun sürecek) bir restorasyon çalışması. Başlarda uyanamadım aslında, restorasyon sadece dış cephedir diye düşündüm ancak üzerine internetlerden uzun uzun okuduğum eserleri öyle koridor kenarlarında görünce anladım işin boyutunu. İnternette gözlemlediğim o güzel müze ortamı hiç bir şekilde yoktu. Daracık, kalabalık ve ışıksız garip bir ortamda keyfini çıkarmaya çalıştım ancak nafile.

Bunun da üzerine, her ilk giden için bir numaralı eser konumunda olan İskender Lahdi gösterimde bile değilmiş maalesef. Hatta sonradan fark ettim ki, internetten üzerine bilgi topladığım bazı eserleri hiç görmemişim (o sırada da aklıma gelmemiş). Derlediğim bilgileri çektiğim fotoğraflarla beraber koymayı planlıyordum ancak o iş seneye kaldı demek ki. Bu da uyari mahiyetinde bir blog paylaşımı olsun o zaman.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>173</wp:post_id>
  <wp:post_date>2015-10-04 12:29:42</wp:post_date>
  <wp:post_date_gmt>2015-10-04 12:29:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>istanbul-arkeoloji-muzesine-gitmeyin-degil-ama-cok-gitmeyin</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="diger"><![CDATA[Diğer]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15463268174]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[11140294]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Floransa'da Heykele ve Resme Öylece Bakmama Rehberi</title>
  <link>https://dikendine.wordpress.com/?p=175</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=175</guid>
  <description/>
  <content:encoded><![CDATA[Floransa. Rönesans burada doğmuş diyorlar. Acaba biz İstanbul'u işgal edince kaçan bütün aydınlar Floransa'ya mı gitti? Şaka şaka, ben bu konuyla dalga geçiyorum ama gerçeği de pek bilmiyorum. Sadece geçen aylarda bir haftamı Floransa'da geçirdim ve bu konuda bir şeyler yazmak istiyorum. Resim ve heykellerin, sanat tarihi açısından önemini bilmedikçe onlara bakmaktan pek fazla keyif alamıyorum (bir kaç istisna dışında). Mühendis kafamın aldığı şekilde, buraya öğrendiklerimi ve gördüklerimi aktarmak benim hafızam açısından iyi olacak.

Rönesans, Avrupa'nın karanlık çağları (karanlık çağ artık kullanılmayan bir terimmiş ancak detayını bilmiyorum) sonrası başlayan, Antik Yunan ve Roma döneminin öğretilerinin tekrardan incelenmeye başlandığı bir dönem. Kendi içinde bölümlere ayrılsa da ben anladığım kadarıyla "özütünü" yansıtmaya çalışacağım.

Öncelikle bu hareketin gücünü aldığı noktalar farklı farklı. Rönesans şu sebeple doğdu, buradan güç aldı diyerek parmakla sebep göstermek zor. Ancak şunları bilmek lazım, Avrupa çok ciddi bir veba salgını geçiriyor (aka Kara Ölüm) ve nüfusunun yarısını kaybediyor. Bu zaten insanların dine ve kiliseye bakış açısını sorgulatan bir tecrübe olarak kalıyor. Bu şehirlerden bir tanesi de Floransa. Burası İtalya'nın diğer krallık ve dükalıklarından farklı olarak cumhuriyet ile yönetiliyor (çok özgür olmsa da) ve otokratik bir yönetime sahip değil. Ülkeyi yöneten tüccar ve zengin aileler yönetimi bırakmak istemeseler de demokratik bir ortam yaratmaya çalışıyorlar. Bu ailelerin en ünlüsü zaten Medici ailesi. Rönesans'ın resmi sponsoru aslında kendileri. Medici bankasının sahipleri ve belli dönemlerde Avrupa'nın farklı şehirlerine bile kredi verecek güçteler. Bu sayede Avrupa'nın önemli para birimlerinden biri Floransa parası oluyor (adı vardı bunun yaa unuttum).

Bu sebeplerden dolayı Floransa kendisini diğer krallık ve dükalıklardan ayırıyor. Halkı, özgür bir şehirde yaşadığına inanıyor ve buna bağlı olarak çeşitli arayışlara girmekte bir mahsur görmüyor. Bu yenilik arayıcıların ilki (Rönesans sanatı temellerini kazdığınızda 12. yy'a kadar gidiyor ancak ben o kadar bilgili değilim bu konuda) Brunelleschi, ressam, mimar, heykeltraş, mühendis. Anlayacağınız tam bir rönesans adamı.

Bu herif kalkıp Floransa'dan Roma'ya gidiyor, söylenene göre Roma yapılarını inceleyebilmek için. Belki ilk kez Romalıların başarıyla kullandığı kubbeleri orada görüyor. Daha sonra geliyor buraya. Floransa'da bütünü inşaa edilen ancak tepesi nasıl kapatılacak bilinemeyen o çok ünlü duoma'ya bir dam konduruyor. Öyle böyle bir dam değil ama bu. Büyük, teknolojik ve etkileyici. Her şeyden önemlisi, gotik, ucubik (lol), sirvi, tanrı'ya yükselen mimariden uzak bir kubbe bu dam. Rönesans işte böyle şey.

Neden Antik Yunan öğretileri ile kubbeler arasında ilişki var. Aslında zorlarsak biraz şöyle. Biliyorsunuz Antik Yunan'ın dört büyük heykeltraşı hep Yunan sanatını bir adım öteye götürmüş, bir şeyler değiştirmiş adamlar. Hepsinin adını buraya yazmayacağım çünkü üşeniyorum. Bir de tam bilmiyorum. Ama Praksiteles üzerine bir kaç laf edebilirim.

Helenistik, Roma ve Rönesans heykelleri neredeyse bu Praksiteles denen herifin açtığı yoldan ilerliyor. Ya da biz nispeten eğitimsiz gözlerimiz ve az sanat tarihi bilgimizle böyle düşünebiliriz. Praksiteles'in yaptığı devrim, heykellerinin duruşunu değiştirmesinde yatıyor. Zira o güne kadar yapılan heykeller, dik, simetrik, iki ayak üstünde, adeta bir put gibi duran figürlerden oluşurken Praksiteles bu heykellere hareket katıyor. İşte o tanıdık, vücut yükünün tek ayağa verildiği, bir yere dayanmış gibi duran heykelleri Praksiteles ilk olarak yapmaya başlıyor. Bunun da bir adı var elbette: Kontraposto. Sırf bu kelimeyi bilerek Türkiye'de heykel bilen sayılı insanlar arasına girersiniz zaten.

Kontraposto, heykellere canlılık, insancıllık katıyor, heykele bakan kişi ile heykel arasında bir ortak bağ yaratıyor. İşin güzelliği şundaki Praksiteles bu heykel formunu hiç çekinmeden Apollo, Afrodit gibi tanrılara uyguluyor. Ve hatta onları bu kontraposto formunda çıplak bir şekilde heykelliyor (resmediyor gibi bir fiil bu). Böyle yaparak bir anlamda tanrılar ile insanlar arasında bulunan o bariyeri yok ediyor ve ikisini aynı kefeye koyuyor diyebiliriz.

İşte gotik dönemler sonrası Avrupa'nın aradığı şey de bu. Bağnazlıktan kurtulmak adına bu çeşit reaksiyonlar Floransa'nın özgürlükçü ortamıyla birleşiyor, Praksiteles ve diğer Yunan heykeltraşlarının öğretileri tekrar uygulanmaya başlıyor. Gökyüzüne uçsuzca uzanan kilise kuleleri, ruhsuz, cılız ve ince insan heykelleri unutuluyor. Hatta öyle bir durum ki bu, tek başına bir meydanda duran heykel klişesi Gotik dönemde tamamen unutulmuş. Heykeller, kiliselerin, binaların nişlerine duvarlarına sıkışık kalmış.

Bu heykel devrimini başlatanlardan biri Donatello. [Ninja kaplumbağa esprisi]. Donatello öncelikle bu kontraposto formunu denemeye başlıyor, sonra çıplaklığı geri getiriyor ve Antik Yunan sonrası tek başına bir kaidede duran Davut heykeli Floransa'daki ilk baba eserimize ulaşıyoruz.

Bu Davut Floransa'da karşınıza çok çıkacak. Hikayesi oldukça basit. Davut ve Golyat'ın hikayesindeki Davut ile Floransa'lılar kendileri arasında oldukça güçlü bir bağ hissediyorlar. Çünkü özgürlükçü, demokratik, barışçıl ve iddialara göre küçük ordulu Floransa; totaliter Milan'ı savaşta yeniyor. Floransa halkı da bu zaferi Davut'un Golyat'ı yenmesiyle eşleştirip kendi kendilerini kutluyorlar. Bu sebeple Davut önemli bir figür.

Davut'un Floransa için anlamının yanında Rönesans için anlamı da büyük elbette. Donatello'nun bu ilk davutu insanın tüylerini ürperten detaylara sahip. Öncelikle belki yüz yıl sonra Michalengelo'nun yapacağı (şu anda çok daha popüler olan) Davut heykeli ile kıyaslayınca Donatello'nun Davut'u genç bir çocuk. Vücudunda neredeyse kas yok ve aslında düşününce neredeyse cinsiyeti ayırt edilemiyor. Ayrıca Michalengelo'nun heykelinin aksine, burada dövüş bitmiş Golyat mağlup edilmiş ve Davut'un yüzünde çok ince bir gülümseme var. Bu da bitmiyor Golyat'ın kafasını ve miğferini Davut'un ayağının altında görebiliyoruz.

İşte burada heykelin beyin çıkaran kısmı geliyor. Davut'un ayağının altında duran miğferden yükselen bir tüy, Davut'un çıplak bacaklarına temas ederek kasığına ve oradan da neredeyse cinsel organına kadar yükseliyor. Donatello kesik başlı, savaşlı bu heykele hem Davut'un cinsiyetsizliği ile, hem de o tüy ile inanılmaz kafa karıştıran insanın içini gıcıklaştıran, beynini çıkarak detaylar ekliyor. Rönesans.

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>175</wp:post_id>
  <wp:post_date>2016-03-18 22:52:13</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
</item>
<item>
  <title>Yeni SSDm Sandisk Ultra II 240 GB</title>
  <link>https://dikendine.wordpress.com/2015/10/27/yeni-ssdm-sandisk-ultra-ii-240-gb/</link>
  <pubDate>Tue, 27 Oct 2015 15:16:17 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=178</guid>
  <description/>
  <content:encoded><![CDATA[Uzun arayışlar, ya da daha doğrusu Doların düşük olduğu an ile internet kampanyalarını denk getirme bekleyişi sonrasında sonunda kendime bir adet SSD alabildim. Bunu ASUS X201 marka ve model dandik Windows bilgisayarım için kullanacağım. Bilgisayar Celeron 847 (1.1 Ghz - Çift Çekirdek) ve 2 GB Ram'e sahip. Ancak AVR ve Arduino programlarken Windows'un rahatlığı sebebiyle katlanmak zorundayım. Bu acıyı bir nebze azaltabilmek için bu 620 liralık bilgisayara 289 liralık (kargo dahil) bir SSD yatırımı yaptım.

Hepsiburada.com'da Sandisk Ultra II 240 GB SSD modelini aldım.

Bilgisayara takması oldukça basit. Sadece şunu söylemek lazım, varolan işletim sisteminizi, programlarınızı, ayarlarınızı tekrardan kurmak istemiyorsanız, HDD'den SSD'ye klonlama yapmalısınız. Bilgisayarın içindeki HDD'den verileri alıp SSD'ye atabilmek için için de, SSD'nin SATA girişini bilgisayarın USB girişine adapte eden bir kablo bulmanız gerekli. Piyasadaki bazı SSD'lerin yanında bu geliyor sanırım, ancak Sandisk'in Ultra II modelinden <strong><em>bu kablo çıkmıyor</em></strong>.

Ben de bu işe niyetliydim ancak kablo çıkmadığından dolayı temiz Windows 10 kurulumu yaptım. <a href="https://ninite.com/">Ninite </a>sonrası hayat biraz daha rahat çünkü.

Sonuçlar gayet olumlu. <a href="https://dikendine.wordpress.com/2015/07/06/2015-temmuz-nacizane-ssd-arastirmasi/">Önceki postta</a> göreceğiniz (resmi aşağıya da koydum) üzere 4K rastgele okuma ve yazma hızlarında inanılmaz bir yükselme mevcut. SSD alırken 400-450 mb/sn gibi rakamlar güzel göz boyar ancak bence gerçek bir gösterge değildir zira bunları tekli büyük dosyaların transferlerinde görülebilecek hızlardır (örn: film dosyasını kopyalamak gibi). Asıl dikizlenmesi gereken 4K karma okuma ve yazmalar. Burada kıyas yaptığımızda SSD'nin önceki HDD'ye kıyasla 25 kat fazla bir okuma hızına sahip olduğunu görüyoruz. Gerçi bu bilgisayar 25 kat kızlı açılıyor demek değil maalesef. Benchmark 4K rastegele okuma bile olsa, gerçek hayattan biraz uzak.

[caption id="attachment_180" align="alignnone" width="300"]<a href="https://dikendine.files.wordpress.com/2015/10/capture.png"><img class="size-medium wp-image-180" src="https://dikendine.files.wordpress.com/2015/10/capture.png?w=300" alt="Sandisk Ultra II 240 GB Performansı" width="300" height="271" /></a> <strong>Sandisk Ultra II 240 GB Performansı</strong>[/caption]

[caption id="attachment_163" align="alignnone" width="300"]<a href="https://dikendine.files.wordpress.com/2015/07/hddhiz.png"><img class="wp-image-163 size-medium" src="https://dikendine.files.wordpress.com/2015/07/hddhiz.png?w=300" alt="HDDHiz" width="300" height="277" /></a> <strong>500 GB HDD performansı</strong>[/caption]

Yine de, SSD'li başka bir bilgisayarım daha olmasına rağmen, böyle eski bir işlemciye ve düşük RAM'e sahip bir bilgisayarın bu kadar çabuk açılabilmesi beni oldukça etkiledi. Sadece benchmark'larda gördüğünüz üzere okuma hızlarında bu SSD için <a href="http://ssd.userbenchmark.com/SanDisk-Ultra-II-240GB/Rating/2548">rapor edilen değerleri</a> yakalayamıyorum. O şimdilik kafama yakıldı. Ya AHCI ile ilgili bir durum ya da Asus sebepli daha temel bir uyumsuzluk.

Bilgisayarın açılma hızının yanında en önemlisi şu: Eskiden Spotify ve Chrome'a basınca resmen 1 dakika beklerdim programlar açılsın ve kullanmaya müsaade edecek kadar yüklensin diye. Hatta Chrome kullanamazdım hatta bu yüzen Firefox kullanırdım. Şimdi Firefox SSD altında pek güzel açılış hızı sunmuyor, ama Chrome canlandı ve hiç bekletmemeye başladı. Spotify da aynı şekilde. Bu sebeple daha kullanılabilir bir bilgisayarım oldu.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>178</wp:post_id>
  <wp:post_date>2015-10-27 15:16:17</wp:post_date>
  <wp:post_date_gmt>2015-10-27 15:16:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>yeni-ssdm-sandisk-ultra-ii-240-gb</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ssd"><![CDATA[SSD]]></category>
  <category domain="category" nicename="teknoloji"><![CDATA[Teknoloji]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[16260510478]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Capture2</title>
  <link>https://dikendine.wordpress.com/2015/10/27/yeni-ssdm-sandisk-ultra-ii-240-gb/capture2/</link>
  <pubDate>Tue, 27 Oct 2015 15:05:35 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2015/10/capture2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>179</wp:post_id>
  <wp:post_date>2015-10-27 15:05:35</wp:post_date>
  <wp:post_date_gmt>2015-10-27 15:05:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>capture2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>178</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2015/10/capture2.png</wp:attachment_url>
</item>
<item>
  <title>Capture</title>
  <link>https://dikendine.wordpress.com/2015/10/27/yeni-ssdm-sandisk-ultra-ii-240-gb/capture/</link>
  <pubDate>Tue, 27 Oct 2015 15:06:28 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">http://dikendine.files.wordpress.com/2015/10/capture.png</guid>
  <description/>
  <content:encoded><![CDATA[Sandisk Ultra II 240 GB CrystalDiskMark Performance]]></content:encoded>
  <excerpt:encoded><![CDATA[Sandisk Ultra II 240 GB Performansı]]></excerpt:encoded>
  <wp:post_id>180</wp:post_id>
  <wp:post_date>2015-10-27 15:06:28</wp:post_date>
  <wp:post_date_gmt>2015-10-27 15:06:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>capture</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>178</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://dikendine.files.wordpress.com/2015/10/capture.png</wp:attachment_url>
</item>
<item>
  <title>En Güzel Podcast'ler</title>
  <link>https://dikendine.wordpress.com/2016/04/13/en-guzel-podcastler/</link>
  <pubDate>Wed, 13 Apr 2016 21:38:12 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=184</guid>
  <description/>
  <content:encoded><![CDATA[Tarih olarak ne zaman podcast dinlemeye başladığımı hatırlamıyorum. Ancak ilk "bu mükemmel" dediğim anı çok iyi hatırlıyorum. <a href="http://www.radiolab.org/story/254840-operation-migration/">Program Radiolab, bölüm Raising Crane</a> (Crane, turna demek bu arada. Sizi bakmaktan kurtardım). Amerika'nın belli bir bölgesinde endemik bir turna türünün yetiştirilme sürecini anlatıyor. Bu kısa bölümün sonunda sordukları soru çarpıcı: "Bunu neden yapıyoruz?"

İşte o gün bugündür podcast dinliyorum. Genelde müzik dinlemekten sıkıldığımda, yeni şeyler keşfedemediğimde yapıyorum bunu. Ancak sırf bir bölüm dinlemek için dışarıya yürüyüşe çıktığım da oluyor. Son zamanlarda performansım düştü. Aslında bazı günler ne müzik en de podcast dinlemek istiyorum. Sanırım bazen canımın sıkılması, kendi düşüncelerime kalmam lazım. Neyse, konu bu değil. Konu benim dinlediğim Podcast'leri sıralamam.

<strong>Radiolab</strong>

Gönüllerin ve aklın birincisi. Evet ikisi birden. Bu sebeple birinci zaten. Bilim ile beşeri meseleleri, felsefe ile kuantum mekaniğini daha iyi birleştiren bir şey daha yok. Bakın podcast bile demedim. Ne bir kitap, ne bir belgesel (tamam belki Cosmos), ne de bir film. Genelde bilim ile sosyal bilimler birbiri ile karışınca boka sarıyor. Bknz. Marslı (The Martian) kitabı. Bütün kitap hesap kitap, oksijen oluşturuclar, reaktörler, prosesler, biyoloji, uzay muzay. Aha dur tam kitap bitiyorken bir iki de insanlık, yaşam, hayata dair düşünce teşvik edici cümle sıkalım. Bu böyle olmaz.

İşte Radiolab bunu beceriyor. Eski bir podcast aslında. 2002'ye kadar gidiyor tarihi. Ancak 2008'den sonrası ancak bulunabiliyor dijital arşivlerde veya iTunes'da. Diğerlerini gidip manuel indirmek lazım.

Konusu her şey. Aslında daha önceleri daha bilim odaklı idi, şimdi biraz daha genişledi. Ancak bu sorun değil. Çünkü adamların hamurunda acayip bir hikaye anlatma yeteneği var. Sunuculardan biri <a href="https://en.wikipedia.org/wiki/Jad_Abumrad" target="_blank">Jad Abumrad</a>. Aslında müzisyen. Ancak sunuculuk ve hatta gazetecilik yaparken bir kere bile teklemiyor. Radiolab'i başlatan ve tek başına sunmaya başlayan adam da bu. Programın çılgın ve inanılaz ses efektleri de onun sayesinde ortaya çıkıyor. The New York Times, sırf bu programdaki ses efektleri için <a href="http://www.nytimes.com/interactive/2011/04/10/magazine/radiolab.html?_r=0" target="_blank">özel bir sayfa</a> bile yaptı.

Programın diğer adamı <a href="https://en.wikipedia.org/wiki/Robert_Krulwich" target="_blank">Robert Krulwich</a>. Türkiye'de olsa dinazor gazeteci dersiniz yaşına bakıp. Tipi öyle olabilir de burası Türkiye değil. İnsanlar belli bir bir miktar maaş almaya başlayınca kendilerini geliştirmeyi bırakmıyorlar. Bu herif de büyük sitelerin, gazetelerin muhabiri olarak çalışmış ancak yolu Jad Abumrad ile kesişince bu programın ikinci sunucusu olarak katılmış. Şimdi bu programdan farklı bölümler öncereceğim ki gidip bir şans verin.

Aklımda kalan bölümler:

<a href="http://www.radiolab.org/story/187571-escape/" target="_blank">Escape</a>

<a href="http://www.radiolab.org/story/242184-dark-side-earth/" target="_blank">Dark Side of the Earth</a>

<a href="http://www.radiolab.org/story/straight-outta-chevy-chase/" target="_blank">Straight Outta Chevy Chase</a>

<strong>Freakonomics</strong>

Freakonomics eskilerden biri olduğu için burada. <a href="https://en.wikipedia.org/wiki/Stephen_J._Dubner">Steven Dubner</a> adlı gazeteci ve Steven Levitt adlı bir ekonomi profesöründen oluşuyor. Aslında Türkiye'de bilinme olasılığı daha yüksek bir ikili bu. Yazdıkları kitap seneler önce Türkçe'ye çevrilmiş ve hatta belgeselleri NTV'de bile yayınlanmış.

Bu iki, ürettikleri kitaba ve podcaste verdikleri isimden de anlayacağınız üzere garip ekonomik ilişkiler üzerine incelemeler yapıyorlar. En çok verilen örnek uyuşturucu kartelleri ve Mcdonalds'ın iş modelleri arasındaki benzerlikler. Veya kürtaj yasaklarının suç oranına yaptığı etki. Bazen sınıraları zorlasalar da çok keyifli ve sürükleyici bölümler ortaya çıkıyor.

Son senelerde, ikilinin ekonomist olanı Steven Levitt çok fazla katkı yapamadığından olacak, konuları biraz da Steven Dubner'ın gazetecilik geçmişi ile çekip çevirdiği hikayeler üzerine dönüyor. Size tavsiye edeceğim bölüm de bu bölümlerden bir tanesi aslında. Fear Thy Nature.

İki farklı hikaye ama ikisi de bir yerde birleşiyor. İnsanların kurallar karşısındaki davranışları. Topluluk içerisinde bize atfedilen davranış şekilleri ve bu empoze edilen topluluk doğrularının ortadan kalkması durumunda yaşanabilecekler. Stanford Hapishane deneyi ve deneysel bir tiyatro oyunun etrafında dönen bölüm benim gözümde bir klasik.

Aklımda kalan bölüm

<a href="http://freakonomics.com/podcast/fear-thy-nature-a-new-freakonomics-radio-podcast/" target="_blank">Fear Thy Nature</a>

<strong>Planet Money</strong>

Başlarda sıradan bir ekonomi podcast'i sandım. Yatırım tavsiyesi verdiklerini düşünmüyordum ancak bir ekonomi podcast'i, özellikle Freakonomics gibi bir şey varken ne kadar ilgi çekici olabilir diye düşündüm. Haksızdım. Planet Money, safkan bir ekonomi podcasti , evet. Ancak hikaye anlatma güçleri tepedeki iki program ile çok rahat yarışacak seviyede.

Programın daha rahat bir tavrı var. Her bölümde sunucular değişiyor ancak programın gidişatını kontrol eden isimler genelde aynı. Jacob Goldstein, Robert Smith vesaire. Dinlediklerim arasından beğendiğim bölümler şunlar:

Bu iki bölüm enflasyon üzerine. Türkiye olarak yakından tanıdığımız bir sorun. Bizim çözümümüz de Brezilya ve ABD ile benzer. Bu yüzden güzel bölümler bunlar.

<a href="http://www.npr.org/sections/money/2015/12/02/458222801/episode-216-how-four-drinking-buddies-saved-brazil" target="_blank">How Four Drinking Buddies Saved Brazil</a>

<a href="http://www.npr.org/sections/money/2015/11/20/456855788/episode-664-the-great-inflation" target="_blank">The Great Inflation</a>

<strong>Hello Internet</strong>

<strong></strong>NBA'de olduğu gibi son senenin en gelişen podcast'i ödülü olsa, buna verirdim. Dikkat ederseniz yukarıdaki üç podcast de kurgulu yayınlar. Yani röportajlar, konuşmalar ve ifadeler editleniyor size hap gibi kolay takip edilebilir bir şekilde veriliyor. Ben genelde böylelerini sırf muhabbet olanlara tercih ediyorum. Daha düzenli geliyor ve dinlerken yormuyor. Tek istisnam bu Hello Internet. Youtube ünlüleri CGP Grey ve Brady Haran'ın muhabbetinden ibaret, "Two man talking" formatında bir podcast bu. Bölümleri de bir hayli uzun olabiliyor ancak bir kere bile sıkılmadım. Sokaklarda yürüyüş yaparken ki ideal podcastim.

Son bir senede çok ilerledi dedim, neredeyse kendi kültünü oluşturdu. Tüm dünyadan gelen kartpostallar ile resmi podcast bayrağı seçimleri yapmışlıkları var.

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>184</wp:post_id>
  <wp:post_date>2016-04-13 21:38:12</wp:post_date>
  <wp:post_date_gmt>2016-04-13 21:38:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>en-guzel-podcastler</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[21759126315]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Yeni Uğraşım: Ciftehavuz.com</title>
  <link>https://dikendine.wordpress.com/2015/12/06/yeni-ugrasim-ciftehavuz-com/</link>
  <pubDate>Sun, 06 Dec 2015 18:06:18 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=188</guid>
  <description/>
  <content:encoded><![CDATA[Bu blogu keyifle tutmaya devam edeceğim ancak yeni bir şeyler yapmaya daha karar verdim. Burası biraz daha kendimi eğitmek adına yapacağım paylaşımlar ile dolacak diye umut ediyorum. <a href="http://www.ciftehavuz.com/" target="_blank">Ciftehavuz.com</a>'da yapmak istediğim şey ise karşıma çıkan güzel şeyleri e-posta olarak göndermek olacak. Newsletter'lar bir süredir takip ettiğim bir şey. <a href="http://nextdraft.com/" target="_blank">Nextdraft</a>, <a href="https://tinyletter.com/todayintabs">Today in Tabs</a>, <a href="https://www.reddit.com/r/upvoted" target="_blank">Reddit Upvoted</a> gibi popüler olanları takip etmenizi kesinlikle öneririm. Ayrıca Quora.com gibi siteleri bizzat ziyaret etmektense newsletter olarak almayı ve okumayı tercih ettiğimi fark ettim. Bu sebeple ben de kendimce bir newsletter başlatmak istedim.

<a href="http://www.ciftehavuz.com/" target="_blank">Ciftehavuz.com</a>'da yazdığı gibi, keşfettiğim ve hoşuma giden her şeyi belirli olmayan aralıklarda yayınlamaya başlayacağım. Hatta başladım bile. E-posta'lar Tİnyletter aracılığı ile gönderiliyor, ki ücretsiz newsletter başlatmak için herhalde en kolay araçlardan biri. Ancak sitede eski e-postaların görüntülenmesi için bir arşiv bölümü de yapmaya çalıştım. Bu e-postaların neye benzediğini görmek için <a href="http://www.ciftehavuz.com/arsiv.php" target="_blank">buraya bakabilirsiniz.</a>

Siteyi ben kendim yapmaya çalıştım. Vanilla PHP, Sass ikilisinden başka bir şey yok. Allahtan başka bir proje için kendimde veritabanı sınıfları yaratmıştım da çok uğraşmadan basit bir site oldu arşiv özelliği ile.

Haa, bir de <a href="http://www.ciftehavuz.com/kaynaklar.php" target="_blank">kaynaklar </a>sayfası yaptım. Haberleri genelde Feedly aracılığı ile takip ediyorum ancak oraya ekleyemediğim ve ziyaret etmeyi unutmak istemediğim sitelerimi de burada topluyorum. Hayatımda hiç bookmark yönetebilen biri olmadım.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>188</wp:post_id>
  <wp:post_date>2015-12-06 18:06:18</wp:post_date>
  <wp:post_date_gmt>2015-12-06 18:06:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>yeni-ugrasim-ciftehavuz-com</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="diger"><![CDATA[Diğer]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[17533692090]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Pocket Challenge 2015</title>
  <link>https://dikendine.wordpress.com/2015/12/12/pocket-challenge-2015/</link>
  <pubDate>Sat, 12 Dec 2015 10:49:56 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=217</guid>
  <description/>
  <content:encoded><![CDATA[Pocket, akıllı telefon zamanında üretilmiş en başarılı uygulamadır. İşte söyledim.

İlk akıllı telefonumu 2011 yılında edindim. Bir adet iPhone 3Gs. Bunu hatırlıyorum da ne zaman Pocket ile (daha doğrusu o zamanki adı Read It Later) ne zaman tanıştım hatırlamıyorum. O yüzden geçmişimiz baya geriye dayanıyor diyebilirim. Hiç bir servise bu kadar uzun süre bağlı kalmamıştım. Aynı zamanda hiç bir servis hayatımda sürekli olarak artan bir önem ihtiva etmemişti.

Pocket nedir? Pocket temel olarak internette karşınıza çıkan güzel yazıları ve videoları kaydetmenize yarayan bir servis. Tarayıcıdan aynı bookmark üretir gibi tek tıkla işaretlediğiniz yazılar Pocket tarafından kaydediliyor. Telefondaki uygulamadan veya internet sitesinden hesabınıza girdiğinizde bu kaydettiğiniz yazılar gözüküyor.

Bu kadarla sınırlı değil elbette. Pocket, kaydettiğiniz sayfaları olduğu gibi karşınıza getirmiyor. Reklamları, sitenin dikkat bozan menülerini, sitenin başka bölümlerini ayıklayıp sadeleştirmiş bir okuma formatına sokuyor.

Burada da bitmiyor, telefonunuzdan uygulamayı açtığınızda bu sadeleşmiş format cihazınıza indiriliyor ve metroda internetsiz iken kaydettiğiniz herhangi bir yazıyı okumanıza imkan sağlıyor. İşte bu kadar.

Kendisi ile olan ilişkimden bahsettim. Dolayısıyla bazı kullanım alışkanlıklarım oluştu zamanla. Hepsinden bahsetmeyeceğim ancak bir tanesi var ki, işte o bir bela.

Buna yazı tortusu diyorum ve Pocket'ı kullanmaya başladığım zamandan beri çözemediğim bir problem. "Okuyabileceğinden fazla kitap alma" sorununun dijital versiyonu. Pocket listesinin altlarına doğru ötelenmiş, okunmadan kalmış ve artık alaka kurulamayan yazılar.

Bunlar genellikle bir hevesle işaretlediğim, belki o gün yaşanmış bir olaya dair yazılar oluyorlar. Genelde hacimliler ve tek oturuşta yutmak bazen kolay olmuyor. Bu da sonu engellenemez bir döngü başlatıyor. Yazının okunması ertelendikçe, konunun güncelliği gidiyor ve daha az ilgi çekici oluyor. Yazı ise orada, çünkü Pocket listesinden yazı silmek günahtır (bunun üzerine daha sonra yazmak lazım).

İşte bu tortuyu seneler sonra gidermenin çözümü olarak Pocket Challange'ı başlatmaya karar verdim. Oturdum Pocket'ta bekleyen yazıları saydım: 64. 31 Aralık'ta bu sayının 0 olmasına karar verdim.

Bunun için günde 3.3 adet yazı okumam gerekecek. Bunu yapamamam için önümde hiç kritik bir engel bulunmuyor. Olayı daha keyifli hale getirmek adına, okuduğum yazıların kaydadeğer olanlarının ciftehavuz.com newsletter'ında paylaşmaya karar verdim. Böylece sadece güncel, haftalık şeylerin değil de daha zamansız içeriklerin paylaşımı olacak.

Bugünden itibaren başlıyorum. Haydi kolay gelsin.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>217</wp:post_id>
  <wp:post_date>2015-12-12 10:49:56</wp:post_date>
  <wp:post_date_gmt>2015-12-12 10:49:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pocket-challenge-2015</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="diger"><![CDATA[Diğer]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[17722794259]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Atık Su Nasıl Arıtılır?</title>
  <link>https://dikendine.wordpress.com/2016/01/04/atik-su-nasil-aritilir/</link>
  <pubDate>Mon, 04 Jan 2016 16:03:35 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=261</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">İnternette gezinirken aklıma geldi arattım. Bu soruya kısa ve öz bir cevabın olmadığını gördüm. Türkiye'de Çevre mühendisliği lisans programı sunan pek çok okul var ancak verilen bilgiler ders kaynaklarından ibaret. Ve hepsi aynı şeyler, aynı cümleler, aynı bakış açıları. Tasarım için adım adım hesap makinesiyle formül çözüyorsunuz. Çevre mühendisliğinin bu en önemli konusunu anlamak için daha günlük dille yazılmış şeylere ihtiyacımız var. Yoksa çözümlere odaklanıp soruların kendisini kaçırıyoruz.</p>
<p style="text-align:justify;">Neyse.</p>
<p style="text-align:justify;">Atık su evden çıkar, fabrikadan çıkar. Evden çıkanları önemli çünkü miktar olar çok fazlalar. Genelde Türkiye'de herkesin günde 100 litre su harcadığı kabul edilir. 76 milyon * 100 litre. İşte bu kadar atık su.</p>
<p style="text-align:justify;">Peki atık su neden kötü? Bir hayvanın atığı, diğerinin besini olamaz mı (mesela gübre olarak tezek kullanılması)? Pekala olur ancak besinin fazlası da zarardır. Biz atık suyumuzu toprağa değil denize veriyoruz. Denizdeki bakterilere, balıklara hatta konan martılara bu yem olmaz mı? Eh, olabilir elbette. Kanalizasyonun denize karıştığı yerlerde martıların doluştuğunu görmüşsünüzdür. Amma velakin, bu besin miktarı yükselirse, denizlerde, göllerde, nehirlerde çok hızlı büyüyebilen, çoğalabilen bakteriler de buna göre birden coşar. Allah der, ben burada besin buldum yiyebildiğim kadar yiyim. Zaten 2 günde nüfusu ikiye katlanabildiği için bakteri camiasında çılgın bir büyüme yaşanır. Hatta bu çılgınlık öyle bir raddeye varır ki, besinleri yakacağım diye sudaki oksijeni bitirler. Oksijensiz suda diğer canlılar yaşayamaz (balıklar vs vs) ve sudaki yaşam ciddi darbe alır. Hatta oksijeni bitirmekle de kalmazlar, su üstünde bir tabaka halinde öldükleri için derinlere ışığın gitmesini engeller ve yüzey altında fotosentez yapan bitkileri de bitirebilirler. İşte bu çılgın beslenme sonrası ölme safhasında genelde bakteriler kırmızı bir renk salarlar (tam sebebini unuttum). Ara sıra bizim haberlerde, gazetelerde çıkan, halkı allah deprem olacak diye ürperten "X Gölü Kızardı" başlıklı haberlerin sebebi de budur.</p>
<p style="text-align:justify;">Peki biz bu suyu ne yapalım da arıtalım. Biliyorsunuz yaşamın yapıtaşlarından üçü Karbon (E yani), Azot (DNA'da var) ve Fosfor (ATP'deki P harfi) atık suda bolca olan şeyler.</p>
<p style="text-align:justify;">Bu üçünün elimine edilmesi ile atık suyun besleyiciliği azaltılır ve bu sayede suyun verildiği ortamda bakerilerin coşması engellenir. Peki bu nasıl yapılır? Tek cümle ile cevabı. Normalde denizde gerçekleşecek bakterinin çılgın bir yemek yeme prosesi, devasa havuzlara alınır ve gerekli oksijen sağlanarak prosesin durmaması garanti altına alınır. Denizde aylar sürecek besinlerin tüketilmesi işi, havuzlarda 12 saatte biter. İşte bu kadar basit. Yani çılgın arıtma teknolojileri yok, doğada gerçekleşecek sürecin taklit edilmesi ve hızlandırılması var. Aslına bakınca çevre mühendisliğinin doğasında da bu var denebilir. Doğal döngüleri sağlamak ve insan aktivitelerinin yarattığı etkileri gidermek için bu döngüleri "hızlandırmak".</p>
<p style="text-align:justify;">Yemekleri yiyen bakteriler, farklı bir havuzda bekletilirler ve bakteriler dibe doğru çöker. Üstte de temizimsi su kalır.</p>
<p style="text-align:justify;">İşin daha da güzeli, bir kere bu düzene alışan bakteriler idmanlı hale gelir ve daha fazla yemek yemeye başlarlar. Normalde bu bakterileri çöktürdükten sonra atmanız gerekirken, tekrar sisteme verirseniz daha yüksek performans elde edebilirsiniz. Dolayısı ile bir bakteri devridaim sistemi kurmuş olursunuz. İşte sürekli devridaim ettirilen bu bakterilerle dolu suya "aktif çamur" denir. Bizim anladığımız şekilde vıcık bir katı-sıvı karışımı değildir yani, çamur dendiğine bakmayın.</p>
<p style="text-align:justify;">Peki bu arıtımı sağlayan bakteriler nereden geldi? Aslında atık suyun içinde geliyorlar diyebiliriz. Ancak şunu dikkate almak lazım, sırf atık suların içinde geliyorlar ve siz bu suyu tesise alıyorsunuz diye arıtma başlayacak diye bir kaide yok. Tesisler inşa edildikten sonra bir devreye alma (start-up) aşamasından geçerler. Bu süre içerisinde öncelikle bakteri kültürü geliştirmeye başlanır ve yukarıda bahsettiğim çamur devridaimi kararlı hale getirilir.</p>
<p style="text-align:justify;">Şimdi bu basit bir açıklaması oldu. Bundan sonra daha da detaylanacak olaylar. Örneğin akıllara şu sorular gelebilir.</p>
<p style="text-align:justify;"><strong>Karbon azot ve fosfor dedik de bunların hepsi bir anda mı arıtılıyor?</strong></p>
<p style="text-align:justify;">Hayır, maalesef öyle bir durum yok. Şöyle düşünelim. Bünyemiz, bir doku veya hücre üretecekken belli bir miktar karbon, azot ve fosfora ihtiyaç duyuyor. Örneğin bir hücre için 100 karbon, 5 azot ve 1 fosfor molekülü gerekiyor. Dolayısıyla insanların atıklarının bu oranda oluşmasını beklersiniz.</p>
<p style="text-align:justify;">Keşke öyle olsaydı.</p>
<p style="text-align:justify;">Evlerde kullanılan temizlik maddeleri, deterjanlar, tüketilen gıdalar, şampuanlar hepsi atık sudaki bu dengenin bozulmasına, mesela fosforun oranının artmasına sebep olurlar. Dolayısı ile tesise gelen atık suda bakterilerin büyümek ihtiyaç duyacağından fazla fosfor olabilir ve arıtma sağlanamayabilir. İşte işler biraz da bundan sonra karışıyor. Neyse o konuya girmeyeceğiz.</p>
<p style="text-align:justify;"><strong>Peki bu suyu arıtırken büyüyen bakteriler ne oluyor?</strong></p>
<p style="text-align:justify;">Dediğim gibi bu büyüyen bakteriler çöktürüldükten sonra tekrar kullanılmak üzere arıtma tankına geri gönderiliyor. Ancak elbette hepsi değil. Örneğim siz günde X litre atık su arıtıp Y kilo bakteri üretiyorsanız, bu Y kilo bakterinin tamamını geri göndermezsiniz. Basit bir ifadeyle, bir süre sonra o tank sırf bakteri ile dolar taşar ve atık suyu alacak yer kalmaz. Dolayısı ile Y kilo bakterinin bir miktarı her zaman fazla çamur olarak sistemden atılır. Bu oluşan çamurun ne kadarı atılacak, ne kadar sisteme geri dönecek hepsi sistemin çalışmasını etkileyecek faktörlerdir. (Bunu daha sonra inceleyelim, "çamur yaşı" adı altında).</p>
<p style="text-align:justify;"><strong>Fazla çamur ne yapılıyor?</strong></p>
<p style="text-align:justify;">Güzel bir soru da bu. En büyük yanılgı, suyu temizledim ben işimi güzel yaptım yanılgısıdır. Bugün bu görüş "sürdürülebilirlik" gibi "yaşam döngüsü analizi" gibi zımbırtılarla değiştirilmek üzere. Zira sizin suyu temizlemeniz ortalıktan kirliliği kaldırmadı. Sadece kirliliğin formunu değiştirdi. Önceden elinizde bir atık su vardı ve onu temizlediniz. Şimdi ise elinizde bir bakteri topluluğu var ve onunla ne yapacağınızı iyi belirlemeniz lazım. O bakterileri alıp çöplüğe atmanın çevreye herhangi bir faydası yok. Onların da canlı olduğunu ve bir besleyiciliğe, bir enerjiye sahip olduğunu göz önüne alabilirsiniz. İçerisindeki azot ve fosforun gübrelemede fayda sağlayacağını düşünüp toprağa serebilir veya kompost yapabilirsiniz. Veya suyunu sıkıp geri kalan bakteri posasını yakmaya gönderebilirsiniz. Ya da komple anaerobik bir ortamda bu bakterileri çürütebilirsiniz. Bu sayede ortaya çıkan metan gazını ise ısı-elektrik üretiminde kullanabilirsiniz.</p>
<p style="text-align:justify;"></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>261</wp:post_id>
  <wp:post_date>2016-01-04 16:03:35</wp:post_date>
  <wp:post_date_gmt>2016-01-04 16:03:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>atik-su-nasil-aritilir</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="aritma"><![CDATA[arıtma]]></category>
  <category domain="post_tag" nicename="atik-su"><![CDATA[Atık su]]></category>
  <category domain="post_tag" nicename="cevre-muhendisligi"><![CDATA[Çevre mühendisliği]]></category>
  <category domain="category" nicename="diger"><![CDATA[Diğer]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[18406339344]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://dikendine.wordpress.com/2016/01/12/408/</link>
  <pubDate>Tue, 12 Jan 2016 07:26:04 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=408</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>408</wp:post_id>
  <wp:post_date>2016-01-12 07:26:04</wp:post_date>
  <wp:post_date_gmt>2016-01-12 07:26:04</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>408</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menü 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[109]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://dikendine.wordpress.com/2016/01/12/409/</link>
  <pubDate>Tue, 12 Jan 2016 07:26:02 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/2016/01/12/409/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>409</wp:post_id>
  <wp:post_date>2016-01-12 07:26:02</wp:post_date>
  <wp:post_date_gmt>2016-01-12 07:26:02</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>409</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>2</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menü 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[188]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[post]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>https://dikendine.wordpress.com/2016/01/12/410/</link>
  <pubDate>Tue, 12 Jan 2016 07:26:53 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/2016/01/12/410/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>410</wp:post_id>
  <wp:post_date>2016-01-12 07:26:53</wp:post_date>
  <wp:post_date_gmt>2016-01-12 07:26:53</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>410</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>3</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="nav_menu" nicename="menu-1"><![CDATA[Menü 1]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[315933224]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[category]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Jekyll İle Web Sitesi Hazırlama</title>
  <link>https://dikendine.wordpress.com/2016/03/10/jekyll-ile-web-sitesi-hazirlama/</link>
  <pubDate>Thu, 10 Mar 2016 16:23:59 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=429</guid>
  <description/>
  <content:encoded><![CDATA[Neden bilmiyorum, statik siteler geri gelmeye başladı. Sanırım ufak işler için PHP'nin veya Wordpress'in, CMS'lerin fazla olduğunu düşünenlerin sayısı arttı. Ayrıca statik siteleri GitHub ve Amazon gibi büyük şirketlerin bedava barındırdığını düşünürseniz, ciddi bir tasarruf yapmak mümkün statik sitelere geçiş yaparak. GitHub Pages'da beleş site barındırmaya yazının sonunda da değinelim.

Statik siteden kastım sadece HTML, CSS ve JS. Yani kullanıcı tarafında çalışan her şey. Sunucunun talep edilen sayfaları göndermek dışında herhangi bi veritabanına erişme, sayfayı hazırlama, kullanıcıya göre değiştirme görevi yok.

Basit bir wordpress blogunu düşünelim. Siz blogu ziyaret ettiğinizde veritabanında tutulan blog başlıkları, metinleri, etiketleri temayla birleştirilip size sunuluyor. Ama bu sayfayı her refresh ettiğinizde yapılıyor. Tekrar veritabanı, tekrar tema birleştirme, tekrar kullanıcıya gönderme. İçerik aynı olsa bile ve hatta içerik seneler boyunca aynı kalsa bile.

Statik siteler burada öne çıkıyor. Sıklıkla güncellenmeyen bir portföy veya bir blog varsa, verileri her seferinde harıl harıl veritabanından çekmeyelim diyor. Site yöneticisi, siteye her yeni içerik eklediğinde, veritabanından verileri çekip temalarla birleştirme işini bir kere kendi bilgisayarında yapsın, sonucunu da site olarak yayınlasın diyor. Bence mantıklı. Hatta biraz zorlarsan çevreci bile.

Statik sitelerin yükselişine destek olan araçlardan bir tanesi Jekyll. Bu aslında bir terminal programı ve Ruby yazılmış. Yarattığınız temaları, yazdığınız yazılarla ve içerikle birleştirerek statik sitenizi oluşturuyor. Elbette hem temaları hazırlamanın ve yazıları yazmanın belirli koşulları var.

Statik sitelerin en büyük sorunu olan, sayfalar arası ortak elementleri (mesela menü ve footer) kopyalayıp yapıştırma derdinden kurtarıyor en önemlisi. Nasıl PHP'de include yapabiliyorsak Jekyll sayesinde çok benzer fonksiyonaliteye kavuşabiliyoruz.

Jekyll'ı anlamak aslında o kadar zor değil. Ancak şu videoyu izlemenizi kesinlikle tavsiye ederim. Kelimelerle anlatmaya çalışana kadar, grafikleri ve resimleri kullanmak daha mantıklı.

[youtube https://www.youtube.com/watch?v=iWowJBRMtpc&amp;w=560&amp;h=315]

Jekyll'ın en kötü yanı, Windows işletim sistemi için stabil bir çözümü olmaması. Eğer Mac veya Linux'te değilseniz nasıl bir ortamla karşılaşırsınız bilemiyorum.

Jekyll'ı Mac'e yüklemek ve sonra da siteye yapmaya başlamak için 2016'nın başı itibarıyla en güzel kaynak Thomas Bradly'nin hazırladığı seri. 30 video olduğuna aldanmayın, hepsi kısa kısa. Tutorial'ı takip ederseniz bir haftasonunda bir kaç ücretli hosting'de bulunan sitenizi ücretsiz GitHub'a geçirebilirsiniz. FTP şifreleri ile uğraşmadan sadece bir git push ile site upload etmenin keyfi bir başka.

Videolarda göreceğiniz üzere, Jekyll kullanmak için Ruby falan bilmenize gerek yok. Sadece temalarınızı oluştururken <a href="http://liquidmarkup.org" target="_blank">Liquid</a> denen templating engine'i ve içerikleri oluştururken de Markdown zımbırtısını öğrenmeniz gerekir. Öğrenmek doğru kelime bile değil aslında. O kadar kolaylar ki.

[youtube https://www.youtube.com/watch?v=oiNVQ9Zjy4o?list=PLWjCJDeWfDdfVEcLGAfdJn_HXyM4Y7_k-]

Dediğim gibi Jekyll'a komutu verdiğinizde temalarınızla içeriğinizi birbirine bağlıyor ve sitenizi oluşturuyor. Oluşturduğu çıktı, sizin server'a upload etmeniz gereken dosyalar. Yani hazırladığınız temalar ve içerik sadece sizin bilgisayarınızda kalabilir.

İşte burada Jekyll ve GitHub ilişkisinin avantajları başlıyor. GitHub, tüm statik sitelere ücretsiz barındırma sağlamasının yanında, Jekyll ile hazırlanmış siteleri otomatik olarak işleyebiliyor. Yani siz temalarınızda veya içeriklerinizde bir değişiklik yaptığınızda, Jekyll'a komut verip tekrar process etmesini ve bir çıktı oluşturmasını beklemiyorsunuz. Normal statik çözümlerin askine Jekyll dosyalarınız GitHub tarafından *yine ücretsiz* bir şekilde host ediliyor. Bu gerçekten insanın üstünden yük alıyor.

Jekyll'ın dezavantajı ise çok bariz. Normalde müşterinize hazırlayacağınız bloga veya içerik yönetim sistemine yine müşterinizin bizzat girip kolayca içerik girmesini sağlayabilirsiniz. Jekyll'da böyle şeyler elbette yok. Bu sebeple yazılımcılardan ya da meraklılardan başka kullanan sayısı artmayabilir. Buna çözümler arasında <a href="http://prose.io">Prose.io</a>'yu önerebilirim. GitHub'da barındırdığınız Jekyll sitelerine erişime izin veriyor ve yeni içerik ekleme olayını neredeyse blogspot, wordpress.com kolaylığına indirgiyor. Healthcare.gov'un blog bölümlerinin Jekyll ile çalıştığını ve o takımın bu Prose.io uygulamasını oraya kolayca içerik eklemek üzere hazırladığını belirtmem gerek.

Çorba gibi post oldu valla. Sonra editlemek üzere.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>429</wp:post_id>
  <wp:post_date>2016-03-10 16:23:59</wp:post_date>
  <wp:post_date_gmt>2016-03-10 16:23:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>jekyll-ile-web-sitesi-hazirlama</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20625632407]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>PHP 5.3 İçin Bir Paket Derlemesi</title>
  <link>https://dikendine.wordpress.com/2016/03/13/php-5-3-icin-bir-paket-derlemesi/</link>
  <pubDate>Sun, 13 Mar 2016 18:25:10 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=504</guid>
  <description/>
  <content:encoded><![CDATA[Okulun sunucuları halen ve halen PHP 5.3 çalıştırdığı için buna uygun bir şeyler bulmak epey zor oldu. Hazırladığım site için yapmam gerekenleri önce kendim, tabiri caizse "vanilla PHP" kullanarak yapmaya başladım. Ancak PHP temaları arasında foreach, echo diye takılmak ortalığı baya çorba yaptı. Üstelik güzel tema motorlarında olduğu gibi block ve extend yapmak zordu. Tekrar kullanılabilirlik baya düşüktü.

O yüzden ilk olarak <a href="http://twig.sensiolabs.org" target="_blank">Twig</a> paketini çektim muhteşem Composer sayesinde. İşlemin kolaylığının tadına varamayınca başka ne paketler bulurum da mümkün olduğunca standartlaşmış, kalitesi kanıtlanmış kod kullanırım diye bakınmaya başladım. Önce database ismi, şifreleri gibi konfigürasyon değişkenlerini çekmek için <a href="https://github.com/vlucas/phpdotenv" target="_blank">phpdotenv</a> paketini buldum. Bu paket Laravel'de de kullanılıyor. Daha sonra ActiveRecord tarzı kolay bir veritabanı soyutlaştırma katmanı (abstraciton layer) arayışına girdim. O alan çok hızlı gelişiyor değişiyor ve belki de bu yüzden PHP 5.3 destekleyen pek az paket bulabildim. Bulup da kolayca kullanabildiğim paket <a href="http://j4mie.github.io/idiormandparis/" target="_blank">Paris</a> oldu.

Bunları birleştirdiğim zaman elime çok primitif bir framework çıktı aslında. Framework demeye bin şahit ister gerçi. Bunu da <a href="https://github.com/raicem/slimv2-paris-twig" target="_blank">GitHub'da yayınladım </a>Buradan ulaşabilirsiniz. Bazı sorunları var. Mesela güzel bir router ve controller bağlantısı olsa mis gibi olacaktı. Zamanla o da olur belki.

Yüklemek için git reposunu kendi bilgisayarınıza clone edin. Daha sonra klasörün içinden composer install dediğiniz zaman gerekli paketler yüklenecektir. Veritabanı şifrelerini falan girdikten sonra modellerinizi ve route'larınızı girerek olaya dalabilirsiniz.

Bu işlerde yeniyim, her türlü yorum beni mutlu eder.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>504</wp:post_id>
  <wp:post_date>2016-03-13 18:25:10</wp:post_date>
  <wp:post_date_gmt>2016-03-13 18:25:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>php-5-3-icin-bir-paket-derlemesi</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20720056760]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>PHP 5.3 Frameworky Thingy</title>
  <link>https://dikendine.wordpress.com/2016/03/13/php-5-3-frameworky-thingy/</link>
  <pubDate>Sun, 13 Mar 2016 18:42:24 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=523</guid>
  <description/>
  <content:encoded><![CDATA[First of all, I'm a newbie. But I enjoy this so I will share it.

I got the task of building a university website. But the thing is, university servers are still running PHP 5.3. Using any new framework was out of the question. Since I was a newbie, I said I'll do all of the things by myself. But the code got spaghetti fast. First I installed Twig templating engine to make templates nicer and code re-usable. Using composer to pull in packages was so much fun, that I started to look for other packages that I can use and streamline my code. I installed <a href="https://github.com/vlucas/phpdotenv" target="_blank">phpdotenv</a> and <a href="http://j4mie.github.io/idiormandparis/" target="_blank">Paris ORM</a> afterwards.

Then I said to myself, I need prettier urls, better routing and proper MVC structure since I don't want 22 *.php files for 22 different pages in website. I used Slim framework v2 because it supports PHP 5.3. This may also help future developers for that website.

I realized this turned into a small package that I can reuse in next projects. So I'm publishing this through my GitHub account.

https://github.com/raicem/slimv2-paris-twig

As you can see, this is fairly barebones and basic. There is Slim as the core, Twig for templating and Paris for accesing the database. There is no real controller package that points to specific contoller methods from the router. I do this manually here, but can be replaced by other packages out there. You can Google, Slim controllers.

Also as you can see in start.php, I don't use Slim containers for connecting Paris. Because:

<a href="http://knowyourmeme.com/photos/234765-i-have-no-idea-what-i-m-doing"><img src="http://i2.kym-cdn.com/photos/images/original/000/234/765/b7e.jpg" alt="" /></a>

As I said, I'm a newbie so any comments are appreciated.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>523</wp:post_id>
  <wp:post_date>2016-03-13 18:42:24</wp:post_date>
  <wp:post_date_gmt>2016-03-13 18:42:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>php-5-3-frameworky-thingy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_oembed_8502f985c14e4040e87fcd1284dde038</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c08e2fe15ce940ab44e082932f557a84</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20720459757]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Laravel Database Seeding Many to Many Relationships</title>
  <link>https://dikendine.wordpress.com/2016/03/13/laravel-database-seeding-many-to-many-relationships/</link>
  <pubDate>Sun, 13 Mar 2016 19:49:27 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=549</guid>
  <description/>
  <content:encoded><![CDATA[I'm in love with the Laravel's database seeding facilities. I just found them out last week and they made me faster developer. Also gives you the ability to switch between different computers without worrying about your database. Just pull from GitHub and run your migrations along with the seeding.

First let's look how you can complete a simple seeding. In order seed something, you have to first create a factory for that model. Laravel comes with a ModelFactory.php within the database / factories folder structure. As you know Laravel has pre-defined User class. (I guess) Starting from the Laravel 5.2, ModelFactory class contains a factory defined specifically for that User model. That's great when figuring these out. I'm not gonna use that for this example.

Let's say we keep a list of shops in our database. For example, these can be shops in your neighbourhood. Lets say Shop model points to just two database columns, id and name. You can use the model factory below to create shops database table.

[code language="php"]
$factory-&gt;define(App\Shop::class, function (Faker\Generator $faker) {
  return [
    'name' =&gt; $faker-&gt;company,
  ];
});
[/code]

Let's say you want to catalog these shops with their fields. Examples may be, barber shop, grocery store, coffee shop etc. You have Field model for this. Model factory for the Field model can be this with 5 different fields:

[code language="php"]
$factory-&gt;define(App\Field::class, function (Faker\Generator $faker) {
  return [
    'name' =&gt;; $faker-&gt;randomElement($array = ['barber', 'grocery', 'coffee shop', 'market', '2nd hand store']),
  ];
});
[/code]

As you can see this creates a many-to-many relationship between Shop and Field models. <a href="https://laravel.com/docs/5.2/testing#model-factories" target="_blank">According to the documentation</a> when you are seeding many to many relationships you can do this:

[code language="php"]
factory(App\Shop::class, 50)-&gt;create()-&gt;each(function($a) {
  $a-&gt;fields()-&gt;save(factory(App\Field::class)-&gt;make());
});
[/code]

This will work. However, while this creates 50 shops, it does not respect the fact that we only have 5 fields of shops. It will create 50 rows in shops table and 50 rows fields table, even though most of the fields will be the same name (since we have 5 values to fill 50 places). That may be a problem for example, accesing the shops that are coffee shops. There will never be a result set more than one. Since every shop will be attached to a new field row with a unique id.

As far as I can see, solution to this problem is not clear in the documentation. After calling the closure you are able to access any Eloquent functionality normally available to you. This means if you populate your fields database table first, then you can access them while populating your Shop class.

[code language="php"]
factory(App\Field::class, 5)-&gt;create();
factory(App\Shop::class, 50)-&gt;create()-&gt;each(function($a) {
  $a-&gt;fields()-&gt;attach(App\Field::all()-&gt;random(1));
});
[/code]

So what you can do is above. First seed your Field model. Then attach from that model randomly to have desired relationships. This will make sure your Field model will only have 5 values you pass with the array (Dont't forget to call unique() in the faker method).]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>549</wp:post_id>
  <wp:post_date>2016-03-13 19:49:27</wp:post_date>
  <wp:post_date_gmt>2016-03-13 19:49:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>laravel-database-seeding-many-to-many-relationships</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20722047906]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Güzel PHP Kaynakları</title>
  <link>https://dikendine.wordpress.com/2016/04/13/guzel-php-kaynaklari/</link>
  <pubDate>Wed, 13 Apr 2016 21:57:24 +0000</pubDate>
  <dc:creator>raicem</dc:creator>
  <guid isPermaLink="false">https://dikendine.wordpress.com/?p=678</guid>
  <description/>
  <content:encoded><![CDATA[PHP. Davamız. Tartışmalarımız. Dalga geçilenimiz ve son dönemde kendine gelmeye çalışanımız.

Aptalca bir başlangıç oldu.

İnternette gezerken geçerliliğini yitirmiş PHP kaynaklarının güzelmiş gibi paylaşılmasına rastlıyorum ve üzülüyorum. PHP'nin bu kadar uzun zamandır ortalıkta olmasının dezavantajlarından biri bu. Doğal. Ancak yine de Ekşi Sözlük'te, 2015 yılında, "en iyi kaynak" denilerek <a href="http://www.homeandlearn.co.uk/php/php.html" target="_blank">şu linkin</a> paylaşılmasını sindiremiyorum. MYSQL fonksiyonları var lan bunda!! 5.5'ten beri deprecate olan, 7.0 ile tamamen kalkmış fonksiyonlar bunlar.

Bunlara tepki olarak gördüğüm güzel PHP kaynaklarını burada toplamaya karar verdim.

<a href="http://code.tutsplus.com/courses/php-fundamentals" target="_blank">Jeffrey Way ve PHP Fundamentals
</a>Jeffrey Way Laracasts'i kurup yürümeden önce bu sitedeydi ve yine aynı kalitede videolar yapıyordu. Eğer PHP'ye yeni başlıyorsanız veya web ile alakasız başka bir programlama dilinden geliyorsanız inanılmaz faydalı olabilecek, modern PHP uygulamalarının açıklandığı (bak anlatıldığı demedim, açıklandığı) muhteşem bir seri.

İtiraf etmeliyim, bu işlere başlarken dedim ki ben araştırayım. Bu programlama dili öğrenmek belli ki yatırım gibi bi şey. Geleceği kısıtlı dillere vakit harcamak istemem. Ne yaptım? Gittim Google'a sordum. "Best languages to learn in 2014", "Best language for web development".

Karşıma hep iki tane sonuç çıktı. Python/Django ve Node.Js. İyi dedim süper. Node.Js çok karmaşık bir platforma benziyor, ben daha kullanıcı dostu gözüken Python'u öğreneyim. Codecademy'ye yazıldık, Python kurslarımıza devam ettik. Bir müddet sonra Django kurcalamaya başladık.

Hüsran, hüsran, hüsran. HTML, CSS ve copy-paste jQuery'den çıkmışım, dinamik site yapmaya girmek istiyorum. Önüme belli ki pek çok insanın hayatını değiştiren teknoloji sunuluyor ama beceremiyorum. Python çalıştım, anladım. Ama bu Django denen şey de neydi ki? Framework olduğunu da anlıyorum, tutorialları izleyerek blog da yapıyorum ama bu bloga yeni bir özellik eklemeye gelince ne yapmam gerektiği hakkında en ufak bir bilgim yok. Flask dediler, onla başla dediler. Şu herifin tutoriallarını takip ediyorum ama bu relational database dedikleri nedir ki? Takılıyorum. Haydi hepsini atlasam ben bu Python uygulamasını nasıl sunucuda çalıştıracağım en ufak fikrim yok.

İşte öyle öyle bu işi bıraktım. Bir daha da denemedim. Ta ki bi iş için lazım olana kadar. Bana HTML ve CSS'i rahatlıkla öğreten Jeffrey Way'in şu "uncool" diye yerilen PHP programlama diline bakayım dedim. Video 1, video 2, video 3... Seri bitti ve aydınlandım.

Sorun bence ne Python'da, ne Django'da ne de herhangi bir şeyde. Sorun bence bu gibi yeni başlayan statik siteden gelenlere, framework eksenli tavsiye verenlerde. Ben bunu şimdi daha net anlayabiliyorum. Çünkü framework'ler insanların senelerden beri yaşadığı sorunlara çözüm getiren, ya da yazıkları benzer kodları standartlaştıran, tekrar kullanılabilirlik getiren, bazen bir klasör yapısı, bazen bir mimari empoze eden bir çözümler yumağı. Bu anlamda muhteşemler. Ancak şu anlamda muhteşem değiller. Ben bir yeni başlayan olarak, insanların yaşadığı bu sorunlar neydi; onları bilmiyorum ki çözümlerini öğrenebileyim.

İşte Jeffrey Way'in bu seride çok iyi becerdiği şey bu. Evet sıfırdan başlıyor anlatmaya, ancak hiç sıkıcı olmuyor. Derhal ufak projeler yapmaya başlıyorsunuz ve işin muhteşemi Jeffrey Way size önce sorunu gösteriyor daha çözümlerini uyguluyor. Seri sonra erdiğinde biz neden modeller ile controller dosyalarını birbirinden ayırdık demiyorsunuz.

Ne kadar konuştum. Anlayacağınız üzere, bu seriye çok şey borçluyum.

<strong><a href="http://www.phptherightway.com" target="_blank">PHP The Right Way</a></strong>

PHP üzerine çalışan, bu dilin ölüp gitmemesi için emek sarfeden tayfaya çok şey borçluyuz. Onların ortaya çıkardığı en önemli eser belki de bu web sayfası. 2016 yılında PHP geliştirme yapacaksanız uğramanız gereken ilk adreslerden biri burası. İlgili konular oldukça net bir şekilde açıklanıyor, daha fazlasını isteyen için gerekli linkler veriliyor.

Meraklısı için, <a href="http://www.phptherightway.com/#translations" target="_blank">Türkçe versiyonu da gözüküyor</a> ancak ben erişemedim.

<strong><a href="http://symfony.com/doc/current/book/index.html">Symfony Kitabı</a></strong>

Bu kitabın ilk bölümleri, sade PHP'den framework'lere geçiş yapacaklar için biçilmiş bir kaftan.

Bence eğitim ve öğretimin en önemli sorunlarından biri, öğrenirken sorunları kaçırmamız ve çözümlere odaklanmamız. En basiti MVC. Bu MVC neden var? Olmasa ne olurdu? Veya framework'ler neden var? İnsanlar frameworksüz bir dünyada ne gibi problemler yaşıyordu? Bu problemleri yaşamadan, deneyimlemeden, anlamadan ilerlemek kimseye fayda sağlamıyor. O yüzden en tepeye Jeffrey Way'in PHP Fundamentals serisini koydum çünkü size sorunları göstererek adım adım MVC'ye yürütüyor. Aynı işi Symfony kitabı da başarıyor. Problemleri göstererek, HTTP'yi anlatarak modern frameworklerin getirdiği kolaylıkları açıklıyor.

Symfony öğrenmeye çalışmıyorsanız bile <a href="http://symfony.com/doc/current/book/http_fundamentals.html" target="_blank">Symfony and HTTP Fundamentals</a> ve <a href="http://symfony.com/doc/current/book/from_flat_php_to_symfony2.html" target="_blank">Symfony versus Flat PHP</a> bölümlerini okumalısınız.

<strong><a href="http://shop.oreilly.com/product/0636920033868.do" target="_blank">Modern PHP Kitabı</a></strong>

Bu kitabın yazarı, oldukça popüler <a href="http://www.slimframework.com" target="_blank">Slim Framework</a>'ün yaratıcısı ve yukarıda bahsettiğim PHP The Right Way sitesinin paydaşlarından <a href="https://twitter.com/codeguy" target="_blank">Josh Lockhart</a>. Bu orta seviye PHP bilginizin olduğunu varsayan bir kitap. Aslında alıp bi yandan metin editöründe kod yazdıracak bir kitap gibi değil. İçinde kod örnekleri de olmasına rağmen adeta bir rehber, yol gösterici bir kitap gibi. Uygulama geliştirirken, kodlarken, deploy ederken kaynak olarak kullanılacak, adeta bir başucu kitabı.

<strong><a href="https://laracasts.com" target="_blank">Laracasts</a></strong>

Elephant in the room. Elbette Laracasts'ten bahsetmeden olmaz. Hem Jeffrey Way'in bana kattıklarına bir teşekkür olarak hem de internetteki en güzel kaynaklarından biri olduğu için üyeyim. Aylık faturam geldiğinde içimden geçen tek cümle şu: "Oh, feda olsun". PHP'nin, nesne yönelimli programlamanın, Laravel'in yanında, Git'i, Gulp'i ve daha nicesini buradan öğrendim ve öğrenmeye devam ediyorum. Daha da yazmama gerek yok bence.

<strong><a href="https://www.youtube.com/user/phpacademy" target="_blank">Codecourse</a></strong>

Eski adıyla PHP Academy, yeni adıyla Codecourse. Alex Garrett adlı kişinin yürüttüğü bir YouTube kanalı. O sebeple ücretsiz güzel bir kaynak. Genel tutorial yanında, oldukça fazla örnek proje yapması açısından başarılı. Örnek projeleri takip ederek kendinizi çok hızlı bir şekilde geliştirebilirsiniz. Composer, Slim Framework, Laravel ve diğer önemli PHP paketlerinin hemen hepsine değinir. O bakımdan güncel kalmak için de takip edilmeli.

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>678</wp:post_id>
  <wp:post_date>2016-04-13 21:57:24</wp:post_date>
  <wp:post_date_gmt>2016-04-13 21:57:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>guzel-php-kaynaklari</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="arduino-bisiklet-isigi"><![CDATA[Arduino Bisiklet Işığı]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[21759576199]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
